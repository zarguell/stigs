{"Title": "VMware vSphere 6.7 Virgo-Client Security Technical Implementation Guide", "Description": "This Security Technical Implementation Guide is published as a tool to improve the security of Department of Defense (DoD) information systems. The requirements are derived from the National Institute of Standards and Technology (NIST) 800-53 and related documents. Comments or proposed revisions to this document should be sent via email to the following address: disa.stig_spt@mail.mil.", "Version": "1", "Release": "1 ", "BenchmarkDate": "09 Mar 2021", "ReleaseInfo": "Release: 1 Benchmark Date: 09 Mar 2021", "Source": "STIG.DOD.MIL", "Notice": "terms-of-use", "Rules": [{"VulnID": "V-239743", "RuleID": "SV-239743r679456_rule", "StigID": "VCFL-67-000001", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-APP-000001-WSR-000001", "RuleTitle": "vSphere Client must limit the amount of time that each TCP connection is kept alive.", "Description": "<VulnDiscussion>Denial of service (DoS) is one threat against web servers. Many DoS attacks attempt to consume web server resources in such a way that no more resources are available to satisfy legitimate requests. \n\nIn Virgo, the \"connectionTimeout\" attribute sets the number of milliseconds the server will wait after accepting a connection for the request URI line to be presented. This timeout will also be used when reading the request body (if any). This prevents idle sockets that are not sending HTTP requests from consuming system resources and potentially denying new connections.\n\nSatisfies: SRG-APP-000001-WSR-000001, SRG-APP-000435-WSR-000148</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Denial of service (DoS) is one threat against web servers. Many DoS attacks attempt to consume web server resources in such a way that no more resources are available to satisfy legitimate requests. \n\nIn Virgo, the \"connectionTimeout\" attribute sets the number of milliseconds the server will wait after accepting a connection for the request URI line to be presented. This timeout will also be used when reading the request body (if any). This prevents idle sockets that are not sending HTTP requests from consuming system resources and potentially denying new connections.\n\nSatisfies: SRG-APP-000001-WSR-000001, SRG-APP-000435-WSR-000148", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "At the command prompt, execute the following command:\n\n# xmllint --format --xpath '/Server/Service/Connector[@port=\"9090\"]/@connectionTimeout' /usr/lib/vmware-vsphere-client/server/configuration/tomcat-server.xml\n\nExpected result:\n\nconnectionTimeout=\"20000\"\n\nIf the output does not match the expected result, this is a finding.", "FixText": "Navigate to and open /usr/lib/vmware-vsphere-client/server/configuration/tomcat-server.xml.\n\nConfigure each <Connector> node with the following:\n\nconnectionTimeout=\"20000\"", "CCI": "CCI-000054,CCI-002385"}, {"VulnID": "V-239744", "RuleID": "SV-239744r679459_rule", "StigID": "VCFL-67-000002", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-APP-000001-WSR-000001", "RuleTitle": "vSphere Client must limit the number of concurrent connections permitted.", "Description": "<VulnDiscussion>Resource exhaustion can occur when an unlimited number of concurrent requests are allowed on a website, facilitating a denial-of-service attack. Unless the number of requests is controlled, the web server can consume enough system resources to cause a system crash.\n\nMitigating this kind of attack will include limiting the number of concurrent HTTP/HTTPS requests. In Virgo, each incoming request requires a thread for the duration of that request. If more simultaneous requests are received than can be handled by the currently available request processing threads, additional threads will be created up to the value of the \"maxThreads\" attribute.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Resource exhaustion can occur when an unlimited number of concurrent requests are allowed on a website, facilitating a denial-of-service attack. Unless the number of requests is controlled, the web server can consume enough system resources to cause a system crash.\n\nMitigating this kind of attack will include limiting the number of concurrent HTTP/HTTPS requests. In Virgo, each incoming request requires a thread for the duration of that request. If more simultaneous requests are received than can be handled by the currently available request processing threads, additional threads will be created up to the value of the \"maxThreads\" attribute.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "At the command prompt, execute the following command:\n\n# xmllint --format --xpath '/Server/Service/Connector/@maxThreads' /usr/lib/vmware-vsphere-client/server/configuration/tomcat-server.xml\n\nExpected result:\n\nmaxThreads=\"800\" maxThreads=\"800\"\n\nIf the output does not match the expected result, this is a finding.", "FixText": "Navigate to and open /usr/lib/vmware-vsphere-client/server/configuration/tomcat-server.xml.\n\nConfigure each <Connector> node with the following:\n\nmaxThreads=\"800\"", "CCI": "CCI-000054"}, {"VulnID": "V-239745", "RuleID": "SV-239745r679462_rule", "StigID": "VCFL-67-000003", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-APP-000001-WSR-000001", "RuleTitle": "vSphere Client must limit the maximum size of a POST request.", "Description": "<VulnDiscussion>The \"maxPostSize\" value is the maximum size in bytes of the POST that will be handled by the container FORM URL parameter parsing. Limit its size to reduce exposure to a denial-of-service attack. \n\nIf \"maxPostSize\" is not set, the default value of 2097152 (2MB) is used. Security Token Service is configured in its shipping state to not set a value for \"maxPostSize\".</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "The \"maxPostSize\" value is the maximum size in bytes of the POST that will be handled by the container FORM URL parameter parsing. Limit its size to reduce exposure to a denial-of-service attack. \n\nIf \"maxPostSize\" is not set, the default value of 2097152 (2MB) is used. Security Token Service is configured in its shipping state to not set a value for \"maxPostSize\".", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "At the command prompt, execute the following command:\n\n# xmllint --format --xpath '/Server/Service/Connector/@maxPostSize' /usr/lib/vmware-vsphere-client/server/configuration/tomcat-server.xml\n\nExpected result:\n\nXPath set is empty\n\nIf the output does not match the expected result, this is a finding.", "FixText": "Navigate to and open /usr/lib/vmware-vsphere-client/server/configuration/tomcat-server.xml.\n\nNavigate to each of the <Connector> nodes.\n\nRemove any configuration for \"maxPostSize\".", "CCI": "CCI-000054"}, {"VulnID": "V-239746", "RuleID": "SV-239746r679465_rule", "StigID": "VCFL-67-000004", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-APP-000001-WSR-000002", "RuleTitle": "vSphere Client must protect cookies from XSS.", "Description": "<VulnDiscussion>Cookies are a common way to save session state over the HTTP(S) protocol. If an attacker can compromise session data stored in a cookie, they are better able to launch an attack against the server and its applications. \n\nWhen a cookie is tagged with the \"HttpOnly\" flag, it tells the browser that this particular cookie should only be accessed by the originating server. Any attempt to access the cookie from client script is strictly forbidden.\n\nSatisfies: SRG-APP-000001-WSR-000002, SRG-APP-000223-WSR-000011, SRG-APP-000439-WSR-000154</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Cookies are a common way to save session state over the HTTP(S) protocol. If an attacker can compromise session data stored in a cookie, they are better able to launch an attack against the server and its applications. \n\nWhen a cookie is tagged with the \"HttpOnly\" flag, it tells the browser that this particular cookie should only be accessed by the originating server. Any attempt to access the cookie from client script is strictly forbidden.\n\nSatisfies: SRG-APP-000001-WSR-000002, SRG-APP-000223-WSR-000011, SRG-APP-000439-WSR-000154", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "At the command prompt, execute the following command:\n\n# xmllint --xpath '/Context/@useHttpOnly' /usr/lib/vmware-vsphere-client/server/configuration/context.xml\n\nExpected result:\n\nuseHttpOnly=\"true\"\n\nIf the output does not match the expected result, this is a finding.", "FixText": "Navigate to and open /usr/lib/vmware-vsphere-client/server/configuration/context.xml.\n\nConfigure the <Context> node as follows:\n\n<Context useHttpOnly=\"true\">", "CCI": "CCI-000054,CCI-001664,CCI-002418"}, {"VulnID": "V-239747", "RuleID": "SV-239747r679468_rule", "StigID": "VCFL-67-000005", "Severity": "high", "Cat": "CAT I", "Classification": "", "GroupTitle": "SRG-APP-000014-WSR-000006", "RuleTitle": "vSphere Client must be configured with FIPS 140-2 compliant ciphers for HTTPS connections.", "Description": "<VulnDiscussion>Encryption of data in flight is an essential element of protecting information confidentiality. If a web server uses weak or outdated encryption algorithms, the server's communications can potentially be compromised.\n\nThe US Federal Information Processing Standards (FIPS) publication 140-2, Security Requirements for Cryptographic Modules (FIPS 140-2), approved ciphers provide the maximum level of encryption possible for a private web server.\n\nThe Tomcat connector listening on 9443 comes preconfigured with appropriate FIPS ciphers by default, but this must be verified.\n\nSatisfies: SRG-APP-000014-WSR-000006, SRG-APP-000179-WSR-000110, SRG-APP-000439-WSR-000188</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Encryption of data in flight is an essential element of protecting information confidentiality. If a web server uses weak or outdated encryption algorithms, the server's communications can potentially be compromised.\n\nThe US Federal Information Processing Standards (FIPS) publication 140-2, Security Requirements for Cryptographic Modules (FIPS 140-2), approved ciphers provide the maximum level of encryption possible for a private web server.\n\nThe Tomcat connector listening on 9443 comes preconfigured with appropriate FIPS ciphers by default, but this must be verified.\n\nSatisfies: SRG-APP-000014-WSR-000006, SRG-APP-000179-WSR-000110, SRG-APP-000439-WSR-000188", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "At the command prompt, execute the following command:\n\n# xmllint --format --xpath '/Server/Service/Connector[@port=9443]/SSLHostConfig/@ciphers' /usr/lib/vmware-vsphere-client/server/configuration/tomcat-server.xml\n\nExpected result:\n\nciphers=\"TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384,TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384,TLS_RSA_WITH_AES_256_CBC_SHA256,TLS_ECDH_RSA_WITH_AES_256_CBC_SHA,TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA,TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDH_RSA_WITH_AES_128_CBC_SHA,TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_128_CBC_SHA\"\n\nIf the output does not match the expected result, this is a finding.", "FixText": "Navigate to and open /usr/lib/vmware-vsphere-client/server/configuration/tomcat-server.xml.\n\nEnsure that the SSLHostConfig contains the following value:\n\nciphers=\"TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384,TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384,TLS_RSA_WITH_AES_256_CBC_SHA256,TLS_ECDH_RSA_WITH_AES_256_CBC_SHA,TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA,TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDH_RSA_WITH_AES_128_CBC_SHA,TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_128_CBC_SHA\"", "CCI": "CCI-000068,CCI-002418"}, {"VulnID": "V-239748", "RuleID": "SV-239748r679471_rule", "StigID": "VCFL-67-000006", "Severity": "high", "Cat": "CAT I", "Classification": "", "GroupTitle": "SRG-APP-000015-WSR-000014", "RuleTitle": "vSphere Client must be configured to enable SSL/TLS.", "Description": "<VulnDiscussion>Data exchanged between the user and the web server can range from static display data to credentials used to log into the hosted application. Even when data appears to be static, the non-displayed logic in a web page may expose business logic or trusted system relationships. The integrity of all the data being exchanged between the user and web server must always be trusted. To protect the integrity and trust, encryption methods should be used to protect the complete communication session.\n\nHTTP connections in Virgo are managed through the Connector object. The vSphere Client endpoint has two connectors. One is behind a reverse proxy, which terminates TLS, and the other is serving SSL/TLS natively on 9443. The first will be addressed in a separate STIG, while this control addresses ensuring SSL/TLS is enabled on the 9443 connector.\n\nSatisfies: SRG-APP-000015-WSR-000014, SRG-APP-000172-WSR-000104, SRG-APP-000315-WSR-000004, SRG-APP-000439-WSR-000151, SRG-APP-000439-WSR-000152, SRG-APP-000439-WSR-000156, SRG-APP-000442-WSR-000182</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Data exchanged between the user and the web server can range from static display data to credentials used to log into the hosted application. Even when data appears to be static, the non-displayed logic in a web page may expose business logic or trusted system relationships. The integrity of all the data being exchanged between the user and web server must always be trusted. To protect the integrity and trust, encryption methods should be used to protect the complete communication session.\n\nHTTP connections in Virgo are managed through the Connector object. The vSphere Client endpoint has two connectors. One is behind a reverse proxy, which terminates TLS, and the other is serving SSL/TLS natively on 9443. The first will be addressed in a separate STIG, while this control addresses ensuring SSL/TLS is enabled on the 9443 connector.\n\nSatisfies: SRG-APP-000015-WSR-000014, SRG-APP-000172-WSR-000104, SRG-APP-000315-WSR-000004, SRG-APP-000439-WSR-000151, SRG-APP-000439-WSR-000152, SRG-APP-000439-WSR-000156, SRG-APP-000442-WSR-000182", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "At the command prompt, execute the following command:\n\n# xmllint --format --xpath '/Server/Service/Connector[@port=9443]/@SSLEnabled' /usr/lib/vmware-vsphere-client/server/configuration/tomcat-server.xml\n\nExpected result:\n\nSSLEnabled=\"true\"\n\nIf the output does not match the expected result, this is a finding.", "FixText": "Navigate to and open /usr/lib/vmware-vsphere-client/server/configuration/tomcat-server.xml.\n\nEnsure that the <Connector> node with 'port=9443' contains the following value:\n\nSSLEnabled=\"true\"", "CCI": "CCI-000197,CCI-000803,CCI-001453,CCI-002314,CCI-002418,CCI-002422"}, {"VulnID": "V-239749", "RuleID": "SV-239749r679474_rule", "StigID": "VCFL-67-000007", "Severity": "high", "Cat": "CAT I", "Classification": "", "GroupTitle": "SRG-APP-000015-WSR-000014", "RuleTitle": "vSphere Client must be configured to only communicate over TLS 1.2.", "Description": "<VulnDiscussion>Data exchanged between the user and the web server can range from static display data to credentials used to log in to the hosted application. Even when data appears to be static, the non-displayed logic in a web page may expose business logic or trusted system relationships. The integrity of all the data being exchanged between the user and web server must always be trusted. To protect the integrity and trust, encryption methods should be used to protect the complete communication session.\n\nHTTP connections in Virgo are managed through the Connector object. The vSphere Client endpoint has two connectors. One is behind a reverse proxy that terminates TLS and the other is serving TLS natively on 9443. The first will be addressed in a separate STIG, while this control addresses ensuring TLS is enabled on the 9443 connector.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Data exchanged between the user and the web server can range from static display data to credentials used to log in to the hosted application. Even when data appears to be static, the non-displayed logic in a web page may expose business logic or trusted system relationships. The integrity of all the data being exchanged between the user and web server must always be trusted. To protect the integrity and trust, encryption methods should be used to protect the complete communication session.\n\nHTTP connections in Virgo are managed through the Connector object. The vSphere Client endpoint has two connectors. One is behind a reverse proxy that terminates TLS and the other is serving TLS natively on 9443. The first will be addressed in a separate STIG, while this control addresses ensuring TLS is enabled on the 9443 connector.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "At the command prompt, execute the following command:\n\n# xmllint --format --xpath '/Server/Service/Connector[@port=9443]/SSLHostConfig/@protocols' /usr/lib/vmware-vsphere-client/server/configuration/tomcat-server.xml\n\nExpected result:\n\nprotocols=\"TLSv1.2\"\n\nIf the output does not match the expected result, this is a finding.", "FixText": "Navigate to and open /usr/lib/vmware-vsphere-client/server/configuration/tomcat-server.xml.\n\nEnsure that the <SSLHostConfig> node contains the following value:\n\nprotocols=\"TLSv1.2\"", "CCI": "CCI-001453"}, {"VulnID": "V-239750", "RuleID": "SV-239750r679477_rule", "StigID": "VCFL-67-000008", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-APP-000015-WSR-000014", "RuleTitle": "vSphere Client must be configured to use the HTTPS scheme.", "Description": "<VulnDiscussion>Data exchanged between the user and the web server can range from static display data to credentials used to log into the hosted application. Even when data appears to be static, the non-displayed logic in a web page may expose business logic or trusted system relationships. The integrity of all the data being exchanged between the user and web server must always be trusted. To protect the integrity and trust, encryption methods should be used to protect the complete communication session.\n\nHTTP connections in Virgo are managed through the Connector object. The vSphere Client endpoint has two connectors. One is behind a reverse proxy that terminates TLS and the other is serving TLS natively on 9443. The first will be addressed in a separate STIG, while this control addresses ensuring TLS is enabled on the 9443 connector.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Data exchanged between the user and the web server can range from static display data to credentials used to log into the hosted application. Even when data appears to be static, the non-displayed logic in a web page may expose business logic or trusted system relationships. The integrity of all the data being exchanged between the user and web server must always be trusted. To protect the integrity and trust, encryption methods should be used to protect the complete communication session.\n\nHTTP connections in Virgo are managed through the Connector object. The vSphere Client endpoint has two connectors. One is behind a reverse proxy that terminates TLS and the other is serving TLS natively on 9443. The first will be addressed in a separate STIG, while this control addresses ensuring TLS is enabled on the 9443 connector.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "At the command prompt, execute the following command:\n\n# xmllint --format --xpath '/Server/Service/Connector[@port=9443]/@scheme' /usr/lib/vmware-vsphere-client/server/configuration/tomcat-server.xml\n\nExpected result:\n\nscheme=\"https\"\n\nIf the output does not match the expected result, this is a finding.", "FixText": "Navigate to and open /usr/lib/vmware-vsphere-client/server/configuration/tomcat-server.xml.\n\nEnsure that the <Connector> node with 'port=9443' contains the following value:\n\nscheme=\"https\"", "CCI": "CCI-001453"}, {"VulnID": "V-239751", "RuleID": "SV-239751r679542_rule", "StigID": "VCFL-67-000009", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-APP-000016-WSR-000005", "RuleTitle": "vSphere Client must record user access in a format that enables monitoring of remote access.", "Description": "<VulnDiscussion>Remote access can be exploited by an attacker to compromise the server. By recording all remote access activities, it will be possible to determine the attacker's location, intent, and degree of success.\n\nVirgo can be configured with an \"AccessLogValve\", a component that can be inserted into the request processing pipeline to provide robust access logging. The AccessLogValve creates log files in the same format as those created by standard web servers. When AccessLogValve is properly configured, log files will contain all the forensic information necessary in the case of a security incident.\n\nSatisfies: SRG-APP-000016-WSR-000005, SRG-APP-000089-WSR-000047, SRG-APP-000092-WSR-000055, SRG-APP-000095-WSR-000056, SRG-APP-000096-WSR-000057, SRG-APP-000097-WSR-000058, SRG-APP-000098-WSR-000059, SRG-APP-000098-WSR-000060, SRG-APP-000099-WSR-000061, SRG-APP-000100-WSR-000064, SRG-APP-000374-WSR-000172, SRG-APP-000375-WSR-000171</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Remote access can be exploited by an attacker to compromise the server. By recording all remote access activities, it will be possible to determine the attacker's location, intent, and degree of success.\n\nVirgo can be configured with an \"AccessLogValve\", a component that can be inserted into the request processing pipeline to provide robust access logging. The AccessLogValve creates log files in the same format as those created by standard web servers. When AccessLogValve is properly configured, log files will contain all the forensic information necessary in the case of a security incident.\n\nSatisfies: SRG-APP-000016-WSR-000005, SRG-APP-000089-WSR-000047, SRG-APP-000092-WSR-000055, SRG-APP-000095-WSR-000056, SRG-APP-000096-WSR-000057, SRG-APP-000097-WSR-000058, SRG-APP-000098-WSR-000059, SRG-APP-000098-WSR-000060, SRG-APP-000099-WSR-000061, SRG-APP-000100-WSR-000064, SRG-APP-000374-WSR-000172, SRG-APP-000375-WSR-000171", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "At the command prompt, execute the following command:\n\n# xmllint --format /usr/lib/vmware-vsphere-client/server/configuration/tomcat-server.xml | sed '2 s/xmlns=\".*\"//g' |  xmllint --xpath '/Server/Service/Engine/Host/Valve[@className=\"org.apache.catalina.valves.AccessLogValve\"]'/@pattern -\n\nExpected result:\n\npattern=\"%h %{x-forwarded-for}i %l %u %t &quot;%r&quot; %s %b %{#hashedSessionId#}s %I %D\"\n\nIf the output does not match the expected result, this is a finding.", "FixText": "Navigate to and open /usr/lib/vmware-vsphere-client/server/configuration/tomcat-server.xml.\n\nEnsure the log pattern in the \"org.apache.catalina.valves.AccessLogValve\" node is set to the following:\n\npattern=\"%h %{x-forwarded-for}i %l %u %t &quot;%r&quot; %s %b %{#hashedSessionId#}s %I %D\"", "CCI": "CCI-000067,CCI-000130,CCI-000131,CCI-000132,CCI-000133,CCI-000134,CCI-000169,CCI-001462,CCI-001464,CCI-001487,CCI-001889,CCI-001890"}, {"VulnID": "V-239752", "RuleID": "SV-239752r679483_rule", "StigID": "VCFL-67-000010", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-APP-000089-WSR-000047", "RuleTitle": "vSphere Client must generate log records during Java startup and shutdown.", "Description": "<VulnDiscussion>Logging must be started as soon as possible when a service starts and when a service is stopped. Many forms of suspicious actions can be detected by analyzing logs for unexpected service starts and stops. Also, by starting to log immediately after a service starts, it becomes more difficult for suspicious activity to go unlogged.\n\nOn the VCSA, the vmware-vmon service starts up the JVMs for various vCenter processes, including vSphere Client, and the individual json config files control the early jvm logging. Ensuring these json files are configured correctly enables early Java stdout and stderr logging.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Logging must be started as soon as possible when a service starts and when a service is stopped. Many forms of suspicious actions can be detected by analyzing logs for unexpected service starts and stops. Also, by starting to log immediately after a service starts, it becomes more difficult for suspicious activity to go unlogged.\n\nOn the VCSA, the vmware-vmon service starts up the JVMs for various vCenter processes, including vSphere Client, and the individual json config files control the early jvm logging. Ensuring these json files are configured correctly enables early Java stdout and stderr logging.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "At the command prompt, execute the following command:\n\n# grep StreamRedirectFile /etc/vmware/vmware-vmon/svcCfgfiles/vsphere-client.json\n\nExpected result:\n\n\"StreamRedirectFile\": \"%VMWARE_LOG_DIR%/vmware/vsphere-client/logs/vsphere-client-runtime.log\",\n\nIf there is no log file specified for the \"StreamRedirectFile\" setting, this is a finding.", "FixText": "Navigate to and open /etc/vmware/vmware-vmon/svcCfgfiles/vsphere-client.json. \n\nBelow the last line of the \"PreStartCommandArg\" block, add the following line:\n\n\"StreamRedirectFile\": \"%VMWARE_LOG_DIR%/vmware/vsphere-client/logs/vsphere-client-runtime.log\",\n\nRestart the appliance for changes to take effect.", "CCI": "CCI-000169"}, {"VulnID": "V-239753", "RuleID": "SV-239753r679486_rule", "StigID": "VCFL-67-000012", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-APP-000131-WSR-000051", "RuleTitle": "vSphere Client application files must be verified for their integrity.", "Description": "<VulnDiscussion>Verifying that vSphere Client application code is unchanged from its shipping state is essential for file validation and non-repudiation of vSphere Client. There is no reason that the MD5 hash of the rpm original files should be changed after installation, excluding configuration files.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Verifying that vSphere Client application code is unchanged from its shipping state is essential for file validation and non-repudiation of vSphere Client. There is no reason that the MD5 hash of the rpm original files should be changed after installation, excluding configuration files.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "At the command prompt, execute the following command:\n\n# rpm -V vsphere-client|grep \"^..5......\"|grep -E \"\\.war|\\.jar|\\.sh|\\.py\"\n\nIf there is any output, this is a finding.", "FixText": "Reinstall the VCSA or roll back to a snapshot. \n\nModifying the vSphere Client installation files manually is not supported by VMware.", "CCI": "CCI-001749"}, {"VulnID": "V-239754", "RuleID": "SV-239754r679489_rule", "StigID": "VCFL-67-000013", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-APP-000141-WSR-000081", "RuleTitle": "vSphere Client must have Multipurpose Internet Mail Extensions (MIME) that invoke OS shell programs disabled.", "Description": "<VulnDiscussion>MIME mappings tell vSphere Client what type of program various file types and extensions are and what external utilities or programs are needed to execute the file type.\u00a0\n\nBy ensuring that various shell script MIME types are not included in web.xml, the server is protected against malicious users tricking the server into executing shell command files.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "MIME mappings tell vSphere Client what type of program various file types and extensions are and what external utilities or programs are needed to execute the file type.\u00a0\n\nBy ensuring that various shell script MIME types are not included in web.xml, the server is protected against malicious users tricking the server into executing shell command files.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "At the command prompt, execute the following command:\n\n# grep -En '(x-csh<)|(x-sh<)|(x-shar<)|(x-ksh<)' /usr/lib/vmware-vsphere-client/server/configuration/conf/web.xml\n\nIf the command produces any output, this is a finding.", "FixText": "Open /usr/lib/vmware-vsphere-client/server/configuration/conf/web.xml in a text editor. \n\nRemove any and all of the following nodes lines:\n\n<mime-type>application/x-csh</mime-type>\n<mime-type>application/x-shar</mime-type>\n<mime-type>application/x-sh</mime-type>\n<mime-type>application/x-ksh</mime-type>", "CCI": "CCI-000381"}, {"VulnID": "V-239755", "RuleID": "SV-239755r679492_rule", "StigID": "VCFL-67-000014", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-APP-000141-WSR-000083", "RuleTitle": "vSphere Client must have mappings set for Java servlet pages.", "Description": "<VulnDiscussion>Resource mapping is the process of tying a particular file type to a process in the web server that can serve that type of file to a requesting client and identify which file types are not to be delivered to a client.\n\nBy not specifying which files can and cannot be served to a user, the web server could deliver to a user web server configuration files, log files, password files, etc. \n\nAs Virgo is a Java-based web server, the main file extension used is *.jsp. This check ensures that the *.jsp and *.jspx file types has been properly mapped to servlets.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Resource mapping is the process of tying a particular file type to a process in the web server that can serve that type of file to a requesting client and identify which file types are not to be delivered to a client.\n\nBy not specifying which files can and cannot be served to a user, the web server could deliver to a user web server configuration files, log files, password files, etc. \n\nAs Virgo is a Java-based web server, the main file extension used is *.jsp. This check ensures that the *.jsp and *.jspx file types has been properly mapped to servlets.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "At the command prompt, execute the following command: \n\n# xmllint --format /usr/lib/vmware-vsphere-client/server/configuration/conf/web.xml | sed 's/xmlns=\".*\"//g' | xmllint --xpath '/web-app/servlet-mapping/servlet-name[text()=\"jsp\"]/parent::servlet-mapping' -\n\nExpected result:\n\n<servlet-mapping>\n    <servlet-name>jsp</servlet-name>\n    <url-pattern>*.jsp</url-pattern>\n    <url-pattern>*.jspx</url-pattern>\n</servlet-mapping>\n\nIf the output of the command does not match the expected result, this is a finding.", "FixText": "Navigate to and open /usr/lib/vmware-vsphere-client/server/configuration/conf/web.xml.\n\nNavigate to and locate the mapping for the JSP servlet.\u00a0It is the <servlet-mapping> node that contains <servlet-name>jsp</servlet-name>.\n\nConfigure the <servlet-mapping> node to look like the code snippet below:\n\n \u00a0 \u00a0<!-- The mappings for the JSP servlet -->\n \u00a0 \u00a0<servlet-mapping>\n \u00a0 \u00a0 \u00a0 \u00a0<servlet-name>jsp</servlet-name>\n \u00a0 \u00a0 \u00a0 \u00a0<url-pattern>*.jsp</url-pattern>\n \u00a0 \u00a0 \u00a0 \u00a0<url-pattern>*.jspx</url-pattern>\n \u00a0 \u00a0</servlet-mapping>", "CCI": "CCI-000381"}, {"VulnID": "V-239756", "RuleID": "SV-239756r679495_rule", "StigID": "VCFL-67-000015", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-APP-000141-WSR-000085", "RuleTitle": "vSphere Client must not have the Web Distributed Authoring (WebDAV) servlet installed.", "Description": "<VulnDiscussion>WebDAV is an extension to the HTTP protocol that, when developed, was meant to allow users to create, change, and move documents on a server, typically a web server or web share. WebDAV is not widely used and has serious security concerns because it may allow clients to modify unauthorized files on the web server and must therefore be disabled.\n\nBecause the WebDAV service has been found to have an excessive number of vulnerabilities, this servlet must not be installed. vSphere Client does not configure WebDAV by default.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "WebDAV is an extension to the HTTP protocol that, when developed, was meant to allow users to create, change, and move documents on a server, typically a web server or web share. WebDAV is not widely used and has serious security concerns because it may allow clients to modify unauthorized files on the web server and must therefore be disabled.\n\nBecause the WebDAV service has been found to have an excessive number of vulnerabilities, this servlet must not be installed. vSphere Client does not configure WebDAV by default.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "At the command prompt, execute the following command: \n\n# grep -n -i 'webdav' /usr/lib/vmware-vsphere-client/server/configuration/conf/web.xml\n\nIf the command produces any output, this is a finding.", "FixText": "Navigate to and open all listed files.\n\nNavigate to and locate the mapping for the JSP servlet. It is the\u00a0<servlet-mapping> node that contains <servlet-name>webdav</servlet-name>.\n\nRemove the WebDav servlet and any mapping associated with it.", "CCI": "CCI-000381"}, {"VulnID": "V-239757", "RuleID": "SV-239757r679498_rule", "StigID": "VCFL-67-000016", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-APP-000141-WSR-000086", "RuleTitle": "vSphere Client must be configured with memory leak protection.", "Description": "<VulnDiscussion>The Java Runtime environment can cause a memory leak or lock files under certain conditions. Without memory leak protection, vSphere Client can continue to consume system resources, which will lead to \"OutOfMemoryErrors\" when reloading web applications.\n\nMemory leaks occur when JRE code uses the context class loader to load a singleton, as this will cause a memory leak if a web application class loader happens to be the context class loader at the time. The \"JreMemoryLeakPreventionListener\" class is designed to initialize these singletons when Tomcat's common class loader is the context class loader. Proper use of JRE memory leak protection will ensure that the hosted application does not consume system resources and cause an unstable environment.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "The Java Runtime environment can cause a memory leak or lock files under certain conditions. Without memory leak protection, vSphere Client can continue to consume system resources, which will lead to \"OutOfMemoryErrors\" when reloading web applications.\n\nMemory leaks occur when JRE code uses the context class loader to load a singleton, as this will cause a memory leak if a web application class loader happens to be the context class loader at the time. The \"JreMemoryLeakPreventionListener\" class is designed to initialize these singletons when Tomcat's common class loader is the context class loader. Proper use of JRE memory leak protection will ensure that the hosted application does not consume system resources and cause an unstable environment.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "At the command prompt, execute the following command: \n\n# grep JreMemoryLeakPreventionListener /usr/lib/vmware-vsphere-client/server/configuration/tomcat-server.xml\n\nExpected result:\n\n<Listener className=\"org.apache.catalina.core.JreMemoryLeakPreventionListener\" />\n\nIf the output of the command does not match the expected result, this is a finding.", "FixText": "Navigate to and open /usr/lib/vmware-vsphere-client/server/configuration/tomcat-server.xml.\n\nNavigate to the <Server> node.\n\nAdd '<Listener className=\"org.apache.catalina.core.JreMemoryLeakPreventionListener\"/>' to the <Server> node.", "CCI": "CCI-000381"}, {"VulnID": "V-239758", "RuleID": "SV-239758r679501_rule", "StigID": "VCFL-67-000017", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-APP-000141-WSR-000087", "RuleTitle": "vSphere Client must not have any symbolic links in the web content directory tree.", "Description": "<VulnDiscussion>A web server is designed to deliver content and execute scripts or applications on the request of a client or user. Containing user requests to files in the directory tree of the hosted web application and limiting the execution of scripts and applications guarantees that the user is not accessing information protected outside the application's realm. By checking that no symbolic links exist in the document root, the web server is protected from users jumping outside the hosted application directory tree and gaining access to the other directories, including the system root.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "A web server is designed to deliver content and execute scripts or applications on the request of a client or user. Containing user requests to files in the directory tree of the hosted web application and limiting the execution of scripts and applications guarantees that the user is not accessing information protected outside the application's realm. By checking that no symbolic links exist in the document root, the web server is protected from users jumping outside the hosted application directory tree and gaining access to the other directories, including the system root.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "At the command prompt, execute the following command:\n\n# find /usr/lib/vmware-vsphere-client/server/work/ -type l -ls\n\nIf the command produces any output, this is a finding.", "FixText": "At the command prompt, execute the following commands:\n\nNote: Replace <file_name> for the name of any files that were returned.\n\n# unlink <file_name>\n\nRepeat the commands for each file that was returned.", "CCI": "CCI-000381"}, {"VulnID": "V-239759", "RuleID": "SV-239759r679504_rule", "StigID": "VCFL-67-000018", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-APP-000176-WSR-000096", "RuleTitle": "vSphere Client must ensure appropriate permissions are set on the keystore.", "Description": "<VulnDiscussion>The web server's private key is used to prove the identity of the server to clients and securely exchange the shared secret key used to encrypt communications between the web server and clients. By gaining access to the private key, an attacker can pretend to be an authorized server and decrypt the SSL traffic between a client and the web server.\n\nvSphere Client pulls the machine certificate from the VECS keystore and stores it in keystore.jks so Tomcat can access it. The minimum permissions and ownership on the keystore are set by default but must be verified.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "The web server's private key is used to prove the identity of the server to clients and securely exchange the shared secret key used to encrypt communications between the web server and clients. By gaining access to the private key, an attacker can pretend to be an authorized server and decrypt the SSL traffic between a client and the web server.\n\nvSphere Client pulls the machine certificate from the VECS keystore and stores it in keystore.jks so Tomcat can access it. The minimum permissions and ownership on the keystore are set by default but must be verified.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "At the command prompt, execute the following command: \n\n# stat -c \"%n permissions are %a and is owned by %U:%G\" /etc/vmware/vsphere-client/keystore.jks\n\nExpected result:\n\n/etc/vmware/vsphere-client/keystore.jks permissions are 640 and is owned by vsphere-client:users\n\nIf the output of the command does not match the expected result, this is a finding.", "FixText": "At the command prompt, execute the following command: \n\n# chmod 640 /etc/vmware/vsphere-client/keystore.jks\n# chown vsphere-client:users /etc/vmware/vsphere-client/keystore.jks", "CCI": "CCI-000186"}, {"VulnID": "V-239760", "RuleID": "SV-239760r679507_rule", "StigID": "VCFL-67-000019", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-APP-000211-WSR-000030", "RuleTitle": "vSphere Client directory tree must have permissions in an \"out-of-the-box\" state.", "Description": "<VulnDiscussion>As a rule, accounts on a web server are to be kept to a minimum. Only administrators, web managers, developers, auditors, and web authors require accounts on the machine hosting the web server. The resources to which these accounts have access must also be closely monitored and controlled. vSphere Client files must be adequately protected with correct permissions as applied out of the box.\n\nSatisfies: SRG-APP-000211-WSR-000030, SRG-APP-000380-WSR-000072</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "As a rule, accounts on a web server are to be kept to a minimum. Only administrators, web managers, developers, auditors, and web authors require accounts on the machine hosting the web server. The resources to which these accounts have access must also be closely monitored and controlled. vSphere Client files must be adequately protected with correct permissions as applied out of the box.\n\nSatisfies: SRG-APP-000211-WSR-000030, SRG-APP-000380-WSR-000072", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "At the command prompt, execute the following command:\n\n# find /usr/lib/vmware-vsphere-client/server -xdev -type f -a '(' -not -user vsphere-client -o '(' -not -group root -a -not -group users -not -group cis ')' ')' -exec ls -ld {} \\;\n\nIf the command produces any output, this is a finding.", "FixText": "At the command prompt, execute the following command:\n\n#chown vsphere-client:root <file_name>\n\nRepeat the command for each file that was returned.\n\nNote: Replace <file_name> for the name of the file that was returned.", "CCI": "CCI-001082,CCI-001813"}, {"VulnID": "V-239761", "RuleID": "SV-239761r679510_rule", "StigID": "VCFL-67-000020", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-APP-000246-WSR-000149", "RuleTitle": "vSphere Client must limit the number of allowed connections.", "Description": "<VulnDiscussion>Limiting the number of established connections to Sphere Client is a basic denial-of-service protection. Servers where the limit is too high or unlimited can potentially run out of system resources and negatively affect system availability.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Limiting the number of established connections to Sphere Client is a basic denial-of-service protection. Servers where the limit is too high or unlimited can potentially run out of system resources and negatively affect system availability.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "At the command prompt, execute the following command:\n\n# xmllint --format --xpath '/Server/Service/Connector/@acceptCount' /usr/lib/vmware-vsphere-client/server/configuration/tomcat-server.xml\n\nExpected result:\n\nacceptCount=\"300\" acceptCount=\"300\"\n\nIf the output does not match the expected result, this is a finding.", "FixText": "Navigate to and open /usr/lib/vmware-vsphere-client/server/configuration/tomcat-server.xml.\n\nConfigure each <Connector> node with the following:\n\nacceptCount=\"300\"", "CCI": "CCI-001094"}, {"VulnID": "V-239762", "RuleID": "SV-239762r679513_rule", "StigID": "VCFL-67-000021", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-APP-000251-WSR-000157", "RuleTitle": "vSphere Client must set \"URIEncoding\" to UTF-8.", "Description": "<VulnDiscussion>Invalid user input occurs when a user inserts data or characters into a hosted application's data entry field and the hosted application is unprepared to process that data. This results in unanticipated application behavior, potentially leading to an application compromise. Invalid user input is one of the primary methods employed when attempting to compromise an application. \n\nAn attacker can also enter Unicode characters into hosted applications in an effort to break out of the document home or root home directory or to bypass security checks. vSphere Client must be configured to use a consistent character set via the \"URIEncoding\" attribute on the Connector nodes.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Invalid user input occurs when a user inserts data or characters into a hosted application's data entry field and the hosted application is unprepared to process that data. This results in unanticipated application behavior, potentially leading to an application compromise. Invalid user input is one of the primary methods employed when attempting to compromise an application. \n\nAn attacker can also enter Unicode characters into hosted applications in an effort to break out of the document home or root home directory or to bypass security checks. vSphere Client must be configured to use a consistent character set via the \"URIEncoding\" attribute on the Connector nodes.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "At the command prompt, execute the following command:\n\n# xmllint --format --xpath '/Server/Service/Connector/@URIEncoding' /usr/lib/vmware-vsphere-client/server/configuration/tomcat-server.xml\n\nExpected result:\n\nURIEncoding=\"UTF-8\" URIEncoding=\"UTF-8\"\n\nIf the output does not match the expected result, this is a finding.", "FixText": "Navigate to and open /usr/lib/vmware-vsphere-client/server/configuration/tomcat-server.xml.\n\nConfigure each <Connector> node with the following:\n\nURIEncoding=\"UTF-8\"", "CCI": "CCI-001310"}, {"VulnID": "V-239763", "RuleID": "SV-239763r679516_rule", "StigID": "VCFL-67-000022", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-APP-000266-WSR-000142", "RuleTitle": "vSphere Client must set the \"welcome-file\" node to a default web page.", "Description": "<VulnDiscussion>Enumeration techniques, such as URL parameter manipulation, rely on being able to obtain information about the web server's directory structure by locating directories without default pages. In this scenario, the web server will display to the user a listing of the files in the directory being accessed. \n\nBy having a default hosted application web page, the anonymous web user will not obtain directory browsing information or an error message that reveals the server type and version. Ensuring that every document directory has an \"index.jsp\" (or equivalent) file is one approach to mitigating the vulnerability.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Enumeration techniques, such as URL parameter manipulation, rely on being able to obtain information about the web server's directory structure by locating directories without default pages. In this scenario, the web server will display to the user a listing of the files in the directory being accessed. \n\nBy having a default hosted application web page, the anonymous web user will not obtain directory browsing information or an error message that reveals the server type and version. Ensuring that every document directory has an \"index.jsp\" (or equivalent) file is one approach to mitigating the vulnerability.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "At the command prompt, execute the following command: \n\n# xmllint --format /usr/lib/vmware-vsphere-client/server/configuration/conf/web.xml | sed 's/xmlns=\".*\"//g' | xmllint --xpath '/web-app/welcome-file-list' -\n\nExpected result:\n\n<welcome-file-list>\n    <welcome-file>index.html</welcome-file>\n    <welcome-file>index.htm</welcome-file>\n    <welcome-file>index.jsp</welcome-file>\n  </welcome-file-list>\n\nIf the output of the command does not match the expected result, this is a finding.", "FixText": "Navigate to and open /usr/lib/vmware-vsphere-client/server/configuration/conf/web.xml.\n\nInspect the file and ensure that it contains the following section:\n\n<welcome-file-list>\n    <welcome-file>index.html</welcome-file>\n    <welcome-file>index.htm</welcome-file>\n    <welcome-file>index.jsp</welcome-file>\n  </welcome-file-list>", "CCI": "CCI-001312"}, {"VulnID": "V-239764", "RuleID": "SV-239764r679519_rule", "StigID": "VCFL-67-000023", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-APP-000266-WSR-000142", "RuleTitle": "vSphere Client must not show directory listings.", "Description": "<VulnDiscussion>Enumeration techniques, such as URL parameter manipulation, rely on being able to obtain information about the web server's directory structure by locating directories without default pages. In this scenario, the web server will display to the user a listing of the files in the directory being accessed. Ensuring that directory listing is disabled is one approach to mitigating the vulnerability.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Enumeration techniques, such as URL parameter manipulation, rely on being able to obtain information about the web server's directory structure by locating directories without default pages. In this scenario, the web server will display to the user a listing of the files in the directory being accessed. Ensuring that directory listing is disabled is one approach to mitigating the vulnerability.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "At the command prompt, execute the following command: \n\n# xmllint --format /usr/lib/vmware-vsphere-client/server/configuration/conf/web.xml | sed 's/xmlns=\".*\"//g' | xmllint --xpath '//param-name[text()=\"listings\"]/parent::init-param' -\n\nExpected result:\n\n<init-param>\n      <param-name>listings</param-name>\n      <param-value>false</param-value>\n    </init-param>\n\nIf the output of the command does not match the expected result, this is a finding.", "FixText": "Navigate to and open /usr/lib/vmware-vsphere-client/server/configuration/conf/web.xml.\n\nSet the <param-value> to \"false\" in all <param-name>listing</param-name> nodes.\n\nNote: The setting should look like the following:\n\n<init-param>\n      <param-name>listings</param-name>\n      <param-value>false</param-value>\n</init-param>", "CCI": "CCI-001312"}, {"VulnID": "V-239765", "RuleID": "SV-239765r679522_rule", "StigID": "VCFL-67-000024", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-APP-000266-WSR-000159", "RuleTitle": "vSphere Client must be configured to show error pages with minimal information.", "Description": "<VulnDiscussion>Web servers will often display error messages to client users, displaying enough information to aid in the debugging of the error. The information given back in error messages may display the web server type, version, patches installed, plug-ins and modules installed, type of code being used by the hosted application, and any backends being used for data storage. \n\nThis information could be used by an attacker to blueprint what type of attacks might be successful. Therefore, vSphere Client must be configured to not show server version information in error messages.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Web servers will often display error messages to client users, displaying enough information to aid in the debugging of the error. The information given back in error messages may display the web server type, version, patches installed, plug-ins and modules installed, type of code being used by the hosted application, and any backends being used for data storage. \n\nThis information could be used by an attacker to blueprint what type of attacks might be successful. Therefore, vSphere Client must be configured to not show server version information in error messages.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "At the command prompt, execute the following command:\n\n# xmllint --format --xpath '/Server/Service/Connector/@server' /usr/lib/vmware-vsphere-client/server/configuration/tomcat-server.xml\n\nExpected result:\n\nserver=\"Anonymous\" server=\"Anonymous\"\n\nIf the output does not match the expected result, this is a finding.", "FixText": "Navigate to and open /usr/lib/vmware-vsphere-client/server/configuration/tomcat-server.xml.\n\nConfigure each <Connector> node with the following:\n\nserver=\"Anonymous\"", "CCI": "CCI-001312"}, {"VulnID": "V-239766", "RuleID": "SV-239766r679525_rule", "StigID": "VCFL-67-000025", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-APP-000266-WSR-000160", "RuleTitle": "vSphere Client must not enable support for TRACE requests.", "Description": "<VulnDiscussion>\"Trace\" is a technique for a user to request internal information about Tomcat. This is useful during product development but should not be enabled in production. \n\nAllowing an attacker to conduct a Trace operation against the Security Token Service will expose information that would be useful to perform a more targeted attack. vSphere Client provides the \"allowTrace\" parameter as a means to disable responding to Trace requests.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "\"Trace\" is a technique for a user to request internal information about Tomcat. This is useful during product development but should not be enabled in production. \n\nAllowing an attacker to conduct a Trace operation against the Security Token Service will expose information that would be useful to perform a more targeted attack. vSphere Client provides the \"allowTrace\" parameter as a means to disable responding to Trace requests.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "At the command prompt, execute the following command:\n\n# grep allowTrace /usr/lib/vmware-vsphere-client/server/configuration/tomcat-server.xml\n\nIf \"allowTrace\" is set to \"true\", this is a finding. \n\nIf no line is returned, this is NOT a finding.", "FixText": "Navigate to and open /usr/lib/vmware-vsphere-client/server/configuration/tomcat-server.xml.\n\nNavigate to and locate:\n\n'allowTrace=\"true\"'\n\nRemove the 'allowTrace=\"true\"' setting.", "CCI": "CCI-001312"}, {"VulnID": "V-239767", "RuleID": "SV-239767r679528_rule", "StigID": "VCFL-67-000026", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-APP-000266-WSR-000160", "RuleTitle": "vSphere Client must have the debug option turned off.", "Description": "<VulnDiscussion>Information needed by an attacker to begin looking for possible vulnerabilities in a web server includes any information about the web server and plug-ins or modules being used. When debugging or trace information is enabled in a production web server, information about the web server, such as web server type, version, patches installed, plug-ins and modules installed, type of code being used by the hosted application, and any backends being used for data storage, may be displayed. Since this information may be placed in logs and general messages during normal operation of the web server, an attacker does not need to cause an error condition to gain this information.\n\nvSphere Client can be configured to set the debugging level. By setting the debugging level to zero, no debugging information will be provided to a malicious user.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Information needed by an attacker to begin looking for possible vulnerabilities in a web server includes any information about the web server and plug-ins or modules being used. When debugging or trace information is enabled in a production web server, information about the web server, such as web server type, version, patches installed, plug-ins and modules installed, type of code being used by the hosted application, and any backends being used for data storage, may be displayed. Since this information may be placed in logs and general messages during normal operation of the web server, an attacker does not need to cause an error condition to gain this information.\n\nvSphere Client can be configured to set the debugging level. By setting the debugging level to zero, no debugging information will be provided to a malicious user.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "At the command prompt, execute the following command: \n\n# xmllint --format /usr/lib/vmware-vsphere-client/server/configuration/conf/web.xml | sed 's/xmlns=\".*\"//g' | xmllint --xpath '//param-name[text()=\"debug\"]/parent::init-param' -\n\nExpected result:\n\n<init-param>\n      <param-name>debug</param-name>\n      <param-value>0</param-value>\n    </init-param>\n\nIf the output of the command does not match the expected result, this is a finding.", "FixText": "Navigate to and open /usr/lib/vmware-vsphere-client/server/configuration/conf/web.xml.\n\nNavigate to all <debug> nodes that are not set to \"0\".\n\nSet the <param-value> to \"0\" in all <param-name>debug</param-name> nodes.\n\nNote: The debug setting should look like the following:\n\n<init-param>\n      <param-name>debug</param-name>\n      <param-value>0</param-value>\n    </init-param>", "CCI": "CCI-001312"}, {"VulnID": "V-239768", "RuleID": "SV-239768r679531_rule", "StigID": "VCFL-67-000027", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-APP-000358-WSR-000163", "RuleTitle": "Rsyslog must be configured to monitor and ship vSphere Client log files.", "Description": "<VulnDiscussion>The vSphere Client produces a handful of logs that must be offloaded from the originating system. This information can then be used for diagnostic, forensics, or other purposes relevant to ensuring the availability and integrity of the hosted application.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "The vSphere Client produces a handful of logs that must be offloaded from the originating system. This information can then be used for diagnostic, forensics, or other purposes relevant to ensuring the availability and integrity of the hosted application.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "At the command prompt, execute the following command:\n\n# grep -v \"^#\" /etc/vmware-syslog/stig-vsphere-client.conf\n\nExpected result:\n\ninput(type=\"imfile\"\n      File=\"/var/log/vmware/vsphere-client/logs/access/localhost_access*\"\n      Tag=\"client-access\"\n      Severity=\"info\"\n      Facility=\"local0\")\ninput(type=\"imfile\"\n      File=\"/var/log/vmware/vsphere-client/logs/vsphere-client-runtime*\"\n      Tag=\"client-runtime\"\n      Severity=\"info\"\n      Facility=\"local0\")\n\nIf the file does not exist, this is a finding.\n\nIf the output of the command does not match the expected result, this is a finding.", "FixText": "Navigate to and open /etc/vmware-syslog/stig-vsphere-client.conf.\n\nCreate the file if it does not exist.\n\nSet the contents of the file as follows:\n\ninput(type=\"imfile\"\n      File=\"/var/log/vmware/vsphere-client/logs/access/localhost_access*\"\n      Tag=\"client-access\"\n      Severity=\"info\"\n      Facility=\"local0\")\ninput(type=\"imfile\"\n      File=\"/var/log/vmware/vsphere-client/logs/vsphere-client-runtime*\"\n      Tag=\"client-runtime\"\n      Severity=\"info\"\n      Facility=\"local0\")", "CCI": "CCI-001851"}, {"VulnID": "V-239769", "RuleID": "SV-239769r679534_rule", "StigID": "VCFL-67-000028", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-APP-000383-WSR-000175", "RuleTitle": "vSphere Client must be configured with the appropriate ports.", "Description": "<VulnDiscussion>Web servers provide numerous processes, features, and functionalities that use TCP/IP ports. Some of these processes may be deemed unnecessary or too unsecure to run on a production system. vSphere Client comes configured with two connectors. One is behind the reverse proxy and listening on 9090, and the other is serving SSL natively on 9443. The ports that vSphere Client listens on must be verified as accurate to their shipping state.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Web servers provide numerous processes, features, and functionalities that use TCP/IP ports. Some of these processes may be deemed unnecessary or too unsecure to run on a production system. vSphere Client comes configured with two connectors. One is behind the reverse proxy and listening on 9090, and the other is serving SSL natively on 9443. The ports that vSphere Client listens on must be verified as accurate to their shipping state.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "At the command prompt, execute the following command:\n\n# xmllint --format --xpath '/Server/Service/Connector/@port' /usr/lib/vmware-vsphere-client/server/configuration/tomcat-server.xml\n\nExpected result:\n\nport=\"9090\" port=\"9443\"\n\nIf the output does not match the expected result, this is a finding.", "FixText": "Navigate to and open\u00a0/usr/lib/vmware-vsphere-client/server/configuration/tomcat-server.xml in a text editor.\n\nOn the first <Connector>, with redirectPort=\"9443\", configure the port as follows:\n\nport=\"9090\"\n\nOn the second <Connector>, with SSLEnabled=\"true\", configure the port as follows:\n\nport=\"9443\"", "CCI": "CCI-001762"}, {"VulnID": "V-239770", "RuleID": "SV-239770r679537_rule", "StigID": "VCFL-67-000029", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-APP-000435-WSR-000147", "RuleTitle": "vSphere Client must disable the shutdown port.", "Description": "<VulnDiscussion>An attacker has at least two reasons to stop a web server. The first is to cause a denial of service, and the second is to put in place changes the attacker made to the web server configuration. If the Tomcat shutdown port feature is enabled, a shutdown signal can be sent to vSphere Client through this port. To ensure availability, the shutdown port must be disabled.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "An attacker has at least two reasons to stop a web server. The first is to cause a denial of service, and the second is to put in place changes the attacker made to the web server configuration. If the Tomcat shutdown port feature is enabled, a shutdown signal can be sent to vSphere Client through this port. To ensure availability, the shutdown port must be disabled.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "At the command prompt, execute the following command:\n\n# xmllint --format --xpath '/Server/@port' /usr/lib/vmware-vsphere-client/server/configuration/tomcat-server.xml\n\nExpected result:\n\nport=\"-1\"\n\nIf the output does not match the expected result, this is a finding.", "FixText": "Navigate to and open\u00a0/usr/lib/vmware-vsphere-client/server/configuration/tomcat-server.xml in a text editor.\n\nEnsure that the server port is disabled as follows:\n\n<Server port=\"-1\">", "CCI": "CCI-002385"}, {"VulnID": "V-239771", "RuleID": "SV-239771r679540_rule", "StigID": "VCFL-67-000030", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-APP-000439-WSR-000155", "RuleTitle": "vSphere Client must set the secure flag for cookies.", "Description": "<VulnDiscussion>The secure flag is an option that can be set by the application server when sending a new cookie to the user within an HTTP Response. The purpose of the secure flag is to prevent cookies from being observed by unauthorized parties due to the transmission of a cookie in clear text. By setting the secure flag, the browser will prevent the transmission of a cookie over an unencrypted channel.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "The secure flag is an option that can be set by the application server when sending a new cookie to the user within an HTTP Response. The purpose of the secure flag is to prevent cookies from being observed by unauthorized parties due to the transmission of a cookie in clear text. By setting the secure flag, the browser will prevent the transmission of a cookie over an unencrypted channel.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "At the command prompt, execute the following command: \n\n# xmllint --format /usr/lib/vmware-vsphere-client/server/configuration/conf/web.xml | sed 's/xmlns=\".*\"//g' | xmllint --xpath '/web-app/session-config/cookie-config/secure' -\n\nExpected result:\n\n<secure>true</secure>\n\nIf the output of the command does not match the expected result, this is a finding.", "FixText": "Navigate to and open /usr/lib/vmware-vsphere-client/server/configuration/conf/web.xml.\n\nNavigate to the /<web-apps>/<session-config>/<cookie-config> node and configure it as follows:\n\n    <cookie-config>\n      <http-only>true</http-only>\n      <secure>true</secure>\n    </cookie-config>", "CCI": "CCI-002418"}]}