{"Title": "Juniper EX Series Switches Router Security Technical Implementation Guide", "Description": "This Security Technical Implementation Guide is published as a tool to improve the security of Department of Defense (DoD) information systems. The requirements are derived from the National Institute of Standards and Technology (NIST) 800-53 and related documents. Comments or proposed revisions to this document should be sent via email to the following address: disa.stig_spt@mail.mil.", "Version": "1", "Release": "2 ", "BenchmarkDate": "02 Sep 2022", "ReleaseInfo": "Release: 2 Benchmark Date: 02 Sep 2022", "Source": "STIG.DOD.MIL", "Notice": "terms-of-use", "Rules": [{"VulnID": "V-253973", "RuleID": "SV-253973r843952_rule", "StigID": "JUEX-RT-000010", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000018-RTR-000001", "RuleTitle": "The Juniper router must be configured to enforce approved authorizations for controlling the flow of information within the network based on organization-defined information flow control policies.", "Description": "<VulnDiscussion>Information flow control regulates where information is allowed to travel within a network and between interconnected networks. The flow of all network traffic must be monitored and controlled so it does not introduce any unacceptable risk to the network infrastructure or data. Information flow control policies and enforcement mechanisms are commonly employed by organizations to control the flow of information between designated sources and destinations (e.g., networks, individuals, and devices) within information systems.\n\nEnforcement occurs, for example, in boundary protection devices (e.g., gateways, routers, guards, encrypted tunnels, and firewalls) that employ rule sets or establish configuration settings that restrict information system services, provide a packet filtering capability based on header information, or provide a message filtering capability based on message content (e.g., implementing key word searches or using document characteristics).</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Information flow control regulates where information is allowed to travel within a network and between interconnected networks. The flow of all network traffic must be monitored and controlled so it does not introduce any unacceptable risk to the network infrastructure or data. Information flow control policies and enforcement mechanisms are commonly employed by organizations to control the flow of information between designated sources and destinations (e.g., networks, individuals, and devices) within information systems.\n\nEnforcement occurs, for example, in boundary protection devices (e.g., gateways, routers, guards, encrypted tunnels, and firewalls) that employ rule sets or establish configuration settings that restrict information system services, provide a packet filtering capability based on header information, or provide a message filtering capability based on message content (e.g., implementing key word searches or using document characteristics).", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "This requirement is not applicable for the DODIN Backbone.\n\nReview the router configuration to verify that stateless firewall filters are configured to allow or deny traffic for specific source and destination addresses as well as ports and protocols. Verify the IP addresses are appropriate for the target environment. IP addresses are configured in lists at [edit policy-options] or are directly embedded into each term.\n\n[edit policy-options]\nprefix-list inside-addresses-ipv4 {\n    <inside IPv4 subnet>/<mask>;\n    <inside IPv4 subnet>/<mask>;\n}\nprefix-list inside-addresses-ipv6 {\n    <inside IPv6 subnet>/<prefix>;\n    <inside IPv6 subnet>/<prefix>;\n}\n\nFor example:\n[edit firewall]\nfamily inet {\n    filter authorized-outbound-ipv4 {\n        term permitted-http {\n            from {\n                source-prefix-list {\n                    inside-addresses-ipv4;\n                }\n                destination-address {\n                    <destination IPv4 address>/<mask>;\n                }\n                protocol tcp;\n                destination-port http;\n            }\n            then accept;\n        }\n        :\n        <other terms>\n        :\n        term permitted-source-addresses {\n            from {\n                source-prefix-list {\n                    inside-addresses-ipv4;\n                }\n                protocol-except tcp;\n                destination-port-except http;\n            }\n            then accept;\n        }\n        term default-deny {\n            then {\n                log;\n                syslog;\n                discard;\n            }\n        }\n    }\n}\nfamily inet6 {\n    filter authorized-outbound-ipv6 {\n        term permitted-http {\n            from {\n                source-prefix-list {\n                    inside-addresses-ipv6;\n                }\n                destination-address {\n                    <destination IPv6 address>/<prefix>;\n                }\n                next-header tcp;\n                destination-port http;\n            }\n            then accept;\n        }\n        :\n        <other terms>\n        :\n        term permitted-source-addresses {\n            from {\n                source-prefix-list {\n                    inside-addresses-ipv6;\n                }\n                next-header-except tcp;\n                destination-port-except http;\n            }\n            then accept;\n        }\n        term default-deny {\n            then {\n                log;\n                syslog;\n                discard;\n            }\n        }\n    }\n}\n\nVerify filters are applied to the correct interface. For example, the \"authorized-outbound\" filter, as written, should be applied to the ingress of internal interfaces:\n[edit interfaces]\n<internal interface name> {                             \n    unit <number> {                            \n        family inet {                   \n            filter {                    \n                input authorized-outbound-ipv4;             \n            }                           \n            address <IPv4 address>/<mask>;       \n        }                               \n        family inet6 {                   \n            filter {                    \n                input authorized-outbound-ipv6;             \n            }                           \n            address <IPv6 address>/<prefix>;       \n        }                               \n    }                                   \n} \nNote: Some Juniper devices support both monolithic filters and filter lists. Filter lists separate each term, or set of terms, into a separate filter that is applied sequentially to an interface. If using filter lists, the keywords \"input\" and \"output\" change to \"input-list\" or \"output-list\". Verify the final list item is a deny-all filter. \n\nIf the router is not configured to enforce approved authorizations for controlling the flow of information within the network based on organization-defined information flow control policies, this is a finding.", "FixText": "This requirement is not applicable for the DODIN Backbone.\n\nConfigure stateless firewall filters to allow or deny traffic for specific source and destination addresses as well as ports and protocols.\n\nExample prefix-lists:\nset policy-options prefix-list inside-addresses-ipv4 <inside IPv4 subnet>\nset policy-options prefix-list inside-addresses-ipv6 <inside IPv6 subnet>\n\nExample firewall filter:\nset firewall family inet filter authorized-outbound-ipv4 term permitted-source-addresses from source-prefix-list inside-addresses-ipv4\nset firewall family inet filter authorized-outbound-ipv4 term permitted-source-addresses then accept\nset firewall family inet filter authorized-outbound-ipv4 term 2 then log\nset firewall family inet filter authorized-outbound-ipv4 term 2 then syslog\nset firewall family inet filter authorized-outbound-ipv4 term 2 then discard\n\nset firewall family inet6 filter authorized-outbound-ipv6 term permitted-source-addresses from source-prefix-list inside-addresses-ipv6\nset firewall family inet6 filter authorized-outbound-ipv6 term permitted-source-addresses then accept\nset firewall family inet6 filter authorized-outbound-ipv6 term 2 then log\nset firewall family inet6 filter authorized-outbound-ipv6 term 2 then syslog\nset firewall family inet6 filter authorized-outbound-ipv6 term 2 then discard\n\nExample firewall filter applied to ingress of internal interface:\nset interfaces <interface name> unit <number> family inet filter input authorized-outbound-ipv4\nset interfaces <interface name> unit <number> family inet address <IPv4 address>/<mask>\nset interfaces <interface name> unit <number> family inet6 filter input authorized-outbound-ipv6\nset interfaces <interface name> unit <number> family inet6 address <IPv6 address>/<prefix>", "CCI": "CCI-001368"}, {"VulnID": "V-253974", "RuleID": "SV-253974r843955_rule", "StigID": "JUEX-RT-000020", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000018-RTR-000002", "RuleTitle": "The Juniper BGP router must be configured to reject inbound route advertisements for any Bogon prefixes.", "Description": "<VulnDiscussion>Accepting route advertisements for Bogon prefixes can result in the local autonomous system (AS) becoming a transit for malicious traffic as it will in turn advertise these prefixes to neighbor autonomous systems.\n\nThe list of Bogon addresses can change, based upon new address range assignments, and must be reviewed to ensure filters remain current.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Accepting route advertisements for Bogon prefixes can result in the local autonomous system (AS) becoming a transit for malicious traffic as it will in turn advertise these prefixes to neighbor autonomous systems.\n\nThe list of Bogon addresses can change, based upon new address range assignments, and must be reviewed to ensure filters remain current.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the BGP router configuration to verify that it will reject routes of any currently defined Bogon prefixes.\n\nExample route-filter-list of Bogon addresses with corresponding policy-statement referencing the list:\n[edit policy-options]\nroute-filter-list bogon {\n    /* This host on this network */\n    0.0.0.0/8 orlonger;\n    /* CGN Addresses */\n    100.64.0.0/10 orlonger;\n    /* Loopback */\n    127.0.0.0/8 orlonger;\n    /* IPv4 link-local or APIPA */\n    169.254.0.0/16 orlonger;\n    /* IETF Protocol Assignments (/24) and DS-Lite (/29) */\n    192.0.0.0/24 orlonger;\n    /* IPv4 documentation addresses: TEST-NET-1 */\n    192.0.2.0/24 orlonger;\n    /* 6to4 Relay Anycast descr in RFC3068 */\n    192.88.99.0/24 orlonger;\n    /* Benchmark testing descr in RFC2544 */\n    198.18.0.0/15 orlonger;\n    /* IPv4 documentation addresses: TEST-NET-2 */\n    198.51.100.0/24 orlonger;\n    /* IPv4 documentation addresses: TEST-NET-3 */\n    203.0.113.0/24 orlonger;\n    /* Multicast */\n    224.0.0.0/24 orlonger;\n    /* Reserved */\n    240.0.0.0/4 orlonger;\n    /* RFC1918 Addresses */\n    10.0.0.0/8 orlonger;\n    172.16.0.0/12 orlonger;\n    192.168.0.0/16 orlonger;\n    <add additional routes as needed>\n}\nroute-filter-list bogon-ipv6 {\n    /* Includes unspecified (::/128) and loopback (::1/128) */\n    ::/8 orlonger;\n    /* IPv4-mapped */\n    ::ffff:0:0/96 orlonger;\n    /* IPv4 Compatible */\n    ::/96 orlonger;\n    /* 6Bone */\n    3ffe::/16 orlonger;\n    /* IPv4-IPv6 Translate */\n    64:ff9b::/96 orlonger;\n    /* Reserved - 100::/8 includes Discard-Only (100::/64) */\n    100::/8 orlonger;\n    200::/7 orlonger;\n    400::/6 orlonger;\n    800::/5 orlonger;\n    1000::/4 orlonger;\n    4000::/3 orlonger;\n    6000::/3 orlonger;\n    8000::/3 orlonger;\n    a000::/3 orlonger;\n    c000::/3 orlonger;\n    e000::/4 orlonger;\n    f000::/5 orlonger;\n    f800::/6 orlonger;\n    fe00::/9 orlonger;\n    /* IETF Protocol Assignments */\n    2001::/23 orlonger;\n    /* TEREDO */\n    2001::/32 orlonger;\n    /* Benchmarking */\n    2001:2::/48 orlonger;\n    /* Documentation */\n    2001:db8::/32 orlonger;\n    /* ORCHID */\n    2001:10::/28 orlonger;\n    /* 6to4 */\n    2002::/16 orlonger;\n    /* Unique-Local */\n    fc00::/7 orlonger;\n    /* Linked-Scoped Unicast */\n    fe80::/10 orlonger;\n    /* Site local (deprecated) - now reserved */\n    fec0::/10 orlonger;\n    /* Multicast */\n    ff00::/8 orlonger;\n    <add additional routes as needed>\n}\nNote: The comments (/* comment */) are annotations used to easily identify each list item. Annotations are not required. To add annotations, navigate to the appropriate hierarchy level (\"edit policy-options route-filter-list <list name>\" in this example) and use the \"annotate\" command (annotate <list item> \"desired comment\").\n\npolicy-statement bgp-discard {\n    term 1 {\n        from {\n            route-filter-list bogon;\n            route-filter-list bogon-ipv6;\n        }\n        then reject;\n    }\n    <add additional terms as needed>\n}\nNote: Using a route-filter-list permits list reuse as well as easing management because the policy-statement only need reference the list once. Other terms within the same policy-statement can be added without affecting the Bogon list.\n\nThe prefix filter must be referenced inbound on the appropriate BGP neighbor statements.\n\nVerify the eBGP import statement prevents Junos from importing routes into the route table. Junos accepts import statements at three hierarchy levels: Global protocol, group, and neighbor (peer). Global is the most general, followed by group, and neighbor is the most restrictive. Junos applies only the most restrictive policy so if a policy is configured at the protocol, group, and neighbor level, only the neighbor policy is applied.\n[edit protocols bgp]\ngroup eBGP {\n    <other group configuration>\n    import bgp-discard;\n    neighbor 192.0.2.2 {\n        <other neighbor configuration>\n        import bgp-discard;\n    }\n}\nimport bgp-discard;\n<other BGP configuration>\n\nIf the router is not configured to reject inbound route advertisements for any Bogon prefixes, this is a finding.", "FixText": "Ensure all eBGP routers are configured to reject inbound route advertisements for any currently defined Bogon prefixes.\n\nset policy-options route-filter-list bogon 0.0.0.0/8 orlonger\nset policy-options route-filter-list bogon 10.0.0.0/8 orlonger\nset policy-options route-filter-list bogon 100.64.0.0/10 orlonger\nset policy-options route-filter-list bogon 127.0.0.0/8 orlonger\nset policy-options route-filter-list bogon 169.254.0.0/16 orlonger\nset policy-options route-filter-list bogon 172.16.0.0/12 orlonger\nset policy-options route-filter-list bogon 192.0.0.0/24 orlonger\nset policy-options route-filter-list bogon 192.0.2.0/24 orlonger\nset policy-options route-filter-list bogon 192.168.0.0/16 orlonger\nset policy-options route-filter-list bogon 198.18.0.0/15 orlonger\nset policy-options route-filter-list bogon 198.51.100.0/24 orlonger\nset policy-options route-filter-list bogon 203.0.113.0/24 orlonger\nset policy-options route-filter-list bogon 224.0.0.0/4 orlonger\nset policy-options route-filter-list bogon 240.0.0.0/4 orlonger\n\nset policy-options route-filter-list bogon-ipv6 ::/128 exact\nset policy-options route-filter-list bogon-ipv6 ::1/128 exact\nset policy-options route-filter-list bogon-ipv6 ::ffff:0:0/96 orlonger\nset policy-options route-filter-list bogon-ipv6 ::/96 orlonger\nset policy-options route-filter-list bogon-ipv6 100::/64 orlonger\nset policy-options route-filter-list bogon-ipv6 2001:10::/28 orlonger\nset policy-options route-filter-list bogon-ipv6 2001:db8::/32 orlonger\nset policy-options route-filter-list bogon-ipv6 fc00::/7 orlonger\nset policy-options route-filter-list bogon-ipv6 fe80::/10 orlonger\nset policy-options route-filter-list bogon-ipv6 fec0::/10 orlonger\nset policy-options route-filter-list bogon-ipv6 ff00::/8 orlonger\n\nset policy-options policy-statement bgp-discard term 1 from route-filter-list bogon\nset policy-options policy-statement bgp-discard term 1 from route-filter-list bogon-ipv6\nset policy-options policy-statement bgp-discard term 1 then reject\n\nset protocols bgp group eBGP import bgp-discard\nset protocols bgp group eBGP neighbor 192.0.2.2 import bgp-discard\nset protocols bgp import bgp-discard", "CCI": "CCI-001368"}, {"VulnID": "V-253975", "RuleID": "SV-253975r843958_rule", "StigID": "JUEX-RT-000030", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000018-RTR-000003", "RuleTitle": "The Juniper BGP router must be configured to reject inbound route advertisements for any prefixes belonging to the local autonomous system (AS).", "Description": "<VulnDiscussion>Accepting route advertisements belonging to the local AS can result in traffic looping, being black holed, or at a minimum using a nonoptimized path.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Accepting route advertisements belonging to the local AS can result in traffic looping, being black holed, or at a minimum using a nonoptimized path.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the BGP router configuration to verify that it will reject routes belonging to the local AS.\n\nExample route-filter-list of local AS addresses with corresponding policy-statement referencing the list. Verify the routes are appropriate for the target environment.\n[edit policy-options]\nroute-filter-list local-routes {\n    192.0.2.0/24 orlonger;\n    192.0.3.0/24 orlonger;\n}\nroute-filter-list local-routes-ipv6 {\n    2001:db8:2::/64 orlonger;\n    2001:db8:3::/64 orlonger;\n}\npolicy-statement bgp-discard {\n    term 1 {\n        from {\n            route-filter-list bogon;\n            route-filter-list bogon-ipv6;\n        }\n        then reject;\n    }\n    term 2 {\n        from {\n            route-filter-list local-routes;\n            route-filter-list local-routes-ipv6;\n        }\n        then reject;\n    }\n    term 3 {\n        from protocol [ ospf direct ];\n        then reject;\n    }\n}\nThe example shows using route-filter-lists to ease management. The policy-statement also supports the route directly in the match condition. For example, \"route-filter 192.0.2.0/24 orlonger\" (in place of route-filter-list local-routes).\n\nNote: To reject routes learned via OSPF or directly-connected routes, include a term with a protocol (OSPF and directly-connected routes shown). The policy-statement includes the Bogon term to demonstrate adding terms to a policy without affecting existing terms.\n\nThe prefix filter must be referenced inbound on the appropriate BGP neighbor statements.\n\nVerify the eBGP import statement prevents Junos from importing routes into the route table. Junos accepts import statements at three hierarchy levels: Global protocol, group, and neighbor (peer). Global is the most general, followed by group, and neighbor is the most restrictive. Junos applies only the most restrictive policy so if a policy is configured at the protocol, group, and neighbor level, only the neighbor policy is applied.\n[edit protocols bgp]\ngroup eBGP {\n    <other group configuration>\n    import bgp-discard;\n    neighbor 192.0.2.2 {\n        <other neighbor configuration>\n        import bgp-discard;\n    }\n}\nimport bgp-discard;\n<other BGP configuration>\n\nIf the router is not configured to reject inbound route advertisements belonging to the local AS, this is a finding.", "FixText": "Ensure all eBGP routers are configured to reject inbound route advertisements for any prefixes belonging to the local AS.\n\nset policy-options route-filter-list local-routes 192.0.2.0/24 orlonger\nset policy-options route-filter-list local-routes 192.0.3.0/24 orlonger\nset policy-options route-filter-list local-routes-ipv6 2001:db8:2::/64 orlonger\nset policy-options route-filter-list local-routes-ipv6 2001:db8:3::/64 orlonger\n\nset policy-options policy-statement bgp-discard term 1 from route-filter-list bogon\nset policy-options policy-statement bgp-discard term 1 from route-filter-list bogon-ipv6\nset policy-options policy-statement bgp-discard term 1 then reject\nset policy-options policy-statement bgp-discard term 2 from route-filter-list local-routes\nset policy-options policy-statement bgp-discard term 2 from route-filter-list local-routes-ipv6\nset policy-options policy-statement bgp-discard term 2 then reject\nset policy-options policy-statement bgp-discard term 3 from protocol ospf\nset policy-options policy-statement bgp-discard term 3 from protocol direct\nset policy-options policy-statement bgp-discard term 3 then reject\n\nset protocols bgp group eBGP import bgp-discard\nset protocols bgp group eBGP neighbor 192.0.2.2 import bgp-discard\nset protocols bgp import bgp-discard", "CCI": "CCI-001368"}, {"VulnID": "V-253976", "RuleID": "SV-253976r843961_rule", "StigID": "JUEX-RT-000040", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000018-RTR-000004", "RuleTitle": "The Juniper BGP router must be configured to reject inbound route advertisements from a customer edge (CE) router for prefixes that are not allocated to that customer.", "Description": "<VulnDiscussion>As a best practice, a service provider should only accept customer prefixes that have been assigned to that customer and any peering autonomous systems. A multi-homed customer with BGP speaking routers connected to the internet or other external networks could be breached and used to launch a prefix deaggregation attack. Without ingress route filtering of customers, the effectiveness of such an attack could impact the entire IP core and its customers.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "As a best practice, a service provider should only accept customer prefixes that have been assigned to that customer and any peering autonomous systems. A multi-homed customer with BGP speaking routers connected to the internet or other external networks could be breached and used to launch a prefix deaggregation attack. Without ingress route filtering of customers, the effectiveness of such an attack could impact the entire IP core and its customers.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the BGP router configuration to verify there are filters defined to only accept routes for prefixes that belong to specific customers. \n\nExample route-filter-list of customer addresses with corresponding policy-statement referencing the list:\n[edit policy-options]\nroute-filter-list customer1-routes {\n    <customer route 1/mask> orlonger;\n    <customer route 2/mask> orlonger;\n}\nroute-filter-list customer1-routes-ipv6 {\n    <customer route 1/prefix> orlonger;\n    <customer route 1/prefix> orlonger;\n}\n<additional route-filter-list for other customers>\npolicy-statement bgp-accept-cust1-routes {\n    term 1 {\n        from {\n            route-filter-list customer1-routes;\n            route-filter-list customer1-routes-ipv6;\n        }\n        then accept;\n    }\n    term 2 {\n        then reject;\n    }\n}\n<additional policies for other customers>\nNote: The example shows using route-filter-lists to ease management. The policy-statement also supports the route directly in the match condition. For example, \"route-filter <customer route 1/mask> orlonger\" (in place of route-filter-list customer-routes).\n\nVerify the eBGP import statement prevents Junos from importing routes into the route table. Junos accepts import statements at three hierarchy levels: Global protocol, group, and neighbor (peer). Global is the most general, followed by group, and neighbor is the most restrictive. Junos applies only the most restrictive policy so if a policy is configured at the protocol, group, and neighbor level, only the neighbor policy is applied.\n[edit protocols bgp]\ngroup customer1 {\n    <other group configuration>\n    import bgp-accept-cust1-routes;\n    neighbor <address> {\n        <other neighbor configuration>\n        import bgp-accept-cust1-routes;\n    }\n}\nimport <import policy name>;\n<other BGP configuration>\n\nIf the router is not configured to reject inbound route advertisements from each CE router for prefixes that are not allocated to that customer, this is a finding.\n\nNote: Routes to PE-CE links within a VPN are needed for troubleshooting end-to-end connectivity across the MPLS/IP backbone. Hence, these prefixes are an exception to this requirement.", "FixText": "Configure all eBGP routers to reject inbound route advertisements from a CE router for prefixes that are not allocated to that customer.\n\nset policy-options route-filter-list customer1-routes <customer route 1/mask> orlonger\nset policy-options route-filter-list customer1-routes <customer route 2/mask> orlonger\nset policy-options route-filter-list customer1-routes-ipv6 <customer route 1/prefix> orlonger\nset policy-options route-filter-list customer1-routes-ipv6 <customer route 2/prefix> orlonger\n<additional route-filter-list for other customers>\n\nset policy-options policy-statement bgp-accept-cust1-routes term 1 from route-filter-list customer-routes\nset policy-options policy-statement bgp-accept-cust1-routes term 1 from route-filter-list customer-routes-ipv6\nset policy-options policy-statement bgp-accept-cust1-routes term 1 then accept\nset policy-options policy-statement bgp-accept-cust1-routes term 2 then reject\n<additional policies for other customers>\n\nset protocols bgp group customer1 import bgp-accept-cust1-routes\nset protocols bgp group customer1 neighbor <address> import bgp-accept-cust1-routes\n\nNote: An import filter is only required at the group, or the neighbor, level but not both unless the specific neighbor requires a different import filter than the group.", "CCI": "CCI-001368"}, {"VulnID": "V-253977", "RuleID": "SV-253977r843964_rule", "StigID": "JUEX-RT-000050", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000018-RTR-000005", "RuleTitle": "The Juniper BGP router must be configured to reject outbound route advertisements for any prefixes that do not belong to any customers or the local autonomous system (AS).", "Description": "<VulnDiscussion>Advertisement of routes by an AS for networks that do not belong to any of its customers pulls traffic away from the authorized network. This causes a denial of service (DoS) on the network that allocated the block of addresses and may cause a DoS on the network that is inadvertently advertising it as the originator. It is also possible that a misconfigured or compromised router within the GIG IP core could redistribute IGP routes into BGP, thereby leaking internal routes.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Advertisement of routes by an AS for networks that do not belong to any of its customers pulls traffic away from the authorized network. This causes a denial of service (DoS) on the network that allocated the block of addresses and may cause a DoS on the network that is inadvertently advertising it as the originator. It is also possible that a misconfigured or compromised router within the GIG IP core could redistribute IGP routes into BGP, thereby leaking internal routes.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "This requirement is not applicable for the DODIN Backbone. \n\nReview the BGP router configuration to verify there is a filter defined to only advertise routes for prefixes belonging to any customer or the local AS.\n\nExample route-filter-list of customer addresses with corresponding policy-statement referencing the list:\n[edit policy-options]\nroute-filter-list customer1-routes {\n    <customer route 1/mask> exact;\n    <customer route 2/mask> exact;\n}\nroute-filter-list customer1-routes-ipv6 {\n    <customer route 1/prefix> exact;\n    <customer route 2/prefix> exact;\n}\n<additional route-filter-lists for other customers>\npolicy-statement bgp-advertise-cust-routes {\n    term 1 {\n        from {\n            route-filter-list customer1-routes;\n            route-filter-list customer1-routes-ipv6;\n        }\n        then accept;\n    }\n    <additional terms for other customers>\n    term default {\n        then reject;\n    }\n}\nNote: The example shows using route-filter-lists to ease management. The policy-statement also supports the route directly in the match condition. For example, \"route-filter <customer route 1/mask> exact\" (in place of route-filter-list customer-routes).\n\nThe prefix filter must be referenced outbound on the appropriate BGP neighbor statements.\n\nVerify the eBGP export statement prevents Junos from exporting routes from the route table into BGP. Junos accepts export statements at three hierarchy levels: Global protocol, group, and neighbor (peer). Global is the most general, followed by group, and neighbor is the most restrictive. Junos applies only the most restrictive policy so if a policy is configured at the protocol, group, and neighbor level, only the neighbor policy is applied.\n[edit protocols bgp]\ngroup eBGP {\n    <other group configuration>\n    export bgp-advertise-cust-routes;\n    neighbor <address> {\n        <other neighbor configuration>\n        export bgp-advertise-cust-routes;\n    }\n}\nexport bgp-advertise-cust-routes;\n<other BGP configuration>\n\nIf the router is not configured to reject outbound route advertisements that do not belong to any customers or the local AS, this is a finding.", "FixText": "Configure all eBGP routers to filter outbound route advertisements for prefixes that are not allocated to or belong to any customer or the local AS.\n\nset policy-options route-filter-list customer1-routes <customer route 1/mask> exact\nset policy-options route-filter-list customer1-routes <customer route 2/mask> exact\nset policy-options route-filter-list customer1-routes-ipv6 <customer route 1/prefix> exact\nset policy-options route-filter-list customer1-routes-ipv6 <customer route 2/prefix> exact\n<additional route-filter-list for other customers>\n\nset policy-options policy-statement bgp-advertise-cust-routes term 1 from route-filter-list customer1-routes\nset policy-options policy-statement bgp-advertise-cust-routes term 1 from route-filter-list customer1-routes-ipv6\nset policy-options policy-statement bgp-advertise-cust-routes term 1 then accept\n<additional terms for other customers>\nset policy-options policy-statement bgp-advertise-cust-routes term default then reject\n\nset protocols bgp group eBGP export bgp-advertise-cust-routes\nset protocols bgp group eBGP neighbor <address> export bgp-advertise-cust-routes\nset protocols bgp export bgp-advertise-cust-routes", "CCI": "CCI-001368"}, {"VulnID": "V-253978", "RuleID": "SV-253978r843967_rule", "StigID": "JUEX-RT-000060", "Severity": "low", "Cat": "CAT III", "Classification": "", "GroupTitle": "SRG-NET-000018-RTR-000006", "RuleTitle": "The Juniper BGP router must be configured to reject route advertisements from BGP peers that do not list their autonomous system (AS) number as the first AS in the AS_PATH attribute.", "Description": "<VulnDiscussion>Verifying the path a route has traversed will ensure the IP core is not used as a transit network for unauthorized or possibly even internet traffic. All autonomous system boundary routers (ASBRs) must ensure updates received from eBGP peers list their AS number as the first AS in the AS_PATH attribute.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Verifying the path a route has traversed will ensure the IP core is not used as a transit network for unauthorized or possibly even internet traffic. All autonomous system boundary routers (ASBRs) must ensure updates received from eBGP peers list their AS number as the first AS in the AS_PATH attribute.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the BGP router configuration to verify the router is configured to deny updates received from eBGP peers that do not list their AS number as the first AS in the AS_PATH attribute.\n\nVerify the configuration of \"enforce-first-as\" at either the BGP global or group level.\n[edit protocols bgp]\ngroup eBGP {\n    enforce-first-as;\n    neighbor <address>;\n}\nenforce-first-as;\n\nIf the router is not configured to reject updates from peers that do not list their AS number as the first AS in the AS_PATH attribute, this is a finding.", "FixText": "Configure all ASBRs to deny updates received from eBGP peers that do not list their AS number as the first AS in the AS_PATH attribute.\n\nset protocols bgp group eBGP enforce-first-as\nset protocols bgp group eBGP neighbor <address>\nset protocols bgp enforce-first-as", "CCI": "CCI-000032"}, {"VulnID": "V-253979", "RuleID": "SV-253979r843970_rule", "StigID": "JUEX-RT-000070", "Severity": "low", "Cat": "CAT III", "Classification": "", "GroupTitle": "SRG-NET-000018-RTR-000007", "RuleTitle": "The Juniper router configured for Multicast Source Discovery Protocol (MSDP) must filter received source-active multicast advertisements for any undesirable multicast groups and sources.", "Description": "<VulnDiscussion>The interoperability of BGP extensions for interdomain multicast routing and MSDP enables seamless connectivity of multicast domains between autonomous systems. MP-BGP advertises the unicast prefixes of the multicast sources used by Protocol Independent Multicast (PIM) routers to perform RPF checks and build multicast distribution trees. MSDP is a mechanism used to connect multiple PIM sparse-mode domains, allowing RPs from different domains to share information about active sources. When RPs in peering multicast domains hear about active sources, they can pass on that information to their local receivers, thereby allowing multicast data to be forwarded between the domains. Configuring an import policy to block multicast advertisements for reserved, martian, single-source multicast, and any other undesirable multicast groups, as well as any source-group (S, G) states with Bogon source addresses, would assist in avoiding unwanted multicast traffic from traversing the core.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "The interoperability of BGP extensions for interdomain multicast routing and MSDP enables seamless connectivity of multicast domains between autonomous systems. MP-BGP advertises the unicast prefixes of the multicast sources used by Protocol Independent Multicast (PIM) routers to perform RPF checks and build multicast distribution trees. MSDP is a mechanism used to connect multiple PIM sparse-mode domains, allowing RPs from different domains to share information about active sources. When RPs in peering multicast domains hear about active sources, they can pass on that information to their local receivers, thereby allowing multicast data to be forwarded between the domains. Configuring an import policy to block multicast advertisements for reserved, martian, single-source multicast, and any other undesirable multicast groups, as well as any source-group (S, G) states with Bogon source addresses, would assist in avoiding unwanted multicast traffic from traversing the core.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the router configuration to determine if there is an import policy to block source-active multicast advertisements for any undesirable multicast groups, as well as any (S, G) states with undesirable source addresses. \n\nVerify that an inbound source-active filter is bound to each MSDP peer.\n\n[edit protocols msdp]\npeer <address> {\n    import source-active-filter;\n}\n\nReview the policy-statement referenced by the source-active filter to verify that undesirable multicast groups, auto-RP, single source multicast (SSM) groups, and advertisements from undesirable sources are blocked.\n\n[edit policy-options]\npolicy-statement source-active-filter {\n    term unauth-groups {\n        from {\n            route-filter 224.0.1.2/32 exact;\n            route-filter 224.0.2.2/32 exact;\n        }\n        then reject;\n    }\n    term unauth-sources {\n        from {\n            source-address-filter 10.0.0.0/8 orlonger;\n            source-address-filter 127.0.0.0/8 orlonger;\n        }\n        then reject;\n    }\n}\n\nIf the router is not configured with an import policy to block undesirable SA multicast advertisements, this is a finding.", "FixText": "Configure the MSDP router to implement an import policy to block multicast advertisements for undesirable multicast groups and sources.\n\nset protocols msdp peer <address> import source-active-filter\n\nset policy-options policy-statement source-active-filter term unauth-groups from route-filter 224.0.1.2/32 exact\nset policy-options policy-statement source-active-filter term unauth-groups from route-filter 224.0.2.2/32 exact\nset policy-options policy-statement source-active-filter term unauth-groups then reject\nset policy-options policy-statement source-active-filter term unauth-sources from source-address-filter 10.0.0.0/8 orlonger\nset policy-options policy-statement source-active-filter term unauth-sources from source-address-filter 127.0.0.0/8 orlonger\nset policy-options policy-statement source-active-filter term unauth-sources then reject", "CCI": "CCI-001368"}, {"VulnID": "V-253980", "RuleID": "SV-253980r843973_rule", "StigID": "JUEX-RT-000080", "Severity": "low", "Cat": "CAT III", "Classification": "", "GroupTitle": "SRG-NET-000018-RTR-000008", "RuleTitle": "The Juniper router configured for Multicast Source Discovery Protocol (MSDP) must filter source-active multicast advertisements to external MSDP peers to avoid global visibility of local-only multicast sources and groups.", "Description": "<VulnDiscussion>To avoid global visibility of local information, there are a number of source-group (S, G) states in a PIM-SM domain that must not be leaked to another domain, such as multicast sources with private address, administratively scoped multicast addresses, and the auto-RP groups (224.0.1.39 and 224.0.1.40).\n\nAllowing a multicast distribution tree, local to the core, to extend beyond its boundary could enable local multicast traffic to leak into other autonomous systems and customer networks.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "To avoid global visibility of local information, there are a number of source-group (S, G) states in a PIM-SM domain that must not be leaked to another domain, such as multicast sources with private address, administratively scoped multicast addresses, and the auto-RP groups (224.0.1.39 and 224.0.1.40).\n\nAllowing a multicast distribution tree, local to the core, to extend beyond its boundary could enable local multicast traffic to leak into other autonomous systems and customer networks.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the router configuration to determine if there is export policy to block local source-active multicast advertisements.\n\nVerify that an outbound source-active filter is bound to each MSDP peer.\n\n[edit protocols msdp]\npeer <address> {\n    export source-active-filter;\n}\n\nReview the policy-statement referenced by the source-active filters and verify that MSDP source-active messages being sent to MSDP peers do not leak advertisements that are local.\n\n[edit policy-options]\npolicy-statement source-active-filter {\n    term unauth-groups {\n        from {\n            route-filter 224.0.1.2/32 exact;\n            route-filter 224.0.2.2/32 exact;\n        }\n        then reject;\n    }\n    term unauth-sources {\n        from {\n            source-address-filter 10.0.0.0/8 orlonger;\n            source-address-filter 127.0.0.0/8 orlonger;\n        }\n        then reject;\n    }\n}\n\nIf the router is not configured with an export policy to block local source-active multicast advertisements, this is a finding.", "FixText": "Ensure an export policy is implemented on all MSDP routers to avoid global visibility of local multicast (S, G) states.\n\nset protocols msdp peer <address> export source-active-filter\n\nset policy-options policy-statement source-active-filter term unauth-groups from route-filter 224.0.1.2/32 exact\nset policy-options policy-statement source-active-filter term unauth-groups from route-filter 224.0.2.2/32 exact\nset policy-options policy-statement source-active-filter term unauth-groups then reject\nset policy-options policy-statement source-active-filter term unauth-sources from source-address-filter 10.0.0.0/8 orlonger\nset policy-options policy-statement source-active-filter term unauth-sources from source-address-filter 127.0.0.0/8 orlonger\nset policy-options policy-statement source-active-filter term unauth-sources then reject", "CCI": "CCI-001368"}, {"VulnID": "V-253981", "RuleID": "SV-253981r843976_rule", "StigID": "JUEX-RT-000090", "Severity": "low", "Cat": "CAT III", "Classification": "", "GroupTitle": "SRG-NET-000018-RTR-000009", "RuleTitle": "The Juniper router configured for MSDP must limit the amount of source-active messages it accepts on per-peer basis.", "Description": "<VulnDiscussion>To reduce any risk of a denial-of-service (DoS) attack from a rogue or misconfigured MSDP router, the router must be configured to limit the number of source-active messages it accepts from each peer.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "To reduce any risk of a denial-of-service (DoS) attack from a rogue or misconfigured MSDP router, the router must be configured to limit the number of source-active messages it accepts from each peer.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the router configuration to determine if it is configured to limit the amount of source-active messages it accepts on a per-peer basis.\n\n[edit protocols]\nmsdp {\n    active-source-limit {\n        maximum <1..1000000>;\n        threshold <1..1000000>;\n        log-warning <percent to log warning>;\n    }\n    local-address <lo0 address>;\n    <additional configuration>\n    peer <address> {\n        active-source-limit {\n            maximum <1..1000000>;\n            threshold <1..1000000>;\n            log-warning <percent to log warning>;\n        }\n        authentication-key \"hashed PSK\"; ## SECRET-DATA\n    }\n}\nNote: Both the global, and the peer limit, are applied to every MSDP peer, and Junos applies the most restrictive limit. The maximum value sets the upper limit for source-active messages and the threshold value determines when Junos begins Random Early Detection (RED) dropping to alleviate congestion. The log-warning value is a percent where Junos begins generating syslog messages.\n\nIf the router is not configured to limit the source-active messages it accepts, this is a finding.", "FixText": "Configure the MSDP router to limit the amount of source-active messages it accepts from each peer.\n\nset protocols msdp active-source-limit maximum <1..1000000>\nset protocols msdp active-source-limit threshold <1..1000000>\nset protocols msdp active-source-limit log-warning <percent to log warning>\n<additional configuration>\nset protocols msdp peer <address> active-source-limit maximum <1..1000000>\nset protocols msdp peer <address> active-source-limit threshold <1..1000000>\nset protocols msdp peer <address> active-source-limit log-warning <percent to log warning>", "CCI": "CCI-001368"}, {"VulnID": "V-253982", "RuleID": "SV-253982r843979_rule", "StigID": "JUEX-RT-000100", "Severity": "low", "Cat": "CAT III", "Classification": "", "GroupTitle": "SRG-NET-000018-RTR-000010", "RuleTitle": "The Juniper router configured for BGP must reject route advertisements from CE routers with an originating AS in the AS_PATH attribute that does not belong to that customer.", "Description": "<VulnDiscussion>Verifying the path a route has traversed will ensure that the local AS is not used as a transit network for unauthorized traffic. To ensure that the local AS does not carry any prefixes that do not belong to any customers, all PE routers must be configured to reject routes with an originating AS other than that belonging to the customer.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Verifying the path a route has traversed will ensure that the local AS is not used as a transit network for unauthorized traffic. To ensure that the local AS does not carry any prefixes that do not belong to any customers, all PE routers must be configured to reject routes with an originating AS other than that belonging to the customer.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "This requirement is not applicable for the DODIN Backbone. \n\nReview the router configuration to verify the router is configured to deny updates received from CE routers with an originating AS in the AS_PATH attribute that does not belong to that customer.\n\nReview the router configuration and verify that there is an as-path access-list statement defined. \n\nEach peer requires a regular expression (REGEX) defining the expected AS_PATH attribute. Each neighbor has an import policy applied to filter updates that do not match the expected path attribute. Assuming AS 65535 is an authorized neighbor's originating AS, verify an as-path REGEX is defined ('.* 65535') and a policy-statement configured to accept that REGEX.\n\n[edit policy-options]\npolicy-statement bgp_originate_65535 {\n    term 1 {\n        from as-path orig_65535;\n        then accept;\n    }\n    term 2 {\n        then reject;\n    }\n}\nas-path orig_65535 \".* 65535\";\nNote: The REGEX matches zero or more prepended AS in the AS_PATH beginning with the defined AS number (the originator is the right-most AS in the path). The AS_PATH attribute is a space-delimited list, so a space between the leading AS numbers (.*) and the originating AS (65535) is required.\n\nVerify that the as-path access list is referenced by the filter-list inbound for the appropriate BGP neighbors.\n\n[edit protocols bgp]\ngroup eBGP {\n    neighbor <address> {\n        import bgp_originate_65535;\n    }\n}\n\nIf the router is not configured to reject updates from CE routers with an originating AS in the AS_PATH attribute that does not belong to that customer, this is a finding.", "FixText": "Configure the router to reject updates from CE routers with an originating AS in the AS_PATH attribute that does not belong to that customer.\n\nset policy-options policy-statement bgp_originate_65535 term 1 from as-path orig_65535\nset policy-options policy-statement bgp_originate_65535 term 1 then accept\nset policy-options policy-statement bgp_originate_65535 term 2 then reject\nset policy-options as-path orig_65535 \".* 65535\"\n\nset protocols bgp group eBGP neighbor <address> import bgp_originate_65535", "CCI": "CCI-000032"}, {"VulnID": "V-253983", "RuleID": "SV-253983r843982_rule", "StigID": "JUEX-RT-000110", "Severity": "low", "Cat": "CAT III", "Classification": "", "GroupTitle": "SRG-NET-000019-RTR-000001", "RuleTitle": "The Juniper router must be configured to disable the auxiliary port unless it is connected to a secured modem providing encryption and authentication.", "Description": "<VulnDiscussion>The use of POTS lines to modems connecting to network devices provides clear text of authentication traffic over commercial circuits that could be captured and used to compromise the network. Additional war dial attacks on the device could degrade the device and the production network.\n\nSecured modem devices must be able to authenticate users and must negotiate a key exchange before full encryption takes place. The modem will provide full encryption capability (Triple DES) or stronger. The technician who manages these devices will be authenticated using an authorized MFA token and granted access to the appropriate maintenance port; thus, the technician will gain access to the managed device (router, switch, etc.). The token provides a method of strong (two-factor) user authentication. The token works in conjunction with a server to generate one-time user passwords. The user must know a personal identification number (PIN) and possess the token to be allowed access to the device.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "The use of POTS lines to modems connecting to network devices provides clear text of authentication traffic over commercial circuits that could be captured and used to compromise the network. Additional war dial attacks on the device could degrade the device and the production network.\n\nSecured modem devices must be able to authenticate users and must negotiate a key exchange before full encryption takes place. The modem will provide full encryption capability (Triple DES) or stronger. The technician who manages these devices will be authenticated using an authorized MFA token and granted access to the appropriate maintenance port; thus, the technician will gain access to the managed device (router, switch, etc.). The token provides a method of strong (two-factor) user authentication. The token works in conjunction with a server to generate one-time user passwords. The user must know a personal identification number (PIN) and possess the token to be allowed access to the device.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the configuration and verify that the auxiliary port is disabled unless a secured modem providing encryption and authentication is connected to it.\n\nThe Junos auxiliary port is disabled by default. Verify the auxiliary port is not configured (there will be no [edit system ports auxiliary] stanza) or that the auxiliary port is explicitly disabled.\n\n[edit system ports]\nauxiliary {\n    disable;\n}\n\nIf the auxiliary port is not disabled or is not connected to a secured modem when it is enabled, this is a finding.", "FixText": "Disable the auxiliary port.\n\nset system ports auxiliary disable\n-or-\ndelete system ports auxiliary\n\nIf used for out-of-band administrative access, the port must be connected to a secured modem providing encryption and authentication.", "CCI": "CCI-001414"}, {"VulnID": "V-253984", "RuleID": "SV-253984r843985_rule", "StigID": "JUEX-RT-000120", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000019-RTR-000002", "RuleTitle": "The Juniper router must be configured to enforce approved authorizations for controlling the flow of information between interconnected networks in accordance with applicable policy.", "Description": "<VulnDiscussion>Information flow control regulates authorized information to travel within a network and between interconnected networks. Controlling the flow of network traffic is critical so it does not introduce any unacceptable risk to the network infrastructure or data. An example of a flow control restriction is blocking outside traffic claiming to be from within the organization. For most routers, internal information flow control is a product of system design.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Information flow control regulates authorized information to travel within a network and between interconnected networks. Controlling the flow of network traffic is critical so it does not introduce any unacceptable risk to the network infrastructure or data. An example of a flow control restriction is blocking outside traffic claiming to be from within the organization. For most routers, internal information flow control is a product of system design.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Verify each router enforces approved authorizations for controlling the flow of information between interconnected networks in accordance with applicable policy.\n\nJunos enforces information flow via stateless firewall filters and unicast Reverse Path Forwarding (uRPF). uRPF performs a forwarding table lookup to validate the incoming packet's source address is appropriate for the arriving interface. Verify uRPF is enabled on applicable interfaces. The example shows uRPF and the stateless firewall filter applied. Verify the interface and assigned addresses are appropriate for the target environment.\n\n[edit interfaces]\n<interface name> {\n    unit <logical unit number> {\n        family inet {\n            rpf-check;\n           filter {\n              input deny-prod-to-mgt;\n           }\n        }\n        family inet6 {\n           rpf-check;\n           filter {\n              input deny-prod-to-mgt-v6;\n           }\n        }\n    }\n}\nNote: Some Juniper devices support both monolithic filters and filter lists. Filter lists separate each term, or set of terms, into a separate filter that is applied sequentially to an interface. If using filter lists, the keywords \"input\" or \"output\" change to \"input-list\" or \"output-list\". Verify the final list item is a deny-all filter. \n\n[edit firewall]\nfamily inet {\n    filter deny-prod-to-mgt {\n        term 1 {\n            from {\n                source-address {\n                    <production IPv4 subnet/mask>;\n                }\n                destination-address {\n                    <MGT IPv4 subnet/mask>;\n                }\n            }\n            then {\n                log;\n                syslog;\n                discard;\n            }\n        }\n        term 2 {\n            from {\n                source-address {\n                    <production IPv4 subnet/mask>;\n                }\n            }\n            then accept;\n        }\n    }\n}\nfamily inet6 {\n    filter deny-prod-to-mgt-v6 {\n        term 1 {                        \n            from {\n                source-address {\n                     <production IPv6 subnet/prefix>;\n                }\n                destination-address {\n                    <MGT IPv6 subnet/prefix>;\n                }\n            }\n            then {\n                log;\n                syslog;\n                discard;\n            }\n        }\n        term 2 {\n            from {\n                source-address {\n                    <production IPv6 subnet/prefix>;\n                }\n            }\n            then accept;\n        }\n    }\n}\n\nIf the router does not enforce approved authorizations for controlling the flow of information between interconnected networks in accordance with applicable policy, this is a finding.", "FixText": "Configure the router to enforce approved authorizations for controlling the flow of information between interconnected networks in accordance with applicable policy.\n\nset interfaces <interface name> unit <logical unit> family inet rpf-check\nset interfaces <interface name> unit <logical unit> family inet filter input deny-prod-to-mgt\nset interfaces <interface name> unit <logical unit> family inet6 rpf-check\nset interfaces <interface name> unit <logical unit> family inet6 filter input deny-prod-to-mgt-v6\n\nset firewall family inet filter deny-prod-to-mgt term 1 from source-address <production IPv4 subnet/mask>\nset firewall family inet filter deny-prod-to-mgt term 1 from destination-address <MGT IPv4 subnet/mask>\nset firewall family inet filter deny-prod-to-mgt term 1 then log\nset firewall family inet filter deny-prod-to-mgt term 1 then syslog\nset firewall family inet filter deny-prod-to-mgt term 1 then discard\nset firewall family inet filter deny-prod-to-mgt term 2 from source-address <production IPv4 subnet/mask>\nset firewall family inet filter deny-prod-to-mgt term 2 then accept\n\nset firewall family inet6 filter deny-prod-to-mgt-v6 term 1 from source-address <production IPv6 subnet/prefix>\nset firewall family inet6 filter deny-prod-to-mgt-v6 term 1 from destination-address <MGT IPv6 subnet/prefix>\nset firewall family inet6 filter deny-prod-to-mgt-v6 term 1 then log\nset firewall family inet6 filter deny-prod-to-mgt-v6 term 1 then syslog\nset firewall family inet6 filter deny-prod-to-mgt-v6 term 1 then discard\nset firewall family inet6 filter deny-prod-to-mgt-v6 term 2 from source-address <production IPv6 subnet/prefix>\nset firewall family inet6 filter deny-prod-to-mgt-v6 term 2 then accept", "CCI": "CCI-001414"}, {"VulnID": "V-253985", "RuleID": "SV-253985r843988_rule", "StigID": "JUEX-RT-000130", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000019-RTR-000003", "RuleTitle": "The Juniper router must be configured to disable Protocol Independent Multicast (PIM) on all interfaces that are not required to support multicast routing.", "Description": "<VulnDiscussion>If multicast traffic is forwarded beyond the intended boundary, it is possible that it can be intercepted by unauthorized or unintended personnel. Limiting where, within the network, a given multicast group's data is permitted to flow is an important first step in improving multicast security. \n\nA scope zone is an instance of a connected region of a given scope. Zones of the same scope cannot overlap while zones of a smaller scope will fit completely within a zone of a larger scope. For example, Admin-local scope is smaller than Site-local scope, so the administratively configured boundary fits within the bounds of a site. According to RFC 4007 IPv6 Scoped Address Architecture (section 5), scope zones are also required to be \"convex from a routing perspective\"; that is, packets routed within a zone must not pass through any links that are outside of the zone. This requirement forces each zone to be one contiguous island rather than a series of separate islands. \n\nAs stated in the DoD IPv6 IA Guidance for MO3, \"One should be able to identify all interfaces of a zone by drawing a closed loop on their network diagram, engulfing some routers and passing through some routers to include only some of their interfaces.\" Therefore, it is imperative that the network engineers have documented their multicast topology and thereby know which interfaces are enabled for multicast. Once this is done, the zones can be scoped as required.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "If multicast traffic is forwarded beyond the intended boundary, it is possible that it can be intercepted by unauthorized or unintended personnel. Limiting where, within the network, a given multicast group's data is permitted to flow is an important first step in improving multicast security. \n\nA scope zone is an instance of a connected region of a given scope. Zones of the same scope cannot overlap while zones of a smaller scope will fit completely within a zone of a larger scope. For example, Admin-local scope is smaller than Site-local scope, so the administratively configured boundary fits within the bounds of a site. According to RFC 4007 IPv6 Scoped Address Architecture (section 5), scope zones are also required to be \"convex from a routing perspective\"; that is, packets routed within a zone must not pass through any links that are outside of the zone. This requirement forces each zone to be one contiguous island rather than a series of separate islands. \n\nAs stated in the DoD IPv6 IA Guidance for MO3, \"One should be able to identify all interfaces of a zone by drawing a closed loop on their network diagram, engulfing some routers and passing through some routers to include only some of their interfaces.\" Therefore, it is imperative that the network engineers have documented their multicast topology and thereby know which interfaces are enabled for multicast. Once this is done, the zones can be scoped as required.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "If IPv4 or IPv6 multicast routing is enabled, verify all interfaces enabled for PIM are documented in the network's multicast topology diagram.\n\nReview the router configuration to determine if multicast routing is enabled and which interfaces are enabled for PIM.\n\nBy default, PIM is not enabled on any interface. If not a PIM router, verify there is no PIM stanza at [edit protocols], PIM is disabled globally and/or for all interfaces, or that the stanza is inactive.\n[edit protocols]\ninactive: pim { << Stanza is removed or marked inactive\n    disable; << If stanza is present and not inactive, verify globally disabled\n    interface all { << If stanza is present, not inactive, and not globally disabled, disable for all interfaces\n        disable;\n    }\n}\n\nFor PIM routers, verify only the required interfaces are configured. For example, the following configuration enables PIM on a specific interface and disables PIM for all others.\n[edit protocols]\npim {\n    interface <name>.<logical unit>;\n    interface all {\n        disable;\n    }\n}\n\nNote: More specific interface configuration statements are preferred. In the example, the interface configuration is more specific than interface \"all\", so PIM is enabled only on that interface.\n\nIf an interface is not required to support multicast routing and it is enabled, this is a finding.", "FixText": "Document all enabled interfaces for PIM in the network's multicast topology diagram. Disable support for PIM on interfaces that are not required to support it.\n\nFor non-PIM routers, verify there is no [edit protocols pim] stanza. If the stanza is present, delete or deactivate it.\ndelete protocols pim\ndeactivate protocols pim\n\nTo disable PIM globally or for all interfaces.\nset protocols pim disable\nset protocols pim interface all disable\n\nFor PIM routers verify only the required interfaces are configured and all others are disabled:\nset protocols pim interface <name>.<logical unit>\nset protocols pim interface all disable", "CCI": "CCI-001414"}, {"VulnID": "V-253986", "RuleID": "SV-253986r843991_rule", "StigID": "JUEX-RT-000140", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000019-RTR-000004", "RuleTitle": "The Juniper router must be configured to bind a Protocol Independent Multicast (PIM) neighbor filter to interfaces that have PIM enabled.", "Description": "<VulnDiscussion>PIM is a routing protocol used to build multicast distribution trees for forwarding multicast traffic across the network infrastructure. PIM traffic must be limited to only known PIM neighbors by configuring and binding a PIM neighbor filter to those interfaces that have PIM enabled. If a PIM neighbor filter is not applied to those interfaces that have PIM enabled, unauthorized routers can join the PIM domain, discover and use the rendezvous points, and also advertise their rendezvous points into the domain. This can result in a denial of service by traffic flooding or result in the unauthorized transfer of data.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "PIM is a routing protocol used to build multicast distribution trees for forwarding multicast traffic across the network infrastructure. PIM traffic must be limited to only known PIM neighbors by configuring and binding a PIM neighbor filter to those interfaces that have PIM enabled. If a PIM neighbor filter is not applied to those interfaces that have PIM enabled, unauthorized routers can join the PIM domain, discover and use the rendezvous points, and also advertise their rendezvous points into the domain. This can result in a denial of service by traffic flooding or result in the unauthorized transfer of data.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "This requirement is not applicable for the DODIN Backbone.\n\nReview the multicast topology diagram and determine if router interfaces are enabled for IPv4 or IPv6 multicast routing.\n\nBy default, PIM is not enabled on any interface. If not a PIM router, verify there is no PIM stanza at [edit protocols], PIM is disabled globally and/or for all interfaces, or that the stanza is inactive.\n[edit protocols]\ninactive: pim { << Stanza is removed or marked inactive\n    disable; << If stanza is present and not inactive, verify globally disabled\n    interface all { << If stanza is present, not inactive, and not globally disabled, disable for all interfaces\n        disable;\n    }\n}\n\nFor PIM routers, verify only the required interfaces are configured. For example, the following configuration enables PIM on a specific interface and disables PIM for all others.\n[edit protocols]\npim {\n    interface <name>.<logical unit>;\n    interface all {\n        disable;\n    }\n}\n\nNote: More specific interface configuration statements are preferred. In the example, the interface configuration is more specific than interface \"all\", so PIM is enabled only on that interface.\n\nIf the router is enabled for multicast routing, verify all interfaces enabled for PIM have a neighbor filter bound to the interface. The neighbor filter must only accept PIM control plane traffic from the documented PIM neighbors.\n[edit policy-options]\nprefix-list PIM-NEIGHBOR-1 {\n    <PIM neighbor address>/32;\n}\n<additional PIM neighbor lists>\npolicy-statement PIM-NBR-1 {\n    from {\n        prefix-list PIM-NEIGHBOR-1;\n    }\n    then accept;\n}\n<additional policies>\n[edit protocols pim]\ninterface <interface name>.<logical unit> {\n    mode sparse;\n    neighbor-policy PIM-NBR1;\n}\ninterface all {\n    disable;\n}\n\nIf PIM neighbor filters are not bound to all interfaces that have PIM enabled, this is a finding.", "FixText": "This requirement is not applicable for the DODIN Backbone.\n\nConfigure neighbor filters to only accept PIM control plane traffic from documented PIM neighbors. Bind neighbor filters to all PIM enabled interfaces.\n\nset policy-options prefix-list PIM-NEIGHBOR-1 <PIM neighbor address>/32\nset policy-options policy-statement PIM-NBR-1 from prefix-list PIM-NEIGHBOR-1\nset policy-options policy-statement PIM-NBR-1 then accept\n\nset protocols pim interface <interface name>.<logical unit> mode sparse\nset protocols pim interface <interface name>.<logical unit> neighbor-policy PIM-NBR-1\nset protocols pim interface all disable", "CCI": "CCI-001414"}, {"VulnID": "V-253987", "RuleID": "SV-253987r843994_rule", "StigID": "JUEX-RT-000150", "Severity": "low", "Cat": "CAT III", "Classification": "", "GroupTitle": "SRG-NET-000019-RTR-000005", "RuleTitle": "The Juniper multicast edge router must be configured to establish boundaries for administratively scoped multicast traffic.", "Description": "<VulnDiscussion>If multicast traffic is forwarded beyond the intended boundary, it is possible that it can be intercepted by unauthorized or unintended personnel.\n\nAdministrative scoped multicast addresses are locally assigned and are to be used exclusively by the enterprise network or enclave. Administrative scoped multicast traffic must not cross the enclave perimeter in either direction. Restricting multicast traffic makes it more difficult for a malicious user to access sensitive traffic.\n\nAdmin-Local scope is encouraged for any multicast traffic within a network intended for network management, as well as for control plane traffic that must reach beyond link-local destinations.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "If multicast traffic is forwarded beyond the intended boundary, it is possible that it can be intercepted by unauthorized or unintended personnel.\n\nAdministrative scoped multicast addresses are locally assigned and are to be used exclusively by the enterprise network or enclave. Administrative scoped multicast traffic must not cross the enclave perimeter in either direction. Restricting multicast traffic makes it more difficult for a malicious user to access sensitive traffic.\n\nAdmin-Local scope is encouraged for any multicast traffic within a network intended for network management, as well as for control plane traffic that must reach beyond link-local destinations.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the router configuration and verify that admin-scope multicast traffic is blocked at the external edge.\n\nVerify either a scope is defined for specific interfaces or a scope policy is applied.\n[edit routing-options multicast]\nscope <name IPv4> { \n    prefix 239.0.0.0/8;\n    interface [ <external interface 1> <external interface 2> ];\n}\nscope <name IPv6> { \n    prefix ff08::/16;\n    interface [ <external interface 1> <external interface 2> ];\n}\n\n-or-\n\n[edit policy-options]\npolicy-statement <name> {\n    term 1 {\n        from {\n            route-filter 239.0.0.0/8 orlonger;\n            route-filter ff08::/16 orlonger;\n        }\n        then reject;\n    }\n}\n[edit routing-options multicast]\nscope-policy <policy name>\n\nIf the router is not configured to establish boundaries for administratively scoped multicast traffic, this is a finding.", "FixText": "Configure the policy to deny packets with multicast administratively scoped destination addresses.\nset routing-options multicast scope <IPv4 scope name> prefix 239.0.0.0/8;\nset routing-options multicast scope <IPv6 scope name> prefix ff08::/16;\n\n-or-\n\nset policy-options policy-statement <policy name> term 1 from route-filter 239.0.0.0/8 orlonger\nset policy-options policy-statement <policy name> term 1 from route-filter ff08::/16 orlonger\n\nApply the multicast boundary at the appropriate interfaces.\nset routing-options multicast scope <IPv4 scope name> interface [ <external interface 1> <external interface 2> ]\nset routing-options multicast scope <IPv6 scope name> interface [ <external interface 1> <external interface 2> ]\n\n-or-\n\nset routing-options multicast scope-policy <policy name>", "CCI": "CCI-001414"}, {"VulnID": "V-253988", "RuleID": "SV-253988r843997_rule", "StigID": "JUEX-RT-000160", "Severity": "low", "Cat": "CAT III", "Classification": "", "GroupTitle": "SRG-NET-000019-RTR-000007", "RuleTitle": "The Juniper router must be configured to have all inactive interfaces disabled.", "Description": "<VulnDiscussion>An inactive interface is rarely monitored or controlled and may expose a network to an undetected attack on that interface. Unauthorized personnel with access to the communication facility could gain access to a router by connecting to a configured interface that is not in use.\n\nIf an interface is no longer used, the configuration must be deleted and the interface disabled. For logical interfaces, delete those that are on inactive interfaces and delete logical interfaces that are themselves inactive. If the logical interface is no longer necessary for authorized communications, it must be deleted.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "An inactive interface is rarely monitored or controlled and may expose a network to an undetected attack on that interface. Unauthorized personnel with access to the communication facility could gain access to a router by connecting to a configured interface that is not in use.\n\nIf an interface is no longer used, the configuration must be deleted and the interface disabled. For logical interfaces, delete those that are on inactive interfaces and delete logical interfaces that are themselves inactive. If the logical interface is no longer necessary for authorized communications, it must be deleted.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the router configuration and verify unused interfaces are not configured (implicitly disabled) or are explicitly disabled. If explicitly disabling interfaces, verify multiple interfaces are disabled with the \"interface-range\" command or separately at each interface declaration.\n\n[edit interfaces]\ninterface-range DISABLED_INTERFACES {\n    member <interface name>;\n    member-range <first interface> to <last interface>;\n    disable;\n}\n<interface name> {\n    disable;\n}\n\nNote: Individually disabled interfaces should not be included in any \"interface-range\" stanza. The \"member-range\" directive assigns the configured parameter(s) to contiguously numbered interfaces.\n\nJunos lists interfaces in order so a \"missing\" interface is not enabled. For instance, if ge-0/0/0 and ge-0/0/2 are configured, but there is no individual ge-0/0/1 stanza and that interface is not a member of an interface-range, then ge-0/0/1 is implicitly disabled.\n\nIf an interface is not being used but is configured or enabled, this is a finding.", "FixText": "Disable inactive interfaces.\n\ndelete interfaces <interface name>\n-or-\nset interfaces <interface name> disable\n-or-\nset interfaces interface-range DISABLED_INTERFACES member <interface name>\nset interfaces interface-range DISABLED_INTERFACES member-range <first interface name> to <last interface name>\nset interfaces interface-range DISABLED_INTERFACES disable", "CCI": "CCI-001414"}, {"VulnID": "V-253989", "RuleID": "SV-253989r844000_rule", "StigID": "JUEX-RT-000170", "Severity": "high", "Cat": "CAT I", "Classification": "", "GroupTitle": "SRG-NET-000019-RTR-000008", "RuleTitle": "The Juniper perimeter router must be configured to protect an enclave connected to an alternate gateway by using an inbound filter that only permits packets with destination addresses within the site's address space.", "Description": "<VulnDiscussion>Enclaves with alternate gateway connections must take additional steps to ensure there is no compromise on the enclave network or NIPRNet. Without verifying the destination address of traffic coming from the site's alternate gateway, the perimeter router could be routing transit data from the internet into the NIPRNet. This could also make the perimeter router vulnerable to a denial-of-service (DoS) attack as well as provide a back door into the NIPRNet. The DoD enclave must ensure the ingress filter applied to external interfaces on a perimeter router connecting to an Approved Gateway is secure through filters permitting packets with a destination address belonging to the DoD enclave's address block.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Enclaves with alternate gateway connections must take additional steps to ensure there is no compromise on the enclave network or NIPRNet. Without verifying the destination address of traffic coming from the site's alternate gateway, the perimeter router could be routing transit data from the internet into the NIPRNet. This could also make the perimeter router vulnerable to a denial-of-service (DoS) attack as well as provide a back door into the NIPRNet. The DoD enclave must ensure the ingress filter applied to external interfaces on a perimeter router connecting to an Approved Gateway is secure through filters permitting packets with a destination address belonging to the DoD enclave's address block.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "This requirement is not applicable for the DODIN Backbone.\n\nReview the configuration of each router interface connecting to an alternate gateway.\n\nVerify each permit statement of the ingress filter only permits packets with destination addresses of the site's NIPRNet address space or a destination address belonging to the address block assigned by the alternate gateway network service provider. Verify each permit statement \"from\" stanza (filter match conditions) references either the \"destination-address\" or \"destination-prefix-list\" directive. Using prefix lists makes management easier because managing interior addresses must only be configured in one location (the prefix-list) vice many locations (each permitting filter term). For example:\n[edit policy-options]\nprefix-list inside_addresses-ipv4 {\n    <IPv4 subnet / mask>;\n}\nprefix-list inside_addresses-ipv6 {\n    <IPv6 subnet / prefix>;\n}\n[edit firewall]\nfamily inet {\n    filter inbound-ipv4 {\n        <deny terms>;\n        permit-term1 {\n            from {\n                <match conditions>;\n                destination-prefix-list inside_addresses-ipv4;\n            }\n            then accept;\n        }\n        <additional permit terms with a destination address definition>\n    }\n}\nfamily inet6 {\n    filter inbound-ipv6 {\n        <deny terms>;\n        permit-term1 {\n            from {\n                <match conditions>;\n                destination-prefix-list inside_addresses-ipv6;\n            }\n            then accept;\n        }\n        <additional permit terms with a destination address definition>\n    }\n}\n\nVerify the filter is applied inbound on exterior-facing interfaces. For example:\n[edit interfaces]\n<interface name> {\n    unit <number> {\n        family inet {\n            filter {\n                input inbound-ipv4;\n            }\n            address <IPv4 address / mask>;\n        }\n        family inet6 {\n            filter {\n                input inbound-ipv6;\n            }\n            address <IPv6 address / prefix>;\n        }\n    }\n}\n\nNote: Some Juniper devices support both monolithic filters and filter lists. Filter lists separate each term, or set of terms, into a separate filter that is applied sequentially to an interface. If using filter lists, the keywords \"input\" or \"output\" change to \"input-list\" or \"output-list\". Verify the final list item is a deny-all filter.\n\nIf the ingress filter permits packets with addresses other than those specified, such as destination addresses of the site's NIPRNet address space or a destination address belonging to the address block assigned by the alternate gateway network service provider, this is a finding.", "FixText": "This requirement is not applicable for the DODIN Backbone.\n\nConfigure the ingress filter of the perimeter router connected to an alternate gateway to only permit packets with destination addresses of the site's NIPRNet address space or a destination address belonging to the address block assigned by the alternate gateway network service provider. For example:\n\nset policy-options prefix-list inside_addresses-ipv4 <IPv4 subnet / mask>\nset policy-options prefix-list inside_addresses-ipv6 <IPv6 subnet / prefix>\n\nset firewall family inet filter inbound-ipv4 <deny terms>\nset firewall family inet filter inbound-ipv4 <permit term> from <match conditions>\nset firewall family inet filter inbound-ipv4 <permit term> from destination-prefix-list inside_addresses-ipv4\nset firewall family inet filter inbound-ipv4 <permit term> then accept\n\nset firewall family inet6 filter inbound-ipv6 <deny terms>\nset firewall family inet6 filter inbound-ipv6 <permit term> from <match conditions>\nset firewall family inet6 filter inbound-ipv6 <permit term> from destination-prefix-list inside_addresses-ipv6\nset firewall family inet6 filter inbound-ipv6 <permit term> then accept", "CCI": "CCI-001414"}, {"VulnID": "V-253990", "RuleID": "SV-253990r844003_rule", "StigID": "JUEX-RT-000180", "Severity": "high", "Cat": "CAT I", "Classification": "", "GroupTitle": "SRG-NET-000019-RTR-000009", "RuleTitle": "The Juniper perimeter router must not be configured to be a Border Gateway Protocol (BGP) peer to an alternate gateway service provider.", "Description": "<VulnDiscussion>ISPs use BGP to share route information with other autonomous systems (i.e., other ISPs and corporate networks). If the perimeter router was configured to BGP peer with an ISP, NIPRNet routes could be advertised to the ISP; thereby creating a backdoor connection from the internet to the NIPRNet.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "ISPs use BGP to share route information with other autonomous systems (i.e., other ISPs and corporate networks). If the perimeter router was configured to BGP peer with an ISP, NIPRNet routes could be advertised to the ISP; thereby creating a backdoor connection from the internet to the NIPRNet.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "This requirement is not applicable for the DODIN Backbone.\n\nReview the configuration of the router connecting to the alternate gateway.\n\nReview the [edit protocols bgp] hierarchy and verify there are no BGP neighbors configured to the remote AS that belongs to the alternate gateway service provider. For example:\n[edit protocols bgp]\ngroup eBGP {\n    type external;\n    peer-as 2;\n    neighbor <address-1> {\n        <bgp neighbor configuration>;\n    }\n    neighbor <address-2> {\n        <bgp neighbor configuration>;\n    }\n}\n\nNote: Neither neighbor can belong to a peer AS belonging to the alternate gateway service provider.\n\nVerify static routing to the peer AS belonging to the alternate gateway service provider. For example:\n[edit routing-options]\nrib inet6.0 {\n    static {\n        route <peer AS IPv6 subnet>/<prefix> next-hop <peer AS router>;\n    }\n}\nstatic {\n    route <peer AS IPv4 subnet>/<mask> next-hop <peer AS router>;\n}\n\nIf there are BGP neighbors connecting the remote AS of the alternate gateway service provider, this is a finding.", "FixText": "This requirement is not applicable for the DODIN Backbone.\n\nRemove BGP neighbors belonging to the alternate gateway service provider.\n\ndelete protocols bgp group <name> neighbor <peer AS belonging to alternate gateway service provider>\n\nConfigure a static route on the perimeter router to reach the AS of a router connecting to an alternate gateway.\n\nset routing-options rib inet6.0 static route <IPv6 subnet>/<prefix> next-hop <peer AS router>\nset routing-options static route <IPv4 subnet>/<mask> next-hop <peer AS router>", "CCI": "CCI-001414"}, {"VulnID": "V-253991", "RuleID": "SV-253991r844006_rule", "StigID": "JUEX-RT-000190", "Severity": "low", "Cat": "CAT III", "Classification": "", "GroupTitle": "SRG-NET-000019-RTR-000010", "RuleTitle": "The Juniper perimeter router must not be configured to redistribute static routes to an alternate gateway service provider into BGP or an IGP peering with the NIPRNet or to other autonomous systems.", "Description": "<VulnDiscussion>If the static routes to the alternate gateway are being redistributed into an Exterior Gateway Protocol or Interior Gateway Protocol to a NIPRNet gateway, this could make traffic on NIPRNet flow to that particular router and not to the Internet Access Point routers. This could not only wreak havoc with traffic flows on NIPRNet, but it could overwhelm the connection from the router to the NIPRNet gateway(s) and also cause traffic destined for outside of NIPRNet to bypass the defenses of the Internet Access Points.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "If the static routes to the alternate gateway are being redistributed into an Exterior Gateway Protocol or Interior Gateway Protocol to a NIPRNet gateway, this could make traffic on NIPRNet flow to that particular router and not to the Internet Access Point routers. This could not only wreak havoc with traffic flows on NIPRNet, but it could overwhelm the connection from the router to the NIPRNet gateway(s) and also cause traffic destined for outside of NIPRNet to bypass the defenses of the Internet Access Points.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "This requirement is not applicable for the DODIN Backbone. \n\nReview the configuration of the router connecting to the alternate gateway and verify that redistribution of static routes to the alternate gateway is not occurring. Juniper routers use export policies to limit redistribution of routes. Verify a policy exists to filter route redistribution.\n\n[edit policy-options]\npolicy-statement <name> {\n    term 1 {\n        from protocol static;\n        then reject;\n    }\n}\n\nVerify the export policy is applied to the EGP and/or IGP protocol.\n[edit protocols]\nbgp {\n    export <policy-name>;\n    group <group name> {\n        type external;\n        export <policy-name>;\n        neighbor <address> {\n            export <policy-name>;\n        }\n    }\n    ospf {\n        export <policy name>;\n    }\n    ospf3 {\n        export <policy name>;\n    }\n}\n\nNote: BGP supports export statements at the protocol level (global), the group level, and the neighbor level. Only the most specific policy is applied.\n\nIf the static routes to the alternate gateway are being redistributed into BGP or any IGP peering with a NIPRNet gateway or another autonomous system, this is a finding.", "FixText": "This requirement is not applicable for the DODIN Backbone.\n\nConfigure the router so that static routes are not redistributed to an alternate gateway into either an Exterior Gateway Protocol or Interior Gateway Protocol to the NIPRNet or to other autonomous systems.\nset policy-options policy-statement <policy name> term 1 from protocol static\nset policy-options policy-statement <policy name> term 1 then reject\n\nset protocols bgp group <group name> export <policy name>\nset protocols bgp group <group name> neighbor <address> export <policy name>\nset protocols bgp export <policy name>\n\nset protocols ospf export <policy name>\nset protocols ospf3 export <policy name>", "CCI": "CCI-001414"}, {"VulnID": "V-253992", "RuleID": "SV-253992r844009_rule", "StigID": "JUEX-RT-000200", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000019-RTR-000011", "RuleTitle": "The Juniper out-of-band management (OOBM) gateway router must be configured to have separate IGP instances for the managed network and management network.", "Description": "<VulnDiscussion>If the gateway router is not a dedicated device for the OOBM network, implementation of several safeguards for containment of management and production traffic boundaries must occur. Since the managed and management network are separate routing domains, configuration of separate Interior Gateway Protocol routing instances is critical on the router to segregate traffic from each network.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "If the gateway router is not a dedicated device for the OOBM network, implementation of several safeguards for containment of management and production traffic boundaries must occur. Since the managed and management network are separate routing domains, configuration of separate Interior Gateway Protocol routing instances is critical on the router to segregate traffic from each network.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "This requirement is not applicable for the DODIN Backbone.\n\nVerify that the OOBM interface is an adjacency in the Interior Gateway Protocol routing domain for the management network. Interfaces can only be assigned to one routing instance. \n\n[edit protocols ospf]\ninterface <interface name>.<logical unit>; << Cannot be assigned to a virtual routing instance.\n\n[edit routing-instances]\n<name> {\n    instance-type virtual-router;\n    protocols {\n        ospf {\n            area <area number> {\n                interface <interface name>.<logical unit>; << Cannot be assigned to the default routing instance at [edit protocols].\n            }\n        }\n    }\n}\n\nNote: If the same interface is assigned to the default routing instance and to a virtual routing instance, commit fails.\n\nSome platforms support a routing-instance using the reserved name \"mgmt_junos\". On these platforms, configure the \"mgmt_junos\" instance and apply at the [edit system] hierarchy.\n[edit system]\nmanagement-instance;\n\n[edit routing-instances]\nmgmt_junos {\n    routing-options {\n        static {\n            route 0.0.0.0/0 next-hop <next-hop address>;\n        }\n    }\n}\nNote: Not all platforms support routing instances.\n\nIf the router does not enforce that Interior Gateway Protocol instances configured on the OOBM gateway router peer only with their own routing domain, this is a finding.", "FixText": "This requirement is not applicable for the DODIN Backbone.\n\nConfigure the router to enforce that Interior Gateway Protocol instances configured on the OOBM gateway router peer only with their own routing domain.\nset protocols ospf area <number> interface <interface name>.<logical unit>\n\nset routing-instances <name> instance-type virtual-router\nset routing-instances <name> protocols ospf area <number> interface <interface name>.<logical unit>", "CCI": "CCI-001414"}, {"VulnID": "V-253993", "RuleID": "SV-253993r844012_rule", "StigID": "JUEX-RT-000210", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000019-RTR-000012", "RuleTitle": "The Juniper out-of-band management (OOBM) gateway router must not be configured to redistribute routes between the management network routing domain and the managed network routing domain.", "Description": "<VulnDiscussion>If the gateway router is not a dedicated device for the OOBM network, several safeguards must be implemented for containment of management and production traffic boundaries; otherwise, it is possible that management traffic will not be separated from production traffic.\n\nSince the managed network and the management network are separate routing domains, separate Interior Gateway Protocol routing instances must be configured on the router, one for the managed network and one for the OOBM network. In addition, the routes from the two domains must not be redistributed to each other.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "If the gateway router is not a dedicated device for the OOBM network, several safeguards must be implemented for containment of management and production traffic boundaries; otherwise, it is possible that management traffic will not be separated from production traffic.\n\nSince the managed network and the management network are separate routing domains, separate Interior Gateway Protocol routing instances must be configured on the router, one for the managed network and one for the OOBM network. In addition, the routes from the two domains must not be redistributed to each other.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "This requirement is not applicable for the DODIN Backbone.\n\nVerify the Interior Gateway Protocol instance used for the managed network does not redistribute routes into the Interior Gateway Protocol instance used for the management network, and vice versa.\n\nJuniper routers use export policies to limit redistribution of routes. Verify a policy exists to filter route redistribution. Juniper policy-statements support terms, which provides greater granularity within a single policy. \n\n[edit policy-options]\npolicy-statement deny-mgt-redist {\n    term 1 {\n        from protocol static;\n        then reject;\n    }\n    term 2 { \n        from {\n            protocol ospf;\n            route-filter <IPv4 subnet>/<mask> orlonger;\n            route-filter <IPv6 subnet>/<prefix> orlonger;\n        }\n        then reject;\n    }\n    <additional terms permitting authorized routes for redistribution>\n}\npolicy-statement deny-managed-routes {\n    term 1 {\n        from {\n            route-filter <IPv4 subnet>/<mask> orlonger;\n            route-filter <IPv6 subnet>/<prefix> orlonger;\n        }\n        then accept;\n    }\n    term 2 {\n        then reject;\n    }\n}\n\nVerify an export policy is applied to the IGP protocol for each routing instance (default and OOBM).\n[edit protocols]\n    ospf {\n        area <area number> {\n            interface <NOT OOBM interface>.<logical unit>;\n        }\n        export deny-mgt-redist;\n    }\n    ospf3 {\n        area <area number> {\n            interface <NOT OOBM interface>.<logical unit>;\n        }\n        export deny-mgt-redist;\n    }\n}\n[edit routing-instances]\nOOBM {\n    instance-type virtual-router;\n    protocols {\n        ospf {\n            area <area number> {\n                interface <OOBM interface>.<logical unit>;\n            }\n            export deny-managed-routes;\n        }\n        ospf3 {\n            area <area number> {\n                interface <OOBM interface>.<logical unit>;\n            }\n            export deny-managed-routes;\n        }\n    }\n}\n\nIf the Interior Gateway Protocol instance used for the managed network redistributes routes into the Interior Gateway Protocol instance used for the management network, or vice versa, this is a finding.", "FixText": "This requirement is not applicable for the DODIN Backbone.\n\nConfigure the Interior Gateway Protocol instance used for the managed network to prohibit redistribution of routes into the Interior Gateway Protocol instance used for the management network, and vice versa.\n\nset policy-options policy-statement deny-managed-routes term 1 from route-filter <IPv4 subnet>/<mask> orlonger\nset policy-options policy-statement deny-managed-routes term 1 from route-filter <IPv6 subnet>/<prefix> orlonger\nset policy-options policy-statement deny-managed-routes term 1 then accept\nset policy-options policy-statement deny-managed-routes term 2 then reject\nset policy-options policy-statement deny-mgt-redist term 1 from protocol static\nset policy-options policy-statement deny-mgt-redist term 1 then reject\nset policy-options policy-statement deny-mgt-redist term 2 from protocol ospf\nset policy-options policy-statement deny-mgt-redist term 2 from route-filter <IPv4 subnet>/<mask> orlonger\nset policy-options policy-statement deny-mgt-redist term 2 from route-filter <IPv6 subnet>/<prefix> orlonger\nset policy-options policy-statement deny-mgt-redist term 2 then reject\n<additional terms for permitted redistributable routes>\n\nset routing-instances OOBM instance-type virtual-router\nset routing-instances OOBM protocols ospf area <area number> interface <OOBM interface>.<logical unit>\nset routing-instances OOBM protocols ospf export test\nset routing-instances OOBM protocols ospf3 area <area number> interface <OOBM interface>.<logical unit>\nset routing-instances OOBM protocols ospf3 export test", "CCI": "CCI-001414"}, {"VulnID": "V-253994", "RuleID": "SV-253994r844015_rule", "StigID": "JUEX-RT-000220", "Severity": "low", "Cat": "CAT III", "Classification": "", "GroupTitle": "SRG-NET-000019-RTR-000013", "RuleTitle": "The Juniper multicast Rendezvous Point (RP) router must be configured to filter Protocol Independent Multicast (PIM) Register messages received from the Designated Router (DR) for any undesirable multicast groups and sources.", "Description": "<VulnDiscussion>Real-time multicast traffic can entail multiple large flows of data. An attacker can flood a network segment with multicast packets, over-using the available bandwidth and thereby creating a denial-of-service (DoS) condition. Hence, it is imperative that register messages are accepted only for authorized multicast groups and sources.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Real-time multicast traffic can entail multiple large flows of data. An attacker can flood a network segment with multicast packets, over-using the available bandwidth and thereby creating a denial-of-service (DoS) condition. Hence, it is imperative that register messages are accepted only for authorized multicast groups and sources.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Verify that the RP router is configured to filter PIM register messages from unauthorized multicast groups and sources.\n[edit policy-options]\npolicy-statement <name> {\n    term filter_groups {\n        from {\n            route-filter <multicast address>/<mask> orlonger;\n            route-filter <multicast address>/<mask> exact;\n            <additional groups to filter>\n        }\n        then reject;\n    }\n    term filter_sources {\n        from {\n            source-address-filter <source host address>/32 exact;\n            source-address-filter <source subnet address>/<mask> orlonger;\n            <additional source addresses to filter>\n        }\n        then reject;\n    }\n    term accept_others {\n        then accept;\n    }\n}\n\n[edit protocols pim]\nrp {\n    rp-register-policy <policy name>;\n} \n\nIf the RP router peering with PIM-SM routers is not configured with a PIM import policy to block registration messages for any undesirable multicast groups and sources, this is a finding.", "FixText": "Configure the RP router to filter PIM register messages received from a multicast DR for any undesirable multicast groups or sources.\n\nset policy-options policy-statement <name> term filter_groups from route-filter <multicast address>/<mask> <match criterion>\nset policy-options policy-statement <name> term filter_groups from route-filter <additional multicast address>/<mask> <match criterion>\nset policy-options policy-statement <name> term filter_groups then reject\n\nset policy-options policy-statement <name> term filter_source from source-address-filter <source address>/<mask> <match criterion>\nset policy-options policy-statement <name> term filter_source from source-address-filter <additional source address>/<mask> <match criterion>\nset policy-options policy-statement <name> term filter_source then reject\n\nset policy-options policy-statement <name> term accept_others then accept\n\nset protocols pim rp rp-register-policy <policy name>", "CCI": "CCI-001414"}, {"VulnID": "V-253995", "RuleID": "SV-253995r844018_rule", "StigID": "JUEX-RT-000230", "Severity": "low", "Cat": "CAT III", "Classification": "", "GroupTitle": "SRG-NET-000019-RTR-000014", "RuleTitle": "The Juniper multicast Rendezvous Point (RP) router must be configured to filter Protocol Independent Multicast (PIM) Join messages received from the Designated Router (DR) for any undesirable multicast groups.", "Description": "<VulnDiscussion>Real-time multicast traffic can entail multiple large flows of data. An attacker can flood a network segment with multicast packets, over-using the available bandwidth and thereby creating a denial-of-service (DoS) condition. Hence, it is imperative that join messages are only accepted for authorized multicast groups.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Real-time multicast traffic can entail multiple large flows of data. An attacker can flood a network segment with multicast packets, over-using the available bandwidth and thereby creating a denial-of-service (DoS) condition. Hence, it is imperative that join messages are only accepted for authorized multicast groups.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Verify that the RP router is configured to filter PIM register messages.\n[edit policy-options]\npolicy-statement <name> {\n    term filter_groups {\n        from {\n            route-filter <multicast address>/<mask> orlonger;\n            route-filter <multicast address>/<mask> exact;\n            <additional groups to filter>\n        }\n        then reject;\n    }\n    term filter_sources {\n        from {\n            source-address-filter <source host address>/32 exact;\n            source-address-filter <source subnet address>/<mask> orlonger;\n            <additional source addresses to filter>\n        }\n        then reject;\n    }\n    term accept_others {\n        then accept;\n    }\n}\n[edit protocols]\npim {\n    mode sparse;\n    import <policy name>;\n}\n\nNote: Alternative is to verify all designated routers are filtering IGMP Membership Report (a.k.a., join) messages received from hosts.\n\nIf the RP router peering with PIM-SM routers is not configured with a PIM import policy to block registration messages for any undesirable multicast groups and Bogon sources, this is a finding.", "FixText": "RP routers that are peering with customer PIM-SM routers must implement a PIM import policy to block join messages for reserved and any undesirable multicast groups.\n\nset policy-options policy-statement <name> term filter_groups from route-filter <multicast address>/<mask> <match criterion>\nset policy-options policy-statement <name> term filter_groups from route-filter <additional multicast address>/<mask> <match criterion>\nset policy-options policy-statement <name> term filter_groups then reject\n\nset policy-options policy-statement <name> term filter_source from source-address-filter <source address>/<mask> <match criterion>\nset policy-options policy-statement <name> term filter_source from source-address-filter <additional source address>/<mask> <match criterion>\nset policy-options policy-statement <name> term filter_source then reject\n\nset policy-options policy-statement <name> term accept_others then accept\n\nset protocols pim import <policy name>", "CCI": "CCI-001414"}, {"VulnID": "V-253996", "RuleID": "SV-253996r844021_rule", "StigID": "JUEX-RT-000240", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000076-RTR-000001", "RuleTitle": "The Juniper router must be configured to produce audit records containing information to establish where the events occurred.", "Description": "<VulnDiscussion>Without establishing where events occurred, it is impossible to establish, correlate, and investigate the events leading up to an outage or attack.\n\nTo compile an accurate risk assessment and provide forensic analysis, it is essential for security personnel to know where events occurred, such as router components, modules, device identifiers, node names, and functionality.\n\nAssociating information about where the event occurred within the network provides a means of investigating an attack, recognizing resource utilization or capacity thresholds, or identifying an improperly configured router.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Without establishing where events occurred, it is impossible to establish, correlate, and investigate the events leading up to an outage or attack.\n\nTo compile an accurate risk assessment and provide forensic analysis, it is essential for security personnel to know where events occurred, such as router components, modules, device identifiers, node names, and functionality.\n\nAssociating information about where the event occurred within the network provides a means of investigating an attack, recognizing resource utilization or capacity thresholds, or identifying an improperly configured router.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "The router must log all packets that have been dropped via the stateless firewall filter. Verify all discarding firewall filter terms are configured to send events to syslog.\nNote: Stateless firewall filters support \"log\" and \"syslog\" actions. The \"log\" action maintains a temporary list of events and the \"syslog\" action generates events for local storage and/or external syslog servers. Verify at least \"syslog\" is associated with all discarding terms.\n\nFor example:\n[edit firewall]\nfamily inet {\n    filter <filter name> {\n        term 1 {\n            from {\n                <match conditions>;\n            }\n            then {\n                log;\n                syslog; <<< At a minimum, the 'syslog' action must be enabled for all discarding terms.\n                discard;\n            }\n        }\n    }\n}\nfamily inet6 {\n    filter <filter name> {\n        term 1 {\n            from {\n                <match conditions>;\n            }\n            then {\n                log;\n                syslog; <<< At a minimum, the 'syslog' action must be enabled for all discarding terms.\n                discard;\n            }\n        }\n    }\n}\n\nIf the router fails to log all packets that have been dropped via the firewall filter, this is a finding.\n\nVerify logging is enabled for local and/or external syslog. To meet this requirement, either the \"any\" or the \"firewall\" logging facility must be enabled.\nNote: To reduce log sizes and to segregate entries, a separate log file for firewall entries is permissible.\n\n[edit system syslog]\nhost <external syslog address> {\n    any info;\n    log-prefix <hostname>;\n    explicit-priority;\n}\nfile messages {\n    any info;\n}\ntime-format year;\n\nLog output must contain an interface name identifying where the packet was filtered.\nNote: Logged firewall events include the interface and cannot be configured otherwise. There is no provision for changing the log message or for removing the interface name.\n\nIf the logged output does not contain an interface name identifying where the packet was filtered, this is a finding.", "FixText": "Configure the router to record the interface in the log record for packets being dropped.\n\nExample firewall filter with logging enabled:\nset firewall family inet filter <filter name> term 1 from <match conditions>\nset firewall family inet filter <filter name> term 1 then log\nset firewall family inet filter <filter name> term 1 then syslog <<< Must be enabled for all discarding terms\nset firewall family inet filter <filter name> term 1 then discard\nset firewall family inet6 filter <filter name> term 1 from <match conditions>\nset firewall family inet6 filter <filter name> term 1 then log\nset firewall family inet6 filter <filter name> term 1 then syslog <<< Must be enabled for all discarding terms\nset firewall family inet6 filter <filter name> term 1 then discard\n\nExample consolidated logging:\nset syslog host <external syslog address> any info\nset system syslog file messages any info", "CCI": "CCI-000132"}, {"VulnID": "V-253997", "RuleID": "SV-253997r844024_rule", "StigID": "JUEX-RT-000250", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000077-RTR-000001", "RuleTitle": "The Juniper router must be configured to produce audit records containing information to establish the source of the events.", "Description": "<VulnDiscussion>Without establishing the source of the event, it is impossible to establish, correlate, and investigate the events leading up to an outage or attack.\n\nTo compile an accurate risk assessment and provide forensic analysis, security personnel need to know the source of the event.\n\nIn addition to logging where events occur within the network, the audit records must also identify sources of events such as IP addresses, processes, and node or device names.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Without establishing the source of the event, it is impossible to establish, correlate, and investigate the events leading up to an outage or attack.\n\nTo compile an accurate risk assessment and provide forensic analysis, security personnel need to know the source of the event.\n\nIn addition to logging where events occur within the network, the audit records must also identify sources of events such as IP addresses, processes, and node or device names.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "The router must log all packets that have been dropped via the stateless firewall filter. Verify all discarding firewall filter terms are configured to send events to syslog.\nNote: Stateless firewall filters support \"log\" and \"syslog\" actions. The \"log\" action maintains a temporary list of events and the \"syslog\" action generates events for local storage and/or external syslog servers. Verify at least \"syslog\" is associated with all discarding terms.\n\nFor example:\n[edit firewall]\nfamily inet {\n    filter <filter name> {\n        term 1 {\n            from {\n                <match conditions>;\n            }\n            then {\n                log;\n                syslog; <<< At a minimum, the 'syslog' action must be enabled for all discarding terms.\n                discard;\n            }\n        }\n    }\n}\nfamily inet6 {\n    filter <filter name> {\n        term 1 {\n            from {\n                <match conditions>;\n            }\n            then {\n                log;\n                syslog; <<< At a minimum, the 'syslog' action must be enabled for all discarding terms.\n                discard;\n            }\n        }\n    }\n}\n\nIf the router fails to log all packets that have been dropped via the firewall filter, this is a finding.\n\nVerify logging is enabled for local and/or external syslog. To meet this requirement, either the \"any\" or the \"firewall\" logging facility must be enabled.\nNote: To reduce log sizes and to segregate entries, a separate log file for firewall entries is permissible.\n\n[edit system syslog]\nhost <external syslog address> {\n    any info;\n    log-prefix <hostname>;\n    explicit-priority;\n}\nfile messages {\n    any info;\n}\ntime-format year;\n\nLog output must contain the source IP address and port of the filtered packets.\nNote: Logged firewall events include the source, and destination, addresses and cannot be configured otherwise. There is no provision for changing the log message or for removing the source or destination address. \n\nIf the logged output does not contain source IP address and port of the filtered packets, this is a finding.", "FixText": "Configure the router to record the source address in the log record for packets being dropped.\n\nExample firewall filter with logging enabled:\nset firewall family inet filter <filter name> term 1 from <match conditions>\nset firewall family inet filter <filter name> term 1 then log\nset firewall family inet filter <filter name> term 1 then syslog <<< Must be enabled for all discarding terms\nset firewall family inet filter <filter name> term 1 then discard\nset firewall family inet6 filter <filter name> term 1 from <match conditions>\nset firewall family inet6 filter <filter name> term 1 then log\nset firewall family inet6 filter <filter name> term 1 then syslog <<< Must be enabled for all discarding terms\nset firewall family inet6 filter <filter name> term 1 then discard\n\nset syslog host <external syslog address> any info\nset system syslog file messages any info", "CCI": "CCI-000133"}, {"VulnID": "V-253998", "RuleID": "SV-253998r844027_rule", "StigID": "JUEX-RT-000260", "Severity": "low", "Cat": "CAT III", "Classification": "", "GroupTitle": "SRG-NET-000078-RTR-000001", "RuleTitle": "The Juniper router must be configured to log all packets that have been dropped.", "Description": "<VulnDiscussion>Auditing and logging are key components of any security architecture. It is essential for security personnel to know what is being done or attempted to be done, and by whom, to compile an accurate risk assessment. Auditing the actions on network devices provides a means to recreate an attack or identify a configuration mistake on the device.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Auditing and logging are key components of any security architecture. It is essential for security personnel to know what is being done or attempted to be done, and by whom, to compile an accurate risk assessment. Auditing the actions on network devices provides a means to recreate an attack or identify a configuration mistake on the device.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the router interface firewall filters to verify all deny statements are logged. At a minimum, all discarding filter terms must have the \"syslog\" action enabled.\n\nVerify all discarding firewall filter terms are configured with (minimally) the \"syslog\" action:\n[edit firewall]\nfamily inet {\n    filter <filter name> {\n        term <name> {\n            from {\n                <match conditions>;\n            }\n            then {\n                log;\n                syslog; <<< Must be enabled for local and external syslog.\n                discard;\n            }\n        }\n    }\n}\nfamily inet6 {\n    filter <filter name> {\n        term <name> {\n            from {\n                <match conditions>;\n            }\n            then {\n                log;\n                syslog; <<< Must be enabled for local and external syslog.\n                discard;\n            }\n        }\n    }\n}\n\nIf packets being dropped are not logged, this is a finding.", "FixText": "Configure interface firewall filters to log all deny statements.\n\nAll discarding firewall filter terms:\n<filter terms and match conditions>\nset firewall family inet filter <filter name> term <name> then log\nset firewall family inet filter <filter name> term <name> then syslog <<< Minimally must be configured for all discarding filter terms.\nset firewall family inet filter <filter name> term <name> then discard\n\n<filter terms and match conditions>\nset firewall family inet6 filter <filter name> term <name> then log\nset firewall family inet6 filter <filter name> term <name> then syslog <<< Minimally must be configured for all discarding filter terms.\nset firewall family inet6 filter <filter name> term <name> then discard", "CCI": "CCI-000134"}, {"VulnID": "V-253999", "RuleID": "SV-253999r844030_rule", "StigID": "JUEX-RT-000270", "Severity": "low", "Cat": "CAT III", "Classification": "", "GroupTitle": "SRG-NET-000131-RTR-000035", "RuleTitle": "The Juniper router must be configured to have all nonessential capabilities disabled.", "Description": "<VulnDiscussion>A compromised router introduces risk to the entire network infrastructure, as well as data resources that are accessible via the network. The perimeter defense has no oversight or control of attacks by malicious users within the network. Preventing network breaches from within is dependent on implementing a comprehensive defense-in-depth strategy, including securing each device connected to the network. This is accomplished by following and implementing all security guidance applicable for each node type. A fundamental step in securing each router is to enable only the capabilities required for operation.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "A compromised router introduces risk to the entire network infrastructure, as well as data resources that are accessible via the network. The perimeter defense has no oversight or control of attacks by malicious users within the network. Preventing network breaches from within is dependent on implementing a comprehensive defense-in-depth strategy, including securing each device connected to the network. This is accomplished by following and implementing all security guidance applicable for each node type. A fundamental step in securing each router is to enable only the capabilities required for operation.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the router configuration to determine if services or functions not required for operation, or not related to router functionality (e.g., DNS, email client or server, FTP server, or web server) are enabled.\nBy default, unnecessary services like finger, telnet, TFTP and FTP are not enabled and will not be listed at [edit system services].\n\nFor example, the following services should NOT be enabled as shown:\n[edit system services]\nfinger;\nftp;\nrlogin;\ntelnet;\ntftp-server;\nweb-management;\nNote: If the services listed above are marked \"inactive\", they are not enabled. \n\nIf unnecessary services and functions are enabled on the router, this is a finding.", "FixText": "Remove unneeded services and functions from the router. For example:\n\ndelete system services finger\ndelete system services ftp\ndelete system services rlogin\ndelete system services telnet\ndelete system services tftp-server\ndelete system services web-management\n\nFor processes that support disable:\nset system processes web-management disable\n\nRemoval is recommended because the service or function may be inadvertently enabled otherwise.\n\nHowever, if removal is not possible, disable the service or function.", "CCI": "CCI-000381"}, {"VulnID": "V-254000", "RuleID": "SV-254000r844033_rule", "StigID": "JUEX-RT-000280", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000131-RTR-000083", "RuleTitle": "The Juniper router must not be configured to have any feature enabled that calls home to the vendor.", "Description": "<VulnDiscussion>Call home services will routinely send data such as configuration and diagnostic information to the vendor for routine or emergency analysis and troubleshooting. There is a risk that transmission of sensitive data sent to unauthorized persons could result in data loss or downtime due to an attack.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Call home services will routinely send data such as configuration and diagnostic information to the vendor for routine or emergency analysis and troubleshooting. There is a risk that transmission of sensitive data sent to unauthorized persons could result in data loss or downtime due to an attack.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Verify the call home service is disabled on the device.\n\nVerify [edit system] does NOT contain a phone-home hierarchy as shown:\n\n[edit system]\nhost-name <hostname>;\n:\n<other system configuration>\n:\nphone-home {\n    server https://<applicable URL>;\n    rfc-compliant;\n}\n\nIf a call home service is enabled, this is a finding.", "FixText": "Configure the network device to disable the call home service or feature.\n\nDelete the phone-home hierarchy under [edit system].\n\ndelete system phone-home\nNote: Because the command is hidden, Junos will not autocomplete and \"phone-home\" must be explicitly, and correctly, spelled out.", "CCI": "CCI-002403"}, {"VulnID": "V-254001", "RuleID": "SV-254001r844036_rule", "StigID": "JUEX-RT-000290", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000168-RTR-000077", "RuleTitle": "The Juniper router must be configured to use encryption for routing protocol authentication.", "Description": "<VulnDiscussion>A rogue router could send a fictitious routing update to convince a site's perimeter router to send traffic to an incorrect or even a rogue destination. This diverted traffic could be analyzed to learn confidential information about the site's network or used to disrupt the network's ability to communicate with other networks. This is known as a \"traffic attraction attack\" and is prevented by configuring neighbor router authentication for routing updates. However, using clear-text authentication provides little benefit since an attacker can intercept traffic and view the authentication key. This would allow the attacker to use the authentication key in an attack.\n\nThis requirement applies to all IPv4 and IPv6 protocols that are used to exchange routing or packet forwarding information; this includes all Interior Gateway Protocols (such as OSPF, EIGRP, and IS-IS) and Exterior Gateway Protocols (such as BGP), MPLS-related protocols (such as LDP), and multicast-related protocols.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "A rogue router could send a fictitious routing update to convince a site's perimeter router to send traffic to an incorrect or even a rogue destination. This diverted traffic could be analyzed to learn confidential information about the site's network or used to disrupt the network's ability to communicate with other networks. This is known as a \"traffic attraction attack\" and is prevented by configuring neighbor router authentication for routing updates. However, using clear-text authentication provides little benefit since an attacker can intercept traffic and view the authentication key. This would allow the attacker to use the authentication key in an attack.\n\nThis requirement applies to all IPv4 and IPv6 protocols that are used to exchange routing or packet forwarding information; this includes all Interior Gateway Protocols (such as OSPF, EIGRP, and IS-IS) and Exterior Gateway Protocols (such as BGP), MPLS-related protocols (such as LDP), and multicast-related protocols.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the router configuration.\n\nFor every protocol that affects the routing or forwarding tables (where information is exchanged between neighbors), verify that neighbor router authentication is encrypting the authentication key.\n\n[edit protocols]\nospf {\n    area <area number> {\n        interface <interface name>.<logical unit> {\n            authentication {\n                md5 1 key \"$8$aes256-gcm$hmac-sha2-256$100$hvt9Fpk6EEU$I2FKFJNrdKHpp1xesMB0aA$l9BsHxOYO4+B8f7erRj8Hw$A9PYzx53Ius\"; ## SECRET-DATA\n            }\n        }\n        interface <interface name>.<logical unit> {\n           ipsec-sa <SA name>;\n        }\n    }\n}\nospf3 {\n    area <area number> {\n        interface <interface name>.<logical unit> {\n            ipsec-sa <SA name>;\n        }\n    }\n}\n\nNote: OSPFv3 only supports IPsec SA authentication; OSPFv2 supports both IPsec SA and MD5 authentication. MD5 authentication is only included to support devices that do not support IPsec SA authentication.\n\nVerify the OSPFv3 SA.\n[edit security ipsec]\nsecurity-association <SA name> {\n    mode transport;\n    manual {\n        direction bidirectional {\n            protocol (ah | esp | bundle);\n            spi (256..16639); <<< The SPI is an integer value that must match the peer\n            encryption {\n                algorithm (hmac-sha1-96 | hmac-sha-256-128);\n                key hexadecimal \"$8$aes256-gcm$hmac-sha2-256$100$QAP67/2oV/s$nz+2A3zRz40fwxMJdbbA0Q$R5A/koX36OvUWBB543QwAA$tQrR3fkCL2oQ3V1O2Tw2lYl7THNuqBQ6hpyi8naLlXMaKQM0SdJYefQU41rB3zpjisVIWBwS+S8+O146luRf3Q\"; ## SECRET-DATA\n            }\n        }\n    }\n}\nNote: OSPFv3 SA uses manual transport mode encapsulating security payload (ESP) associations.\n\nIf authentication is not encrypting the authentication key, this is a finding.", "FixText": "Configure routing protocol authentication to encrypt the authentication key.\n\nset protocols ospf area <area number> interface <interface name>.<logical unit> authentication md5 <key ID> key \"<PSK>\" \n-or-\nset protocols ospf area <area number> interface <interface name>.<logical unit> ipsec-sa <SA name>\n\nset protocols ospf3 area <area number> interface <interface name>.<logical unit> ipsec-sa <SA name>\n\nset security ipsec security-association <SA name> mode transport\nset security ipsec security-association <SA name> manual direction bidirectional protocol (ah | esp | bundle)\nset security ipsec security-association <SA name> manual direction bidirectional spi <manually configured SPI (256..16639)>\nset security ipsec security-association <SA name> manual direction bidirectional encryption algorithm (hmac-sha1-96 | hmac-sha-256-128)\nset security ipsec security-association <SA name> manual direction bidirectional authentication key hexadecimal \"<appropriate PSK>\"\nNote: Encryption keys can also be entered as ASCII with the keyword 'ascii-text' replacing 'hexadecimal'. Regardless of key type, the PSK is hashed in the configuration.", "CCI": "CCI-000803"}, {"VulnID": "V-254002", "RuleID": "SV-254002r844039_rule", "StigID": "JUEX-RT-000300", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000168-RTR-000078", "RuleTitle": "The Juniper router must be configured to authenticate all routing protocol messages using NIST-validated FIPS 198-1 message authentication code algorithm.", "Description": "<VulnDiscussion>A rogue router could send a fictitious routing update to convince a site's perimeter router to send traffic to an incorrect or even a rogue destination. This diverted traffic could be analyzed to learn confidential information about the site's network or used to disrupt the network's ability to communicate with other networks. This is known as a \"traffic attraction attack\" and is prevented by configuring neighbor router authentication for routing updates. However, using clear-text authentication provides little benefit since an attacker can intercept traffic and view the authentication key. This would allow the attacker to use the authentication key in an attack.\n\nSince MD5 is vulnerable to \"birthday\" attacks and may be compromised, routing protocol authentication must use FIPS 198-1 validated algorithms and modules to encrypt the authentication key. This requirement applies to all IPv4 and IPv6 protocols that are used to exchange routing or packet forwarding information; this includes all Interior Gateway Protocols (such as OSPF, EIGRP, and IS-IS) and Exterior Gateway Protocols (such as BGP), MPLS-related protocols (such as LDP), and multicast-related protocols.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "A rogue router could send a fictitious routing update to convince a site's perimeter router to send traffic to an incorrect or even a rogue destination. This diverted traffic could be analyzed to learn confidential information about the site's network or used to disrupt the network's ability to communicate with other networks. This is known as a \"traffic attraction attack\" and is prevented by configuring neighbor router authentication for routing updates. However, using clear-text authentication provides little benefit since an attacker can intercept traffic and view the authentication key. This would allow the attacker to use the authentication key in an attack.\n\nSince MD5 is vulnerable to \"birthday\" attacks and may be compromised, routing protocol authentication must use FIPS 198-1 validated algorithms and modules to encrypt the authentication key. This requirement applies to all IPv4 and IPv6 protocols that are used to exchange routing or packet forwarding information; this includes all Interior Gateway Protocols (such as OSPF, EIGRP, and IS-IS) and Exterior Gateway Protocols (such as BGP), MPLS-related protocols (such as LDP), and multicast-related protocols.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the router configuration to verify it is using a NIST-validated FIPS 198-1 message authentication code algorithm to authenticate routing protocol messages.\n\nOSPF, both v2 and v3, and BGP support using a transport mode IP Security (IPsec) Security Association (SA) for authentication in addition to the protocol-standard authentication methods.\n\nVerify the IPsec SA is using an appropriate hashed message authentication code (HMAC).\n\n[edit security ipsec]\nsecurity-association <SA name> {\n    mode transport;\n    manual {\n        direction bidirectional {\n            protocol (ah | esp | bundle);\n            spi (256..16639); <<< The SPI is an integer value that must match the peer\n            authentication {\n                algorithm (hmac-sha1-96 | hmac-sha-256-128);\n                key hexadecimal \"hashed value\"; ## SECRET-DATA\n            }\n        }\n    }\n}\n\nVerify EGP (e.g., BGP) and IGP (e.g., OSPF) are configured to use an IPsec SA for authentication.\n\n[edit protocols]\nbgp {\n    group <BGP group name> {\n        <...snipped configuration...>\n        neighbor <IPv4 neighbor address> {\n            <...snipped protocol family configuration...>\n            ipsec-sa <SA name>;\n        }\n        neighbor <IPv6 neighbor address> {\n            <...snipped protocol family configuration...>\n            ipsec-sa <SA name>;\n        }\n    }\n}\nospf {\n    area <OSPFv2 area number> {\n        interface <OSPFv2 interface name>.<logical unit number> {\n            <...snipped configuration...>\n            ipsec-sa <SA name>;\n        }\n}\nospf3 {\n    area <OSPFv3 area number> {\n        interface <OSPFv3 interface name>.<logical unit number> {\n            <...snipped configuration...>\n            ipsec-sa <SA name>;\n        }\n}\n\nIf a NIST-validated FIPS 198-1 message authentication code algorithm is not being used to authenticate routing protocol messages, this is a finding.", "FixText": "Configure routing protocol authentication to use a NIST-validated FIPS 198-1 message authentication code algorithm.\n\nConfigure the IPsec SA:\nset security ipsec security-association <SA name> mode transport\nset security ipsec security-association <SA name> manual direction bidirectional protocol (ah | esp | bundle)\nset security ipsec security-association <SA name> manual direction bidirectional spi <manually configured SPI (256..16639)>\nset security ipsec security-association <SA name> manual direction bidirectional authentication algorithm (hmac-sha1-96 | hmac-sha-256-128)\nset security ipsec security-association <SA name> manual direction bidirectional authentication key hexadecimal \"<appropriate PSK>\"\nNote: Encryption keys can also be entered as ASCII with the keyword 'ascii-text' replacing 'hexadecimal'. Regardless of key type, the PSK is hashed in the configuration.\n\nConfigure EGP / IGP to use IPsec SA for authentication:\nset protocols bgp group <BGP group name> neighbor <IPv4 neighbor address> ipsec-sa <SA name>\nset protocols bgp group <BGP group name> neighbor <IPv6 neighbor address> ipsec-sa <SA name>\n\nset protocols ospf area <OSPFv2 area number> interface <interface name>.<logical unit> ipsec-sa <SA name>\n\nset protocols ospf3 area <OSPFv3 area number> interface <interface name>.<logical unit> ipsec-sa <SA name>", "CCI": "CCI-000803"}, {"VulnID": "V-254003", "RuleID": "SV-254003r844042_rule", "StigID": "JUEX-RT-000310", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000192-RTR-000002", "RuleTitle": "The Juniper PE router must be configured to limit the number of MAC addresses it can learn for each Virtual Private LAN Services (VPLS) bridge domain.", "Description": "<VulnDiscussion>VPLS defines an architecture that delivers Ethernet multipoint services over an MPLS network. Customer layer 2 frames are forwarded across the MPLS core via pseudowires using IEEE 802.1q Ethernet bridging principles. A pseudowire is a virtual bidirectional connection between two attachment circuits (virtual connections between PE and CE routers). A pseudowire contains two unidirectional label-switched paths (LSP). Each MAC forwarding table instance is interconnected using domain-specific LSPs, thereby maintaining privacy and logical separation between each VPLS domain.\n\nWhen a frame arrives on a bridge port (pseudowire or attachment circuit) and the source MAC address is unknown to the receiving PE router, the source MAC address is associated with the pseudowire or attachment circuit and the forwarding table is updated accordingly. Frames are forwarded to the appropriate pseudowire or attachment circuit according to the forwarding table entry for the destination MAC address. Ethernet frames sent to broadcast and unknown destination addresses must be flooded out to all interfaces for the bridge domain; hence, a PE router must replicate packets across both attachment circuits and pseudowires.\n\nA malicious attacker residing in a customer network could launch a source MAC address spoofing attack by flooding packets to a valid unicast destination, each with a different MAC source address. The PE router receiving this traffic would try to learn every new MAC address and would quickly run out of space for the VFI forwarding table. Older, valid MAC addresses would be removed from the table, and traffic sent to them would have to be flooded until the storm threshold limit is reached. Hence, it is essential that a limit is established to control the number of MAC addresses that will be learned and recorded into the forwarding table for each bridge domain.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "VPLS defines an architecture that delivers Ethernet multipoint services over an MPLS network. Customer layer 2 frames are forwarded across the MPLS core via pseudowires using IEEE 802.1q Ethernet bridging principles. A pseudowire is a virtual bidirectional connection between two attachment circuits (virtual connections between PE and CE routers). A pseudowire contains two unidirectional label-switched paths (LSP). Each MAC forwarding table instance is interconnected using domain-specific LSPs, thereby maintaining privacy and logical separation between each VPLS domain.\n\nWhen a frame arrives on a bridge port (pseudowire or attachment circuit) and the source MAC address is unknown to the receiving PE router, the source MAC address is associated with the pseudowire or attachment circuit and the forwarding table is updated accordingly. Frames are forwarded to the appropriate pseudowire or attachment circuit according to the forwarding table entry for the destination MAC address. Ethernet frames sent to broadcast and unknown destination addresses must be flooded out to all interfaces for the bridge domain; hence, a PE router must replicate packets across both attachment circuits and pseudowires.\n\nA malicious attacker residing in a customer network could launch a source MAC address spoofing attack by flooding packets to a valid unicast destination, each with a different MAC source address. The PE router receiving this traffic would try to learn every new MAC address and would quickly run out of space for the VFI forwarding table. Older, valid MAC addresses would be removed from the table, and traffic sent to them would have to be flooded until the storm threshold limit is reached. Hence, it is essential that a limit is established to control the number of MAC addresses that will be learned and recorded into the forwarding table for each bridge domain.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the PE router configuration to determine if a MAC address limit has been set for each bridge domain.\n\nVerify the MAC address limit is globally defined for the VPLS protocol or at each interface assigned to the routing instance.\n\n[edit routing-instance]\n<instance name> {\n    protocols {\n        vpls {\n            interface-mac-limit {\n                <value>;\n            }\n            interface <interface name>.<logical unit> {\n                interface-mac-limit {\n                    <value>;\n                }\n            }\n        }\n    }\n}\n\nNote: Only EX9200-series devices currently support VPLS.\n\nIf a limit has not been configured, this is a finding.", "FixText": "Configure a MAC address learning limit for each VPLS bridge domain.\n\nset routing-instance <name> protocols vpls interface-mac-limit <value>\nset routing-instance <name> protocols vpls interface <name>.<logical unit> interface-mac-limit <value>", "CCI": "CCI-001094"}, {"VulnID": "V-254004", "RuleID": "SV-254004r844045_rule", "StigID": "JUEX-RT-000320", "Severity": "low", "Cat": "CAT III", "Classification": "", "GroupTitle": "SRG-NET-000193-RTR-000001", "RuleTitle": "The Juniper MPLS router with RSVP-TE enabled must be configured to enable refresh reduction features.", "Description": "<VulnDiscussion>RSVP-TE can be used to perform constraint-based routing when building LSP tunnels within the network core that will support QoS and traffic engineering requirements. RSVP-TE is also used to enable MPLS Fast Reroute, a network restoration mechanism that will reroute traffic onto a backup LSP in case of a node or link failure along the primary path. When there is a disruption in the MPLS core, such as a link flap or router reboot, the result is a significant amount of RSVP signaling, such as \"PathErr\" and \"ResvErr\" messages that need to be sent for every LSP using that link.\n\nWhen RSVP messages are sent out, they are sent either hop by hop or with the router alert bit set in the IP header. This means that every router along the path must examine the packet to determine if additional processing is required for these RSVP messages. If there is enough signaling traffic in the network, it is possible for an interface to receive more packets for its input queue than it can hold, resulting in dropped RSVP messages and hence slower RSVP convergence. Increasing the size of the interface input queue can help prevent dropping packets; however, there is still the risk of having a burst of signaling traffic that can fill the queue. Solutions to mitigate this risk are RSVP message pacing or refresh reduction to control the rate at which RSVP messages are sent. RSVP refresh reduction includes the following features: RSVP message bundling, RSVP Message ID to reduce message processing overhead, Reliable delivery of RSVP messages using Message ID,  and summary refresh to reduce the amount of information transmitted every refresh interval.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "RSVP-TE can be used to perform constraint-based routing when building LSP tunnels within the network core that will support QoS and traffic engineering requirements. RSVP-TE is also used to enable MPLS Fast Reroute, a network restoration mechanism that will reroute traffic onto a backup LSP in case of a node or link failure along the primary path. When there is a disruption in the MPLS core, such as a link flap or router reboot, the result is a significant amount of RSVP signaling, such as \"PathErr\" and \"ResvErr\" messages that need to be sent for every LSP using that link.\n\nWhen RSVP messages are sent out, they are sent either hop by hop or with the router alert bit set in the IP header. This means that every router along the path must examine the packet to determine if additional processing is required for these RSVP messages. If there is enough signaling traffic in the network, it is possible for an interface to receive more packets for its input queue than it can hold, resulting in dropped RSVP messages and hence slower RSVP convergence. Increasing the size of the interface input queue can help prevent dropping packets; however, there is still the risk of having a burst of signaling traffic that can fill the queue. Solutions to mitigate this risk are RSVP message pacing or refresh reduction to control the rate at which RSVP messages are sent. RSVP refresh reduction includes the following features: RSVP message bundling, RSVP Message ID to reduce message processing overhead, Reliable delivery of RSVP messages using Message ID,  and summary refresh to reduce the amount of information transmitted every refresh interval.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the router configuration to verify that the router has been configured to enable refresh reduction features. Junos OS controls RSVP refresh reduction features using two commands:\n\naggregate: RSVP message bundling and summary refresh.\nreliable: RSVP message ID, reliable message delivery, and summary refresh.\n\nStarting in Junos 15.2, refresh reduction is enabled by default and the \"aggregate\" command is deprecated. Configuring the \"aggregate\" command generates a warning message in the configuration file (## Warning: \"aggregate\" is deprecated). On Junos earlier than 15.2, verify the \"aggregate\" command is enabled. On Junos 15.2 and later, no command is required.\n\nJunos earlier than 15.2:\n[edit protocols]\nrsvp {\n    interface <interface name>.<logical unit> {\n        aggregate;\n        reliable; << If RSVP message ID and reliable message delivery are required.\n    }\n}\n\nJunos 15.2 but pre-16.1R1:\n[edit protocols]\nrsvp {\n    interface <interface name>.<logical unit> {\n        reliable; << If RSVP message ID and reliable message delivery are required.\n    }\n}\n\nStarting in Junos 16.1R1, all refresh reduction features are enabled by default. Verify the 'no-reliable' command is configured only if RSVP message ID and reliable message delivery are not required. To enable all refresh reduction features, no commands are necessary.\n\nJunos 16.1R1 and later:\n[edit protocols]\nrsvp {\n    interface <interface name>.<logical unit> {\n        <other configuration>\n    }\n}\n\nIf the router with RSVP-TE enabled does not have message pacing configured based on the link speed and input queue size of adjacent core routers, this is a finding.", "FixText": "Configure RSVP-TE enabled routers with refresh reduction features.\n\nJunos earlier than 15.2:\nset protocols rsvp interface <interface name>.<logical unit> aggregate\nset protocols rsvp interface <interface name>.<logical unit> reliable\n\nJunos 15.2 but pre 16.1R1:\nset protocols rsvp interface <interface name>.<logical unit> reliable\n\nJunos 16.1R1 and later:\nset protocols rsvp interface <interface name>.<logical unit> <other configuration>", "CCI": "CCI-001095"}, {"VulnID": "V-254005", "RuleID": "SV-254005r844048_rule", "StigID": "JUEX-RT-000330", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000193-RTR-000002", "RuleTitle": "The Juniper PE router providing Virtual Private LAN Services (VPLS) must be configured to have traffic storm control thresholds on CE-facing interfaces.", "Description": "<VulnDiscussion>A traffic storm occurs when packets flood a VPLS bridge, creating excessive traffic and degrading network performance. Traffic storm control prevents VPLS bridge disruption by suppressing traffic when the number of packets reaches configured threshold levels. Traffic storm control monitors incoming traffic levels on a port and drops traffic when the number of packets reaches the configured threshold level during any one-second interval.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "A traffic storm occurs when packets flood a VPLS bridge, creating excessive traffic and degrading network performance. Traffic storm control prevents VPLS bridge disruption by suppressing traffic when the number of packets reaches configured threshold levels. Traffic storm control monitors incoming traffic levels on a port and drops traffic when the number of packets reaches the configured threshold level during any one-second interval.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the router configuration to verify that storm control is enabled on CE-facing interfaces deploying VPLS.\n\nVerify that a stateless firewall filter has been applied to each VPLS routing instances.\n\n[edit]\nrouting-instances {\n    <name> {\n        forwarding-options {\n            family vpls {\n                flood {\n                    input <filter name>;\n                }\n            }\n        }\n    }\n}\n\nVerify the filter defines traffic types associated with storm control (i.e., broadcast, multicast, and unknown unicast storms).\n\nfirewall {\n    family vpls {\n        filter <filter name> {\n            term <term name> {\n                from {\n                    traffic-type broadcast;\n                }\n                then {\n                    policer <policer name>;\n                    accept;\n                }\n            }\n            term <term name> {\n                from {\n                    traffic-type multicast;\n                }\n                then {\n                    policer <policer name>;\n                    accept;\n                }\n            }\n            term <term name> {\n                from {\n                    traffic-type unknown-unicast;\n                }\n                then {\n                    policer <policer name>;\n                    accept;\n                }\n            }\n        }\n    }\n}\n\nVerify that the policer rate limits in accordance with local requirements.\n\nfirewall {\n    policer <policer name> {\n        if-exceeding {\n            bandwidth-limit <value>;\n            burst-size-limit <value>;\n        }\n        then discard;\n    }\n}\n\nNote: Only EX9200-series devices currently support VPLS.\n\nIf storm control is not enabled for broadcast traffic, this is a finding.", "FixText": "Configure storm control for each CE-facing interface deploying VPLS bridge domains. Base the suppression threshold on expected traffic rates plus some additional capacity. \n\nConfigure a policer to rate limit traffic providing storm control in accordance with organizational requirements.\n\nset firewall policer <policer name> if-exceeding bandwidth-limit <value> burst-size-limit <value>\nset firewall policer <policer name> then discard\n\nConfigure the filter providing storm control to specify traffic types and rate limit broadcast, multicast, and unknown unicast storms.\n\nset firewall family vpls filter <filter name> term <term name> from traffic-type broadcast\nset firewall family vpls filter <filter name> term <term name> then policer <policer name> accept\nset firewall family vpls filter <filter name> term <term name> from traffic-type multicast\nset firewall family vpls filter <filter name> term <term name> then policer <policer name> accept\nset firewall family vpls filter <filter name> term <term name> from traffic-type unknown-unicast\nset firewall family vpls filter <filter name> term <term name> then policer <policer name> accept\n\nApply the storm control filter to all CE-facing instances deploying VPLS bridge domains.\n\nset routing-instances <instance name> forwarding-options family vpls flood input <filter name>", "CCI": "CCI-001095"}, {"VulnID": "V-254006", "RuleID": "SV-254006r844051_rule", "StigID": "JUEX-RT-000340", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000193-RTR-000112", "RuleTitle": "The Juniper PE router must be configured to enforce a Quality-of-Service (QoS) policy to limit the effects of packet flooding denial-of-service (DoS) attacks.", "Description": "<VulnDiscussion>DoS is a condition when a resource is not available for legitimate users. Packet flooding distributed denial-of-service (DDoS) attacks are referred to as volumetric attacks and have the objective of overloading a network or circuit to deny or seriously degrade performance, which denies access to the services that normally traverse the network or circuit. Volumetric attacks have become relatively easy to launch using readily available tools such as Low Orbit Ion Cannon or botnets. \n\nMeasures to mitigate the effects of a successful volumetric attack must be taken to ensure that sufficient capacity is available for mission-critical traffic. Managing capacity may include, for example, establishing selected network usage priorities or quotas and enforcing them using rate limiting, QoS, or other resource reservation control methods. These measures may also mitigate the effects of sudden decreases in network capacity that are the result of accidental or intentional physical damage to telecommunications facilities (such as cable cuts or weather-related outages).</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "DoS is a condition when a resource is not available for legitimate users. Packet flooding distributed denial-of-service (DDoS) attacks are referred to as volumetric attacks and have the objective of overloading a network or circuit to deny or seriously degrade performance, which denies access to the services that normally traverse the network or circuit. Volumetric attacks have become relatively easy to launch using readily available tools such as Low Orbit Ion Cannon or botnets. \n\nMeasures to mitigate the effects of a successful volumetric attack must be taken to ensure that sufficient capacity is available for mission-critical traffic. Managing capacity may include, for example, establishing selected network usage priorities or quotas and enforcing them using rate limiting, QoS, or other resource reservation control methods. These measures may also mitigate the effects of sudden decreases in network capacity that are the result of accidental or intentional physical damage to telecommunications facilities (such as cable cuts or weather-related outages).", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the router configuration and interview the System Administrator to verify that a mechanism for traffic prioritization and bandwidth reservation exists. For example:\n\n[edit class-of-service]\nclassifiers {\n    dscp <classifier name> {\n        forwarding-class NC {\n            loss-priority low code-points 110000;\n        }\n        forwarding-class EF {\n            loss-priority high code-points [ 101101 101111 100101 100111 110011 ];\n            loss-priority low code-points [ 101000 100000 101001 101011 100001 100011 110001 ];\n        }\n        forwarding-class AF41 {\n            loss-priority high code-points [ 100010 100100 100110 ];\n            loss-priority low code-points [ 011000 101110 011100 011110 ];\n        }\n        forwarding-class AF31 {\n            loss-priority high code-points [ 011101 011111 011010 010101 010111 010010 001101 001010 010000 ];\n            loss-priority low code-points [ 001001 001011 010001 010011 011001 011011 ];\n        }\n        forwarding-class BE {\n            loss-priority high code-points 000000;\n        }\n        forwarding-class Default {\n            loss-priority high code-points 001000;\n        }\n        forwarding-class dscp15 {\n            loss-priority high code-points 001111;\n        }\n    }\n}\n\nNote: Some platforms apply DSCP values to both IPv4 and IPv6 traffic with a single classifier definition (as shown). Those platforms that support separating classifiers will require a \"dscp-ipv6\" stanza.\nhost-outbound-traffic {\n    forwarding-class NC;\n    dscp-code-point 110000;\n}\nshared-buffer {\n    ingress {\n        percent 50;\n        buffer-partition lossless {\n            percent 5;\n        }\n        buffer-partition lossless-headroom {\n            percent 0;\n        }\n        buffer-partition lossy {\n            percent 95;\n        }\n    }\n    egress {\n        percent 100;\n        buffer-partition lossless {\n            percent 50;\n        }\n        buffer-partition lossy {\n            percent 45;\n        }\n        buffer-partition multicast {\n            percent 5;\n        }\n    }\n}\nNote: Some platforms only support shared-buffer percent, and cannot separate between ingress and egress. Not all devices require a shared-buffer stanza.\nforwarding-classes {\n    class NC queue-num 7;\n    class EF queue-num 6;\n    class AF41 queue-num 5;\n    class AF31 queue-num 4;\n    class BE queue-num 0;\n    class Default queue-num 1;\n    class dscp15 queue-num 6;\n}\ntraffic-control-profiles {\n    <control profile name 1> {\n        scheduler-map <scheduler map name 1>;        \n        shaping-rate percent 100;\n    }\n    <control profile name 2> {\n        scheduler-map <scheduler map name 2>;\n        guaranteed-rate percent 20;\n    }\n}\nforwarding-class-sets {\n    <set name 1> {\n        class NC;\n        class EF;\n        class AF41;\n        class AF31;\n        class Default;\n        class dscp15;\n    }\n    <set name 2> {\n        class BE;\n    }\n}\ninterfaces {\n    <interface name> {\n        forwarding-class-set {\n            <set name 1> {\n                output-traffic-control-profile <control profile name 1>;\n            }\n            <set name 2> {\n                output-traffic-control-profile <control profile name 2>;\n            }\n        }\n        classifiers {\n            dscp <classifier name>;\n        }\n        rewrite-rules {\n            dscp <rewrite rule name>;\n        }\n    }\n}\nrewrite-rules {\n    dscp <rewrite rule name> {\n        forwarding-class dscp15 {\n            loss-priority high code-point 101101;\n        }\n        forwarding-class EF {\n            loss-priority low code-point 110001;\n        }\n        forwarding-class AF41 {\n            loss-priority high code-point 100110;\n        }\n        forwarding-class NC {\n            loss-priority low code-point 110000;\n        }\n        forwarding-class AF31 {\n            loss-priority high code-point 010000;\n        }\n        forwarding-class Default {\n            loss-priority high code-point 001000;\n        }\n    }\n}\nNote: Some platforms require rewriting all DSCP values if rewriting one (smaller platforms). Most support only rewriting a single DSCP value, which would eliminate all but one rewrite rule.\nscheduler-maps {\n    <scheduler map name 1> {\n        forwarding-class NC scheduler NC;\n        forwarding-class EF scheduler EF;\n        forwarding-class AF41 scheduler AF41;\n        forwarding-class AF31 scheduler AF31;\n        forwarding-class Default scheduler Default;\n    }\n    <scheduler map name 2> {\n        forwarding-class BE scheduler BE;\n    }\n}\nschedulers {\n    NC {\n        buffer-size percent 5;\n        priority strict-high;\n    }\n    EF {\n        shaping-rate percent 20;\n        buffer-size percent 19;\n        priority strict-high;\n    }\n    AF41 {\n        shaping-rate percent 15;\n        buffer-size percent 14;\n        priority strict-high;\n    }\n    AF31 {\n        shaping-rate percent 31;\n        buffer-size percent 29;\n        priority strict-high;\n    }\n    BE {\n        transmit-rate percent 20;\n        buffer-size percent 20;\n        priority low;\n    }\n    Default {\n        shaping-rate percent 10;\n        buffer-size percent 9;\n        priority strict-high;\n    }\n}\n\nThis arrangement must ensure that sufficient capacity is available for mission-critical traffic and enforce the traffic priorities specified by the Combatant Commands/Services/Agencies.\n\nIf no such scheme exists or it is not configured, this is a finding.", "FixText": "Implement a mechanism for traffic prioritization and bandwidth reservation. This mechanism must enforce the traffic priorities specified by the Combatant Commands/Services/Agencies.\n\nset class-of-service classifiers dscp <classifier name> forwarding-class NC loss-priority low code-points 110000\nset class-of-service classifiers dscp <classifier name> forwarding-class EF loss-priority high code-points 101101\nset class-of-service classifiers dscp <classifier name> forwarding-class EF loss-priority high code-points 101111\nset class-of-service classifiers dscp <classifier name> forwarding-class EF loss-priority high code-points 100101\nset class-of-service classifiers dscp <classifier name> forwarding-class EF loss-priority high code-points 100111\nset class-of-service classifiers dscp <classifier name> forwarding-class EF loss-priority high code-points 110011\nset class-of-service classifiers dscp <classifier name> forwarding-class EF loss-priority low code-points 101000\nset class-of-service classifiers dscp <classifier name> forwarding-class EF loss-priority low code-points 100000\nset class-of-service classifiers dscp <classifier name> forwarding-class EF loss-priority low code-points 101001\nset class-of-service classifiers dscp <classifier name> forwarding-class EF loss-priority low code-points 101011\nset class-of-service classifiers dscp <classifier name> forwarding-class EF loss-priority low code-points 100001\nset class-of-service classifiers dscp <classifier name> forwarding-class EF loss-priority low code-points 100011\nset class-of-service classifiers dscp <classifier name> forwarding-class EF loss-priority low code-points 110001\nset class-of-service classifiers dscp <classifier name> forwarding-class AF41 loss-priority high code-points 100010\nset class-of-service classifiers dscp <classifier name> forwarding-class AF41 loss-priority high code-points 100100\nset class-of-service classifiers dscp <classifier name> forwarding-class AF41 loss-priority high code-points 100110\nset class-of-service classifiers dscp <classifier name> forwarding-class AF41 loss-priority low code-points 011000\nset class-of-service classifiers dscp <classifier name> forwarding-class AF41 loss-priority low code-points 101110\nset class-of-service classifiers dscp <classifier name> forwarding-class AF41 loss-priority low code-points 011100\nset class-of-service classifiers dscp <classifier name> forwarding-class AF41 loss-priority low code-points 011110\nset class-of-service classifiers dscp <classifier name> forwarding-class AF31 loss-priority high code-points 011101\nset class-of-service classifiers dscp <classifier name> forwarding-class AF31 loss-priority high code-points 011111\nset class-of-service classifiers dscp <classifier name> forwarding-class AF31 loss-priority high code-points 011010\nset class-of-service classifiers dscp <classifier name> forwarding-class AF31 loss-priority high code-points 010101\nset class-of-service classifiers dscp <classifier name> forwarding-class AF31 loss-priority high code-points 010111\nset class-of-service classifiers dscp <classifier name> forwarding-class AF31 loss-priority high code-points 010010\nset class-of-service classifiers dscp <classifier name> forwarding-class AF31 loss-priority high code-points 001101\nset class-of-service classifiers dscp <classifier name> forwarding-class AF31 loss-priority high code-points 001010\nset class-of-service classifiers dscp <classifier name> forwarding-class AF31 loss-priority high code-points 010000\nset class-of-service classifiers dscp <classifier name> forwarding-class AF31 loss-priority low code-points 001001\nset class-of-service classifiers dscp <classifier name> forwarding-class AF31 loss-priority low code-points 001011\nset class-of-service classifiers dscp <classifier name> forwarding-class AF31 loss-priority low code-points 010001\nset class-of-service classifiers dscp <classifier name> forwarding-class AF31 loss-priority low code-points 010011\nset class-of-service classifiers dscp <classifier name> forwarding-class AF31 loss-priority low code-points 011001\nset class-of-service classifiers dscp <classifier name> forwarding-class AF31 loss-priority low code-points 011011\nset class-of-service classifiers dscp <classifier name> forwarding-class BE loss-priority high code-points 000000\nset class-of-service classifiers dscp <classifier name> forwarding-class Default loss-priority high code-points 001000\nset class-of-service classifiers dscp <classifier name> forwarding-class dscp15 loss-priority high code-points 001111\nNote: Some platforms apply DSCP values to both IPv4 and IPv6 traffic with a single classifier definition (as shown). Those platforms that support separating classifiers will require a \"dscp-ipv6\" stanza.\n\nset class-of-service host-outbound-traffic forwarding-class NC\nset class-of-service host-outbound-traffic dscp-code-point 110000\nset class-of-service shared-buffer ingress percent 50\nset class-of-service shared-buffer ingress buffer-partition lossless percent 5\nset class-of-service shared-buffer ingress buffer-partition lossless-headroom percent 0\nset class-of-service shared-buffer ingress buffer-partition lossy percent 95\nset class-of-service shared-buffer egress percent 100\nset class-of-service shared-buffer egress buffer-partition lossless percent 50\nset class-of-service shared-buffer egress buffer-partition lossy percent 45\nset class-of-service shared-buffer egress buffer-partition multicast percent 5\nNote: Some platforms only support shared-buffer percent, and cannot separate between ingress and egress. Not all devices require a shared-buffer stanza.\n\nset class-of-service forwarding-classes class NC queue-num 7\nset class-of-service forwarding-classes class EF queue-num 6\nset class-of-service forwarding-classes class AF41 queue-num 5\nset class-of-service forwarding-classes class AF31 queue-num 4\nset class-of-service forwarding-classes class BE queue-num 0\nset class-of-service forwarding-classes class Default queue-num 1\nset class-of-service forwarding-classes class dscp15 queue-num 6\n\nset class-of-service traffic-control-profiles <control profile name 1> scheduler-map <scheduler map name 1>\nset class-of-service traffic-control-profiles <control profile name 1> shaping-rate percent 100\nset class-of-service traffic-control-profiles <control profile name 2> scheduler-map <scheduler map name 2>\nset class-of-service traffic-control-profiles <control profile name 2> guaranteed-rate percent 20\n\nset class-of-service forwarding-class-sets <set name 1> class NC\nset class-of-service forwarding-class-sets <set name 1> class EF\nset class-of-service forwarding-class-sets <set name 1> class AF41\nset class-of-service forwarding-class-sets <set name 1> class AF31\nset class-of-service forwarding-class-sets <set name 1> class Default\nset class-of-service forwarding-class-sets <set name 1> class dscp15\nset class-of-service forwarding-class-sets <set name 2> class BE\n\nset class-of-service interfaces <interface name> forwarding-class-set <set name 1> output-traffic-control-profile <control profile name 1>\nset class-of-service interfaces <interface name> forwarding-class-set <set name 2> output-traffic-control-profile <control profile name 2>\nset class-of-service interfaces <interface name> classifiers dscp <classifier name>\nset class-of-service interfaces <interface name> rewrite-rules dscp <rewrite rule name>\n\nset class-of-service rewrite-rules dscp <rewrite rule name> forwarding-class dscp15 loss-priority high code-point 101101\nset class-of-service rewrite-rules dscp <rewrite rule name> forwarding-class EF loss-priority low code-point 110001\nset class-of-service rewrite-rules dscp <rewrite rule name> forwarding-class AF41 loss-priority high code-point 100110\nset class-of-service rewrite-rules dscp <rewrite rule name> forwarding-class NC loss-priority low code-point 110000\nset class-of-service rewrite-rules dscp <rewrite rule name> forwarding-class AF31 loss-priority high code-point 010000\nset class-of-service rewrite-rules dscp <rewrite rule name> forwarding-class Default loss-priority high code-point 001000\n\nset class-of-service scheduler-maps <scheduler map name 1> forwarding-class NC scheduler NC\nset class-of-service scheduler-maps <scheduler map name 1> forwarding-class EF scheduler EF\nset class-of-service scheduler-maps <scheduler map name 1> forwarding-class AF41 scheduler AF41\nset class-of-service scheduler-maps <scheduler map name 1> forwarding-class AF31 scheduler AF31\nset class-of-service scheduler-maps <scheduler map name 1> forwarding-class Default scheduler Default\nset class-of-service scheduler-maps <scheduler map name 2> forwarding-class BE scheduler BE\n\nset class-of-service schedulers NC buffer-size percent 5\nset class-of-service schedulers NC priority strict-high\nset class-of-service schedulers EF shaping-rate percent 20\nset class-of-service schedulers EF buffer-size percent 19\nset class-of-service schedulers EF priority strict-high\nset class-of-service schedulers AF41 shaping-rate percent 15\nset class-of-service schedulers AF41 buffer-size percent 14\nset class-of-service schedulers AF41 priority strict-high\nset class-of-service schedulers AF31 shaping-rate percent 31\nset class-of-service schedulers AF31 buffer-size percent 29\nset class-of-service schedulers AF31 priority strict-high\nset class-of-service schedulers BE transmit-rate percent 20\nset class-of-service schedulers BE buffer-size percent 20\nset class-of-service schedulers BE priority low\nset class-of-service schedulers Default shaping-rate percent 10\nset class-of-service schedulers Default buffer-size percent 9\nset class-of-service schedulers Default priority strict-high", "CCI": "CCI-001095"}, {"VulnID": "V-254007", "RuleID": "SV-254007r844054_rule", "StigID": "JUEX-RT-000350", "Severity": "low", "Cat": "CAT III", "Classification": "", "GroupTitle": "SRG-NET-000193-RTR-000113", "RuleTitle": "The Juniper PE router must be configured to enforce a Quality-of-Service (QoS) policy in accordance with the QoS DODIN Technical Profile.", "Description": "<VulnDiscussion>Different applications have unique requirements and toleration levels for delay, jitter, bandwidth, packet loss, and availability. To manage the multitude of applications and services, a network requires a QoS framework to differentiate traffic and provide a method to manage network congestion. The Differentiated Services Model (DiffServ) is based on per-hop behavior by categorizing traffic into different classes and enabling each node to enforce a forwarding treatment to each packet as dictated by a policy.\n\nPacket markings such as IP Precedence and its successor, Differentiated Services Code Points (DSCP), were defined along with specific per-hop behaviors for key traffic types to enable a scalable QoS solution. DiffServ QoS categorizes network traffic, prioritizes it according to its relative importance, and provides priority treatment based on the classification. It is imperative that end-to-end QoS is implemented within the IP core network to provide preferred treatment for mission-critical applications.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Different applications have unique requirements and toleration levels for delay, jitter, bandwidth, packet loss, and availability. To manage the multitude of applications and services, a network requires a QoS framework to differentiate traffic and provide a method to manage network congestion. The Differentiated Services Model (DiffServ) is based on per-hop behavior by categorizing traffic into different classes and enabling each node to enforce a forwarding treatment to each packet as dictated by a policy.\n\nPacket markings such as IP Precedence and its successor, Differentiated Services Code Points (DSCP), were defined along with specific per-hop behaviors for key traffic types to enable a scalable QoS solution. DiffServ QoS categorizes network traffic, prioritizes it according to its relative importance, and provides priority treatment based on the classification. It is imperative that end-to-end QoS is implemented within the IP core network to provide preferred treatment for mission-critical applications.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the router configuration and verify that a QoS policy has been configured to provide preferred treatment for mission-critical applications in accordance with the QoS GIG Technical Profile. \n\nVerify that the classifiers are configured to match on DSCP.\nNote: Juniper routers also support classifying on MPLS EXP and IEEE 802.1 values. \n\nVerify that the schedulers are configured to set DSCP values for the defined classifiers in accordance with the QoS GIG Technical Profile. \n\nVerify that forwarding class sets or scheduler maps are applied all interfaces. \n\nNote: The GTP QOS document (GTP-0009) can be downloaded via the following link:\nhttps://intellipedia.intelink.gov/wiki/Portal:GIG_Technical_Guidance/GTG_GTPs/GTP_Development_List\n\nTo classify on L4 ports or protocols, use stateless firewall filters to direct matched traffic into the required forwarding class.\n\n[edit class-of-service]\nclassifiers {\n    dscp <classifier name> {\n        forwarding-class NC {\n            loss-priority low code-points 110000;\n        }\n        forwarding-class EF {\n            loss-priority high code-points [ 101101 101111 100101 100111 110011 ];\n            loss-priority low code-points [ 101000 100000 101001 101011 100001 100011 110001 ];\n        }\n        forwarding-class AF41 {\n            loss-priority high code-points [ 100010 100100 100110 ];\n            loss-priority low code-points [ 011000 101110 011100 011110 ];\n        }\n        forwarding-class AF31 {\n            loss-priority high code-points [ 011101 011111 011010 010101 010111 010010 001101 001010 010000 ];\n            loss-priority low code-points [ 001001 001011 010001 010011 011001 011011 ];\n        }\n        forwarding-class BE {\n            loss-priority high code-points 000000;\n        }\n        forwarding-class Default {\n            loss-priority high code-points 001000;\n        }\n        forwarding-class dscp15 {\n            loss-priority high code-points 001111;\n        }\n    }\n}\n\nNote: Some platforms apply DSCP values to both IPv4 and IPv6 traffic with a single classifier definition (as shown). Those platforms that support separating classifiers will require a \"dscp-ipv6\" stanza.\nhost-outbound-traffic {\n    forwarding-class NC;\n    dscp-code-point 110000;\n}\nshared-buffer {\n    ingress {\n        percent 50;\n        buffer-partition lossless {\n            percent 5;\n        }\n        buffer-partition lossless-headroom {\n            percent 0;\n        }\n        buffer-partition lossy {\n            percent 95;\n        }\n    }\n    egress {\n        percent 100;\n        buffer-partition lossless {\n            percent 50;\n        }\n        buffer-partition lossy {\n            percent 45;\n        }\n        buffer-partition multicast {\n            percent 5;\n        }\n    }\n}\nNote: Some platforms only support shared-buffer percent, and cannot separate between ingress and egress. Not all devices require a shared-buffer stanza.\nforwarding-classes {\n    class NC queue-num 7;\n    class EF queue-num 6;\n    class AF41 queue-num 5;\n    class AF31 queue-num 4;\n    class BE queue-num 0;\n    class Default queue-num 1;\n    class dscp15 queue-num 6;\n}\ntraffic-control-profiles {\n    <control profile name 1> {\n        scheduler-map <scheduler map name 1>;        \n        shaping-rate percent 100;\n    }\n    <control profile name 2> {\n        scheduler-map <scheduler map name 2>;\n        guaranteed-rate percent 20;\n    }\n}\nforwarding-class-sets {\n    <set name 1> {\n        class NC;\n        class EF;\n        class AF41;\n        class AF31;\n        class Default;\n        class dscp15;\n    }\n    <set name 2> {\n        class BE;\n    }\n}\ninterfaces {\n    <interface name> {\n        forwarding-class-set {\n            <set name 1> {\n                output-traffic-control-profile <control profile name 1>;\n            }\n            <set name 2> {\n                output-traffic-control-profile <control profile name 2>;\n            }\n        }\n        classifiers {\n            dscp <classifier name>;\n        }\n        rewrite-rules {\n            dscp <rewrite rule name>;\n        }\n    }\n}\nrewrite-rules {\n    dscp <rewrite rule name> {\n        forwarding-class dscp15 {\n            loss-priority high code-point 101101;\n        }\n        forwarding-class EF {\n            loss-priority low code-point 110001;\n        }\n        forwarding-class AF41 {\n            loss-priority high code-point 100110;\n        }\n        forwarding-class NC {\n            loss-priority low code-point 110000;\n        }\n        forwarding-class AF31 {\n            loss-priority high code-point 010000;\n        }\n        forwarding-class Default {\n            loss-priority high code-point 001000;\n        }\n    }\n}\nNote: Some platforms require rewriting all DSCP values if rewriting one (smaller platforms). Most support only rewriting a single DSCP value, which would eliminate all but one rewrite rule.\nscheduler-maps {\n    <scheduler map name 1> {\n        forwarding-class NC scheduler NC;\n        forwarding-class EF scheduler EF;\n        forwarding-class AF41 scheduler AF41;\n        forwarding-class AF31 scheduler AF31;\n        forwarding-class Default scheduler Default;\n    }\n    <scheduler map name 2> {\n        forwarding-class BE scheduler BE;\n    }\n}\nschedulers {\n    NC {\n        buffer-size percent 5;\n        priority strict-high;\n    }\n    EF {\n        shaping-rate percent 20;\n        buffer-size percent 19;\n        priority strict-high;\n    }\n    AF41 {\n        shaping-rate percent 15;\n        buffer-size percent 14;\n        priority strict-high;\n    }\n    AF31 {\n        shaping-rate percent 31;\n        buffer-size percent 29;\n        priority strict-high;\n    }\n    BE {\n        transmit-rate percent 20;\n        buffer-size percent 20;\n        priority low;\n    }\n    Default {\n        shaping-rate percent 10;\n        buffer-size percent 9;\n        priority strict-high;\n    }\n}\n\nIf the router is not configured to implement a QoS policy in accordance with the QoS GIG Technical Profile, this is a finding.", "FixText": "Configure a QoS policy on each router in accordance with the QoS GIG Technical Profile.\n\nset class-of-service classifiers dscp <classifier name> forwarding-class NC loss-priority low code-points 110000\nset class-of-service classifiers dscp <classifier name> forwarding-class EF loss-priority high code-points 101101\nset class-of-service classifiers dscp <classifier name> forwarding-class EF loss-priority high code-points 101111\nset class-of-service classifiers dscp <classifier name> forwarding-class EF loss-priority high code-points 100101\nset class-of-service classifiers dscp <classifier name> forwarding-class EF loss-priority high code-points 100111\nset class-of-service classifiers dscp <classifier name> forwarding-class EF loss-priority high code-points 110011\nset class-of-service classifiers dscp <classifier name> forwarding-class EF loss-priority low code-points 101000\nset class-of-service classifiers dscp <classifier name> forwarding-class EF loss-priority low code-points 100000\nset class-of-service classifiers dscp <classifier name> forwarding-class EF loss-priority low code-points 101001\nset class-of-service classifiers dscp <classifier name> forwarding-class EF loss-priority low code-points 101011\nset class-of-service classifiers dscp <classifier name> forwarding-class EF loss-priority low code-points 100001\nset class-of-service classifiers dscp <classifier name> forwarding-class EF loss-priority low code-points 100011\nset class-of-service classifiers dscp <classifier name> forwarding-class EF loss-priority low code-points 110001\nset class-of-service classifiers dscp <classifier name> forwarding-class AF41 loss-priority high code-points 100010\nset class-of-service classifiers dscp <classifier name> forwarding-class AF41 loss-priority high code-points 100100\nset class-of-service classifiers dscp <classifier name> forwarding-class AF41 loss-priority high code-points 100110\nset class-of-service classifiers dscp <classifier name> forwarding-class AF41 loss-priority low code-points 011000\nset class-of-service classifiers dscp <classifier name> forwarding-class AF41 loss-priority low code-points 101110\nset class-of-service classifiers dscp <classifier name> forwarding-class AF41 loss-priority low code-points 011100\nset class-of-service classifiers dscp <classifier name> forwarding-class AF41 loss-priority low code-points 011110\nset class-of-service classifiers dscp <classifier name> forwarding-class AF31 loss-priority high code-points 011101\nset class-of-service classifiers dscp <classifier name> forwarding-class AF31 loss-priority high code-points 011111\nset class-of-service classifiers dscp <classifier name> forwarding-class AF31 loss-priority high code-points 011010\nset class-of-service classifiers dscp <classifier name> forwarding-class AF31 loss-priority high code-points 010101\nset class-of-service classifiers dscp <classifier name> forwarding-class AF31 loss-priority high code-points 010111\nset class-of-service classifiers dscp <classifier name> forwarding-class AF31 loss-priority high code-points 010010\nset class-of-service classifiers dscp <classifier name> forwarding-class AF31 loss-priority high code-points 001101\nset class-of-service classifiers dscp <classifier name> forwarding-class AF31 loss-priority high code-points 001010\nset class-of-service classifiers dscp <classifier name> forwarding-class AF31 loss-priority high code-points 010000\nset class-of-service classifiers dscp <classifier name> forwarding-class AF31 loss-priority low code-points 001001\nset class-of-service classifiers dscp <classifier name> forwarding-class AF31 loss-priority low code-points 001011\nset class-of-service classifiers dscp <classifier name> forwarding-class AF31 loss-priority low code-points 010001\nset class-of-service classifiers dscp <classifier name> forwarding-class AF31 loss-priority low code-points 010011\nset class-of-service classifiers dscp <classifier name> forwarding-class AF31 loss-priority low code-points 011001\nset class-of-service classifiers dscp <classifier name> forwarding-class AF31 loss-priority low code-points 011011\nset class-of-service classifiers dscp <classifier name> forwarding-class BE loss-priority high code-points 000000\nset class-of-service classifiers dscp <classifier name> forwarding-class Default loss-priority high code-points 001000\nset class-of-service classifiers dscp <classifier name> forwarding-class dscp15 loss-priority high code-points 001111\nNote: Some platforms apply DSCP values to both IPv4 and IPv6 traffic with a single classifier definition (as shown). Those platforms that support separating classifiers will require a \"dscp-ipv6\" stanza.\n\nset class-of-service host-outbound-traffic forwarding-class NC\nset class-of-service host-outbound-traffic dscp-code-point 110000\nset class-of-service shared-buffer ingress percent 50\nset class-of-service shared-buffer ingress buffer-partition lossless percent 5\nset class-of-service shared-buffer ingress buffer-partition lossless-headroom percent 0\nset class-of-service shared-buffer ingress buffer-partition lossy percent 95\nset class-of-service shared-buffer egress percent 100\nset class-of-service shared-buffer egress buffer-partition lossless percent 50\nset class-of-service shared-buffer egress buffer-partition lossy percent 45\nset class-of-service shared-buffer egress buffer-partition multicast percent 5\nNote: Some platforms only support shared-buffer percent, and cannot separate between ingress and egress. Not all devices require a shared-buffer stanza.\n\nset class-of-service forwarding-classes class NC queue-num 7\nset class-of-service forwarding-classes class EF queue-num 6\nset class-of-service forwarding-classes class AF41 queue-num 5\nset class-of-service forwarding-classes class AF31 queue-num 4\nset class-of-service forwarding-classes class BE queue-num 0\nset class-of-service forwarding-classes class Default queue-num 1\nset class-of-service forwarding-classes class dscp15 queue-num 6\n\nset class-of-service traffic-control-profiles <control profile name 1> scheduler-map <scheduler map name 1>\nset class-of-service traffic-control-profiles <control profile name 1> shaping-rate percent 100\nset class-of-service traffic-control-profiles <control profile name 2> scheduler-map <scheduler map name 2>\nset class-of-service traffic-control-profiles <control profile name 2> guaranteed-rate percent 20\n\nset class-of-service forwarding-class-sets <set name 1> class NC\nset class-of-service forwarding-class-sets <set name 1> class EF\nset class-of-service forwarding-class-sets <set name 1> class AF41\nset class-of-service forwarding-class-sets <set name 1> class AF31\nset class-of-service forwarding-class-sets <set name 1> class Default\nset class-of-service forwarding-class-sets <set name 1> class dscp15\nset class-of-service forwarding-class-sets <set name 2> class BE\n\nset class-of-service interfaces <interface name> forwarding-class-set <set name 1> output-traffic-control-profile <control profile name 1>\nset class-of-service interfaces <interface name> forwarding-class-set <set name 2> output-traffic-control-profile <control profile name 2>\nset class-of-service interfaces <interface name> classifiers dscp <classifier name>\nset class-of-service interfaces <interface name> rewrite-rules dscp <rewrite rule name>\n\nset class-of-service rewrite-rules dscp <rewrite rule name> forwarding-class dscp15 loss-priority high code-point 101101\nset class-of-service rewrite-rules dscp <rewrite rule name> forwarding-class EF loss-priority low code-point 110001\nset class-of-service rewrite-rules dscp <rewrite rule name> forwarding-class AF41 loss-priority high code-point 100110\nset class-of-service rewrite-rules dscp <rewrite rule name> forwarding-class NC loss-priority low code-point 110000\nset class-of-service rewrite-rules dscp <rewrite rule name> forwarding-class AF31 loss-priority high code-point 010000\nset class-of-service rewrite-rules dscp <rewrite rule name> forwarding-class Default loss-priority high code-point 001000\n\nset class-of-service scheduler-maps <scheduler map name 1> forwarding-class NC scheduler NC\nset class-of-service scheduler-maps <scheduler map name 1> forwarding-class EF scheduler EF\nset class-of-service scheduler-maps <scheduler map name 1> forwarding-class AF41 scheduler AF41\nset class-of-service scheduler-maps <scheduler map name 1> forwarding-class AF31 scheduler AF31\nset class-of-service scheduler-maps <scheduler map name 1> forwarding-class Default scheduler Default\nset class-of-service scheduler-maps <scheduler map name 2> forwarding-class BE scheduler BE\n\nset class-of-service schedulers NC buffer-size percent 5\nset class-of-service schedulers NC priority strict-high\nset class-of-service schedulers EF shaping-rate percent 20\nset class-of-service schedulers EF buffer-size percent 19\nset class-of-service schedulers EF priority strict-high\nset class-of-service schedulers AF41 shaping-rate percent 15\nset class-of-service schedulers AF41 buffer-size percent 14\nset class-of-service schedulers AF41 priority strict-high\nset class-of-service schedulers AF31 shaping-rate percent 31\nset class-of-service schedulers AF31 buffer-size percent 29\nset class-of-service schedulers AF31 priority strict-high\nset class-of-service schedulers BE transmit-rate percent 20\nset class-of-service schedulers BE buffer-size percent 20\nset class-of-service schedulers BE priority low\nset class-of-service schedulers Default shaping-rate percent 10\nset class-of-service schedulers Default buffer-size percent 9\nset class-of-service schedulers Default priority strict-high", "CCI": "CCI-001095"}, {"VulnID": "V-254008", "RuleID": "SV-254008r844057_rule", "StigID": "JUEX-RT-000360", "Severity": "low", "Cat": "CAT III", "Classification": "", "GroupTitle": "SRG-NET-000193-RTR-000114", "RuleTitle": "The Juniper P router must be configured to enforce a Quality-of-Service (QoS) policy in accordance with the QoS GIG Technical Profile.", "Description": "<VulnDiscussion>Different applications have unique requirements and toleration levels for delay, jitter, bandwidth, packet loss, and availability. To manage the multitude of applications and services, a network requires a QoS framework to differentiate traffic and provide a method to manage network congestion. The Differentiated Services Model (DiffServ) is based on per-hop behavior by categorizing traffic into different classes and enabling each node to enforce a forwarding treatment to each packet as dictated by a policy.\n\nPacket markings such as IP Precedence and its successor, Differentiated Services Code Points (DSCP), were defined along with specific per-hop behaviors for key traffic types to enable a scalable QoS solution. DiffServ QoS categorizes network traffic, prioritizes it according to its relative importance, and provides priority treatment based on the classification. It is imperative that end-to-end QoS is implemented within the IP core network to provide preferred treatment for mission-critical applications.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Different applications have unique requirements and toleration levels for delay, jitter, bandwidth, packet loss, and availability. To manage the multitude of applications and services, a network requires a QoS framework to differentiate traffic and provide a method to manage network congestion. The Differentiated Services Model (DiffServ) is based on per-hop behavior by categorizing traffic into different classes and enabling each node to enforce a forwarding treatment to each packet as dictated by a policy.\n\nPacket markings such as IP Precedence and its successor, Differentiated Services Code Points (DSCP), were defined along with specific per-hop behaviors for key traffic types to enable a scalable QoS solution. DiffServ QoS categorizes network traffic, prioritizes it according to its relative importance, and provides priority treatment based on the classification. It is imperative that end-to-end QoS is implemented within the IP core network to provide preferred treatment for mission-critical applications.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the router configuration and verify that a QoS policy has been configured to provide preferred treatment for mission-critical applications in accordance with the QoS GIG Technical Profile. \n\nVerify that the classifiers are configured to match on DSCP.\nNote: Juniper routers also support classifying on MPLS EXP and IEEE 802.1 values. \n\nVerify that the schedulers are configured to set DSCP values for the defined classifiers in accordance with the QoS GIG Technical Profile. \n\nVerify that classifiers are applied all interfaces. \n\nNote: The GTP QOS document (GTP-0009) can be downloaded via the following link:\nhttps://intellipedia.intelink.gov/wiki/Portal:GIG_Technical_Guidance/GTG_GTPs/GTP_Development_List\n\nTo classify on L4 ports or protocols, use stateless firewall filters to direct matched traffic into the required forwarding class.\n\n[edit class-of-service]\nclassifiers {\n    dscp <classifier name> {\n        forwarding-class NC {\n            loss-priority low code-points 110000;\n        }\n        forwarding-class EF {\n            loss-priority high code-points [ 101101 101111 100101 100111 110011 ];\n            loss-priority low code-points [ 101000 100000 101001 101011 100001 100011 110001 ];\n        }\n        forwarding-class AF41 {\n            loss-priority high code-points [ 100010 100100 100110 ];\n            loss-priority low code-points [ 011000 101110 011100 011110 ];\n        }\n        forwarding-class AF31 {\n            loss-priority high code-points [ 011101 011111 011010 010101 010111 010010 001101 001010 010000 ];\n            loss-priority low code-points [ 001001 001011 010001 010011 011001 011011 ];\n        }\n        forwarding-class BE {\n            loss-priority high code-points 000000;\n        }\n        forwarding-class Default {\n            loss-priority high code-points 001000;\n        }\n        forwarding-class dscp15 {\n            loss-priority high code-points 001111;\n        }\n    }\n}\n\nNote: Some platforms apply DSCP values to both IPv4 and IPv6 traffic with a single classifier definition (as shown). Those platforms that support separating classifiers will require a \"dscp-ipv6\" stanza.\nhost-outbound-traffic {\n    forwarding-class NC;\n    dscp-code-point 110000;\n}\nshared-buffer {\n    ingress {\n        percent 50;\n        buffer-partition lossless {\n            percent 5;\n        }\n        buffer-partition lossless-headroom {\n            percent 0;\n        }\n        buffer-partition lossy {\n            percent 95;\n        }\n    }\n    egress {\n        percent 100;\n        buffer-partition lossless {\n            percent 50;\n        }\n        buffer-partition lossy {\n            percent 45;\n        }\n        buffer-partition multicast {\n            percent 5;\n        }\n    }\n}\nNote: Some platforms only support shared-buffer percent, and cannot separate between ingress and egress. Not all devices require a shared-buffer stanza.\nforwarding-classes {\n    class NC queue-num 7;\n    class EF queue-num 6;\n    class AF41 queue-num 5;\n    class AF31 queue-num 4;\n    class BE queue-num 0;\n    class Default queue-num 1;\n    class dscp15 queue-num 6;\n}\ntraffic-control-profiles {\n    <control profile name 1> {\n        scheduler-map <scheduler map name 1>;        \n        shaping-rate percent 100;\n    }\n    <control profile name 2> {\n        scheduler-map <scheduler map name 2>;\n        guaranteed-rate percent 20;\n    }\n}\nforwarding-class-sets {\n    <set name 1> {\n        class NC;\n        class EF;\n        class AF41;\n        class AF31;\n        class Default;\n        class dscp15;\n    }\n    <set name 2> {\n        class BE;\n    }\n}\ninterfaces {\n    <interface name> {\n        forwarding-class-set {\n            <set name 1> {\n                output-traffic-control-profile <control profile name 1>;\n            }\n            <set name 2> {\n                output-traffic-control-profile <control profile name 2>;\n            }\n        }\n        classifiers {\n            dscp <classifier name>;\n        }\n        rewrite-rules {\n            dscp <rewrite rule name>;\n        }\n    }\n}\nrewrite-rules {\n    dscp <rewrite rule name> {\n        forwarding-class dscp15 {\n            loss-priority high code-point 101101;\n        }\n        forwarding-class EF {\n            loss-priority low code-point 110001;\n        }\n        forwarding-class AF41 {\n            loss-priority high code-point 100110;\n        }\n        forwarding-class NC {\n            loss-priority low code-point 110000;\n        }\n        forwarding-class AF31 {\n            loss-priority high code-point 010000;\n        }\n        forwarding-class Default {\n            loss-priority high code-point 001000;\n        }\n    }\n}\nNote: Some platforms require rewriting all DSCP values if rewriting one (smaller platforms). Most support only rewriting a single DSCP value, which would eliminate all but one rewrite rule.\nscheduler-maps {\n    <scheduler map name 1> {\n        forwarding-class NC scheduler NC;\n        forwarding-class EF scheduler EF;\n        forwarding-class AF41 scheduler AF41;\n        forwarding-class AF31 scheduler AF31;\n        forwarding-class Default scheduler Default;\n    }\n    <scheduler map name 2> {\n        forwarding-class BE scheduler BE;\n    }\n}\nschedulers {\n    NC {\n        buffer-size percent 5;\n        priority strict-high;\n    }\n    EF {\n        shaping-rate percent 20;\n        buffer-size percent 19;\n        priority strict-high;\n    }\n    AF41 {\n        shaping-rate percent 15;\n        buffer-size percent 14;\n        priority strict-high;\n    }\n    AF31 {\n        shaping-rate percent 31;\n        buffer-size percent 29;\n        priority strict-high;\n    }\n    BE {\n        transmit-rate percent 20;\n        buffer-size percent 20;\n        priority low;\n    }\n    Default {\n        shaping-rate percent 10;\n        buffer-size percent 9;\n        priority strict-high;\n    }\n}\n\nIf the router is not configured to implement a QoS policy in accordance with the QoS GIG Technical Profile, this is a finding.", "FixText": "Configure a QoS policy on each router in accordance with the QoS GIG Technical Profile.\n\nset class-of-service classifiers dscp <classifier name> forwarding-class NC loss-priority low code-points 110000\nset class-of-service classifiers dscp <classifier name> forwarding-class EF loss-priority high code-points 101101\nset class-of-service classifiers dscp <classifier name> forwarding-class EF loss-priority high code-points 101111\nset class-of-service classifiers dscp <classifier name> forwarding-class EF loss-priority high code-points 100101\nset class-of-service classifiers dscp <classifier name> forwarding-class EF loss-priority high code-points 100111\nset class-of-service classifiers dscp <classifier name> forwarding-class EF loss-priority high code-points 110011\nset class-of-service classifiers dscp <classifier name> forwarding-class EF loss-priority low code-points 101000\nset class-of-service classifiers dscp <classifier name> forwarding-class EF loss-priority low code-points 100000\nset class-of-service classifiers dscp <classifier name> forwarding-class EF loss-priority low code-points 101001\nset class-of-service classifiers dscp <classifier name> forwarding-class EF loss-priority low code-points 101011\nset class-of-service classifiers dscp <classifier name> forwarding-class EF loss-priority low code-points 100001\nset class-of-service classifiers dscp <classifier name> forwarding-class EF loss-priority low code-points 100011\nset class-of-service classifiers dscp <classifier name> forwarding-class EF loss-priority low code-points 110001\nset class-of-service classifiers dscp <classifier name> forwarding-class AF41 loss-priority high code-points 100010\nset class-of-service classifiers dscp <classifier name> forwarding-class AF41 loss-priority high code-points 100100\nset class-of-service classifiers dscp <classifier name> forwarding-class AF41 loss-priority high code-points 100110\nset class-of-service classifiers dscp <classifier name> forwarding-class AF41 loss-priority low code-points 011000\nset class-of-service classifiers dscp <classifier name> forwarding-class AF41 loss-priority low code-points 101110\nset class-of-service classifiers dscp <classifier name> forwarding-class AF41 loss-priority low code-points 011100\nset class-of-service classifiers dscp <classifier name> forwarding-class AF41 loss-priority low code-points 011110\nset class-of-service classifiers dscp <classifier name> forwarding-class AF31 loss-priority high code-points 011101\nset class-of-service classifiers dscp <classifier name> forwarding-class AF31 loss-priority high code-points 011111\nset class-of-service classifiers dscp <classifier name> forwarding-class AF31 loss-priority high code-points 011010\nset class-of-service classifiers dscp <classifier name> forwarding-class AF31 loss-priority high code-points 010101\nset class-of-service classifiers dscp <classifier name> forwarding-class AF31 loss-priority high code-points 010111\nset class-of-service classifiers dscp <classifier name> forwarding-class AF31 loss-priority high code-points 010010\nset class-of-service classifiers dscp <classifier name> forwarding-class AF31 loss-priority high code-points 001101\nset class-of-service classifiers dscp <classifier name> forwarding-class AF31 loss-priority high code-points 001010\nset class-of-service classifiers dscp <classifier name> forwarding-class AF31 loss-priority high code-points 010000\nset class-of-service classifiers dscp <classifier name> forwarding-class AF31 loss-priority low code-points 001001\nset class-of-service classifiers dscp <classifier name> forwarding-class AF31 loss-priority low code-points 001011\nset class-of-service classifiers dscp <classifier name> forwarding-class AF31 loss-priority low code-points 010001\nset class-of-service classifiers dscp <classifier name> forwarding-class AF31 loss-priority low code-points 010011\nset class-of-service classifiers dscp <classifier name> forwarding-class AF31 loss-priority low code-points 011001\nset class-of-service classifiers dscp <classifier name> forwarding-class AF31 loss-priority low code-points 011011\nset class-of-service classifiers dscp <classifier name> forwarding-class BE loss-priority high code-points 000000\nset class-of-service classifiers dscp <classifier name> forwarding-class Default loss-priority high code-points 001000\nset class-of-service classifiers dscp <classifier name> forwarding-class dscp15 loss-priority high code-points 001111\nNote: Some platforms apply DSCP values to both IPv4 and IPv6 traffic with a single classifier definition (as shown). Those platforms that support separating classifiers will require a \"dscp-ipv6\" stanza.\n\nset class-of-service host-outbound-traffic forwarding-class NC\nset class-of-service host-outbound-traffic dscp-code-point 110000\nset class-of-service shared-buffer ingress percent 50\nset class-of-service shared-buffer ingress buffer-partition lossless percent 5\nset class-of-service shared-buffer ingress buffer-partition lossless-headroom percent 0\nset class-of-service shared-buffer ingress buffer-partition lossy percent 95\nset class-of-service shared-buffer egress percent 100\nset class-of-service shared-buffer egress buffer-partition lossless percent 50\nset class-of-service shared-buffer egress buffer-partition lossy percent 45\nset class-of-service shared-buffer egress buffer-partition multicast percent 5\nNote: Some platforms only support shared-buffer percent, and cannot separate between ingress and egress. Not all devices require a shared-buffer stanza.\n\nset class-of-service forwarding-classes class NC queue-num 7\nset class-of-service forwarding-classes class EF queue-num 6\nset class-of-service forwarding-classes class AF41 queue-num 5\nset class-of-service forwarding-classes class AF31 queue-num 4\nset class-of-service forwarding-classes class BE queue-num 0\nset class-of-service forwarding-classes class Default queue-num 1\nset class-of-service forwarding-classes class dscp15 queue-num 6\n\nset class-of-service traffic-control-profiles <control profile name 1> scheduler-map <scheduler map name 1>\nset class-of-service traffic-control-profiles <control profile name 1> shaping-rate percent 100\nset class-of-service traffic-control-profiles <control profile name 2> scheduler-map <scheduler map name 2>\nset class-of-service traffic-control-profiles <control profile name 2> guaranteed-rate percent 20\n\nset class-of-service forwarding-class-sets <set name 1> class NC\nset class-of-service forwarding-class-sets <set name 1> class EF\nset class-of-service forwarding-class-sets <set name 1> class AF41\nset class-of-service forwarding-class-sets <set name 1> class AF31\nset class-of-service forwarding-class-sets <set name 1> class Default\nset class-of-service forwarding-class-sets <set name 1> class dscp15\nset class-of-service forwarding-class-sets <set name 2> class BE\n\nset class-of-service interfaces <interface name> forwarding-class-set <set name 1> output-traffic-control-profile <control profile name 1>\nset class-of-service interfaces <interface name> forwarding-class-set <set name 2> output-traffic-control-profile <control profile name 2>\nset class-of-service interfaces <interface name> classifiers dscp <classifier name>\nset class-of-service interfaces <interface name> rewrite-rules dscp <rewrite rule name>\n\nset class-of-service rewrite-rules dscp <rewrite rule name> forwarding-class dscp15 loss-priority high code-point 101101\nset class-of-service rewrite-rules dscp <rewrite rule name> forwarding-class EF loss-priority low code-point 110001\nset class-of-service rewrite-rules dscp <rewrite rule name> forwarding-class AF41 loss-priority high code-point 100110\nset class-of-service rewrite-rules dscp <rewrite rule name> forwarding-class NC loss-priority low code-point 110000\nset class-of-service rewrite-rules dscp <rewrite rule name> forwarding-class AF31 loss-priority high code-point 010000\nset class-of-service rewrite-rules dscp <rewrite rule name> forwarding-class Default loss-priority high code-point 001000\n\nset class-of-service scheduler-maps <scheduler map name 1> forwarding-class NC scheduler NC\nset class-of-service scheduler-maps <scheduler map name 1> forwarding-class EF scheduler EF\nset class-of-service scheduler-maps <scheduler map name 1> forwarding-class AF41 scheduler AF41\nset class-of-service scheduler-maps <scheduler map name 1> forwarding-class AF31 scheduler AF31\nset class-of-service scheduler-maps <scheduler map name 1> forwarding-class Default scheduler Default\nset class-of-service scheduler-maps <scheduler map name 2> forwarding-class BE scheduler BE\n\nset class-of-service schedulers NC buffer-size percent 5\nset class-of-service schedulers NC priority strict-high\nset class-of-service schedulers EF shaping-rate percent 20\nset class-of-service schedulers EF buffer-size percent 19\nset class-of-service schedulers EF priority strict-high\nset class-of-service schedulers AF41 shaping-rate percent 15\nset class-of-service schedulers AF41 buffer-size percent 14\nset class-of-service schedulers AF41 priority strict-high\nset class-of-service schedulers AF31 shaping-rate percent 31\nset class-of-service schedulers AF31 buffer-size percent 29\nset class-of-service schedulers AF31 priority strict-high\nset class-of-service schedulers BE transmit-rate percent 20\nset class-of-service schedulers BE buffer-size percent 20\nset class-of-service schedulers BE priority low\nset class-of-service schedulers Default shaping-rate percent 10\nset class-of-service schedulers Default buffer-size percent 9\nset class-of-service schedulers Default priority strict-high", "CCI": "CCI-001095"}, {"VulnID": "V-254009", "RuleID": "SV-254009r844060_rule", "StigID": "JUEX-RT-000370", "Severity": "high", "Cat": "CAT I", "Classification": "", "GroupTitle": "SRG-NET-000202-RTR-000001", "RuleTitle": "The Juniper perimeter router must be configured to deny network traffic by default and allow network traffic by exception.", "Description": "<VulnDiscussion>A deny-all, permit-by-exception network communications traffic policy ensures that only connections that are essential and approved are allowed.\n\nThis requirement applies to both inbound and outbound network communications traffic. All inbound and outbound traffic must be denied by default. Firewalls and perimeter routers should only allow traffic through that is explicitly permitted. The initial defense for the internal network is to block any traffic at the perimeter that is attempting to make a connection to a host residing on the internal network. In addition, allowing unknown or undesirable outbound traffic by the firewall or router will establish a state that will permit the return of this undesirable traffic inbound.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "A deny-all, permit-by-exception network communications traffic policy ensures that only connections that are essential and approved are allowed.\n\nThis requirement applies to both inbound and outbound network communications traffic. All inbound and outbound traffic must be denied by default. Firewalls and perimeter routers should only allow traffic through that is explicitly permitted. The initial defense for the internal network is to block any traffic at the perimeter that is attempting to make a connection to a host residing on the internal network. In addition, allowing unknown or undesirable outbound traffic by the firewall or router will establish a state that will permit the return of this undesirable traffic inbound.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "This requirement is not applicable for the DODIN Backbone.\n\nReview the router configuration to verify that the firewall filter is configured to allow specific ports and protocols and deny all other traffic. Associating any firewall filter to an interface will create a deny-all, permit-by-exception posture because each filter includes an implicit \"deny all\" final term. Verify firewall filters applied inbound on external interfaces are configured with terms permitting specific traffic.\n\nFor example:\n[edit firewall]\nfamily inet {\n    filter permitted_inbound_traffic_ipv4 {\n        term 1 {\n            from {\n                destination-prefix-list {\n                    INSIDE_ADDRESSES_IPv4;\n                }\n                protocol tcp;\n                destination-port [ http https ];\n            }\n            then accept;\n        }\n        term 2 {\n            from {\n                destination-prefix-list {\n                    INSIDE_ADDRESSES_IPv4;\n                }\n                protocol udp;\n                destination-port [ domain radius ];\n            }\n            then accept;\n        }\n    }\n}\nfamily inet6 {\n    filter permitted_inbound_traffic_ipv6 {\n        term 1 {\n            from {\n                destination-prefix-list {\n                    INSIDE_ADDRESSES_IPv6;\n                }\n                next-header tcp;\n                destination-port [ http https ];\n            }\n            then accept;\n        }\n        term 2 {\n            from {\n                destination-prefix-list {\n                    INSIDE_ADDRESSES_IPv6;\n                }\n                next-header udp;\n                destination-port [ domain radius ];\n            }\n            then accept;\n        }\n    }\n}\n\nNote: Although the example filter is sufficient to meet this requirement, an explicit \"deny-all\" term is required for logging. For example, add the following final term to both filters (IPv4 and IPv6) to enable logging of discarded packets:\n[edit firewall family (inet|inet6) filter <name>]\nterm default {\n    then {\n        log;\n        syslog;\n        discard;\n    }\n}\n\nThe filter must be configured inbound on all external interfaces.\n[edit interfaces]\n<external interface> {\n    unit <number> {\n        family inet {\n            filter input permitted_inbound_traffic_ipv4;\n            address <IPv4 address/mask>;\n        }\n        family inet6 {\n            filter input permitted_inbound_traffic_ipv6;\n            address <IPv6 address/prefix>;\n        }\n}\nNote: Some Juniper devices support both monolithic filters and filter lists. Filter lists separate each term, or set of terms, into a separate filter that is applied sequentially to an interface. If using filter lists, the keywords \"input\" or \"output\" change to \"input-list\" or \"output-list\". Verify the final list item is a deny-all filter. The deny-all filter is created once per family and can be reused across multiple lists. For example:\n\ninput-list [ permit_mgt permit_routing_protocols default-deny ];\n\nIf the filter is not configured to allow specific ports and protocols and deny all other traffic, this is a finding.\n\nIf the filter is not configured inbound on all external interfaces, this is a finding.", "FixText": "This requirement is not applicable for the DODIN Backbone.\n\nConfigure the perimeter router to deny network traffic by default and allow network traffic by exception. For example:\n\nset firewall family inet filter permitted_inbound_traffic_ipv4 term 1 from destination-prefix-list INSIDE_ADDRESSES\nset firewall family inet filter permitted_inbound_traffic_ipv4 term 1 from protocol tcp\nset firewall family inet filter permitted_inbound_traffic_ipv4 term 1 from destination-port http\nset firewall family inet filter permitted_inbound_traffic_ipv4 term 1 from destination-port https\nset firewall family inet filter permitted_inbound_traffic_ipv4 term 1 then accept\nset firewall family inet filter permitted_inbound_traffic_ipv4 term 2 from destination-prefix-list INSIDE_ADDRESSES\nset firewall family inet filter permitted_inbound_traffic_ipv4 term 2 from protocol udp\nset firewall family inet filter permitted_inbound_traffic_ipv4 term 2 from destination-port domain\nset firewall family inet filter permitted_inbound_traffic_ipv4 term 2 from destination-port radius\nset firewall family inet filter permitted_inbound_traffic_ipv4 term 2 then accept\n\nset firewall family inet6 filter permitted_inbound_traffic_ipv6 term 1 from destination-prefix-list INSIDE_ADDRESSES\nset firewall family inet6 filter permitted_inbound_traffic_ipv6 term 1 from next-header tcp\nset firewall family inet6 filter permitted_inbound_traffic_ipv6 term 1 from destination-port http\nset firewall family inet6 filter permitted_inbound_traffic_ipv6 term 1 from destination-port https\nset firewall family inet6 filter permitted_inbound_traffic_ipv6 term 1 then accept\nset firewall family inet6 filter permitted_inbound_traffic_ipv6 term 2 from destination-prefix-list INSIDE_ADDRESSES\nset firewall family inet6 filter permitted_inbound_traffic_ipv6 term 2 from next-header udp\nset firewall family inet6 filter permitted_inbound_traffic_ipv6 term 2 from destination-port domain\nset firewall family inet6 filter permitted_inbound_traffic_ipv6 term 2 from destination-port radius\nset firewall family inet6 filter permitted_inbound_traffic_ipv6 term 2 then accept\n\nNote: To enable logging, add the following as the final term to each filter:\nset firewall family [inet|inet6] filter <name> term default then log\nset firewall family [inet|inet6] filter <name> term default then syslog\nset firewall family [inet|inet6] filter <name> term default then discard\n\nset interfaces <external interface> unit 0 family inet filter input permitted_inbound_traffic_ipv4\nset interfaces <external interface> unit 0 family inet address <IPv4 address / mask>\nset interfaces <external interface> unit 0 family inet6 filter input permitted_inbound_traffic_ipv6\nset interfaces <external interface> unit 0 family inet6 address <IPv6 address / prefix>", "CCI": "CCI-001109"}, {"VulnID": "V-254010", "RuleID": "SV-254010r844063_rule", "StigID": "JUEX-RT-000380", "Severity": "high", "Cat": "CAT I", "Classification": "", "GroupTitle": "SRG-NET-000205-RTR-000001", "RuleTitle": "The Juniper router must be configured to restrict traffic destined to itself.", "Description": "<VulnDiscussion>The routing engine (RE) handles traffic destined to the router\u2014the key component used to build forwarding paths and is also instrumental with all network management functions. Hence, any disruption or DoS attack to the RE can result in mission critical network outages.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "The routing engine (RE) handles traffic destined to the router\u2014the key component used to build forwarding paths and is also instrumental with all network management functions. Hence, any disruption or DoS attack to the RE can result in mission critical network outages.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the firewall filter for the router receive path and verify that it will only process specific management plane and control plane traffic from specific sources. For example:\n[edit policy-options]\nauth_mgt_networks-ipv4 {\n    <IPv4 subnet / mask>;\n}\nauth_mgt_networks-ipv6 {\n    <IPv6 subnet / prefix>;\n}\ndevice_mgt_address-ipv4 {\n    <IPv4 address>/32;\n}\ndevice_mgt_address-ipv6 {\n    <IPv6 address>/128;\n}\n[edit firewall]\nfamily inet {\n    filter protect_re-ipv4 {\n        term 1 {\n            from {\n                source-prefix-list auth_mgt_networks-ipv4;\n                destination-prefix-list device_mgt_address-ipv4;\n                <additional match criteria>;\n            }\n        }\n        <additional permit terms>\n        term default {\n            then {\n                log;\n                syslog;\n                discard;\n            }\n        }\n    }\n}\nfamily inet6 {\n    filter protect_re-ipv6 {\n        term 1 {\n            from {\n                source-prefix-list auth_mgt_networks-ipv6;\n                destination-prefix-list device_mgt_address-ipv6;\n                <additional match criteria>;\n            }\n        }\n        <additional permit terms>\n        term default {\n            then {\n                log;\n                syslog;\n                discard;\n            }\n        }\n    }\n}\n\nNote: Additional match criteria includes protocol (next-header for IPv6), source and destination ports, ICMP type and code, etc. When applied to the loopback interface, the filter affects identified traffic regardless of ingress interface. Ensure the filter addresses all traffic destined to the RE like routing protocols, ICMP messages, SSH and SCP traffic, SNMP, etc.\n\nVerify filters are applied to loopback, all L3 interfaces, or both. For example:\n[edit interfaces]\nlo0 {\n    unit 0 {\n        family inet {\n            filter {\n                input protect_re-ipv4;\n            }\n            address <IPv4 address>/32;\n        }\n        family inet6 {\n            filter {\n                input protect_re-ipv6;\n            }\n            address <IPv6 address>/32;\n        }\n    }\n}\nNote: Some Juniper devices support both monolithic filters and filter lists. Filter lists separate each term, or set of terms, into a separate filter that is applied sequentially to an interface. If using filter lists, the keywords \"input\" or \"output\" change to \"input-list\" or \"output-list\". Verify the final list item is a deny-all filter. The deny-all filter is created once per family and can be reused across multiple lists. For example:\n\ninput-list [ permit_mgt permit_routing_protocols default-deny ];\n\nIf the router is not configured with a receive-path filter to restrict traffic destined to itself, this is a finding.\n\nNote: If the platform does not support the receive path filter, verify that all layer 3 interfaces have an ingress firewall filter to control what packets are allowed to be destined to the router for processing.", "FixText": "Configure all routers with receive path filters to restrict traffic destined to the router.\n\nExample prefix lists for management networks and the device management address(es):\nset prefix-list auth_mgt_networks-ipv4 <IPv4 subnet / mask>\nset prefix-list auth_mgt_networks-ipv6 <IPv6 subnet / mask>\nset prefix-list device_mgt_address-ipv4 <IPv4 address>/32\nset prefix-list device_mgt_address-ipv6 <IPv6 address>/128\n\nExample firewall filters:\nset firewall family inet filter protect_re-ipv4 term 1 from source-prefix-list auth_mgt_networks-ipv4\nset firewall family inet filter protect_re-ipv4 term 1 from destination-prefix-list device_mgt_address-ipv4\nset firewall family inet filter protect_re-ipv4 term 1 from <additional match criteria>\nset firewall family inet filter protect_re-ipv4 term 1 then accept\nset firewall family inet filter protect_re-ipv4 term <additional permit terms>\nset firewall family inet filter protect_re-ipv4 term default then log\nset firewall family inet filter protect_re-ipv4 term default then syslog\nset firewall family inet filter protect_re-ipv4 term default then discard\n\nset firewall family inet6 filter protect_re-ipv6 term 1 from source-prefix-list auth_mgt_networks-ipv6\nset firewall family inet6 filter protect_re-ipv6 term 1 from destination-prefix-list device_mgt_address-ipv6\nset firewall family inet6 filter protect_re-ipv6 term 1 from <additional match criteria>\nset firewall family inet6 filter protect_re-ipv6 term 1 then accept\nset firewall family inet6 filter protect_re-ipv6 term <additional permit terms>\nset firewall family inet6 filter protect_re-ipv6 term default then log\nset firewall family inet filter protect_re-ipv6 term default then syslog\nset firewall family inet filter protect_re-ipv6 term default then discard\n\nExample application on loopback:\nset interfaces lo0 unit 0 family inet filter input protect_re-ipv4\nset interfaces lo0 unit 0 family inet address <IPv4 address>/32\nset interfaces lo0 unit 0 family inet6 filter input protect_re-ipv6\nset interfaces lo0 unit 0 family inet6 address <IPv6 address>/128", "CCI": "CCI-001097"}, {"VulnID": "V-254011", "RuleID": "SV-254011r844066_rule", "StigID": "JUEX-RT-000390", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000205-RTR-000002", "RuleTitle": "The Juniper router must be configured to drop all fragmented Internet Control Message Protocol (ICMP) packets destined to itself.", "Description": "<VulnDiscussion>Fragmented ICMP packets can be generated by hackers for DoS attacks such as Ping O' Death and Teardrop. It is imperative that all fragmented ICMP packets are dropped.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Fragmented ICMP packets can be generated by hackers for DoS attacks such as Ping O' Death and Teardrop. It is imperative that all fragmented ICMP packets are dropped.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the firewall filter for the router receive path. Firewall filters applied to the loopback interface affects traffic destined for the Route Engine (RE) regardless of ingress interface. Individual firewall filters are also supported on each ingress interface.\nNote: Verify the firewall filter applied to the loopback interface addresses all traffic destined for the RE (e.g., BGP, OSPF, etc.).\n\nVerify that it will drop all fragmented ICMP packets destined to itself. For example:\n[edit policy-options]\nprefix-list router-addresses-ipv4 {\n    <interface IPv4 address>/32;\n    <other router interface addresses>;\n}\n[edit firewall family inet]\nfilter protect_re {\n    term 1 {\n        from {\n            destination-prefix-list {\n                router-addresses-ipv4;\n            }\n            is-fragment;\n            protocol icmp;\n        }\n        then {\n            log;\n            syslog;\n            discard;\n        }\n    }\n    <additional terms for RE destined traffic>\n}\n[edit interfaces lo0 unit 0]\nfamily inet {\n    filter {\n        input protect_re;\n    }\n    address <IPv4 address>/32;\n}\n\nNote: Some Juniper devices support both monolithic filters and filter lists. Filter lists separate each term, or set of terms, into a separate filter that is applied sequentially to an interface. If using filter lists, the keywords \"input\" or \"output\" change to \"input-list\" or \"output-list\". Verify the final list item is a deny-all filter. The deny-all filter is created once per family and can be reused across multiple lists. For example:\n\ninput-list [ permit_mgt permit_routing_protocols default-deny ];\n\nIf the router is not configured with a receive-path filter to drop all fragmented ICMP packets, this is a finding.\n\nNote: If the platform does not support the receive path filter, verify that all layer 3 interfaces have an ingress filter to control what packets are allowed to be destined to the router for processing.", "FixText": "Ensure all routers have their receive path filter configured to drop all fragmented ICMP packets.\n\nset policy-options prefix-list router-addresses-ipv4 <interface IPv4 address>/32\nset firewall family inet filter protect_re term 1 from destination-prefix-list router-addresses-ipv4\nset firewall family inet filter protect_re term 1 from protocol icmp\nset firewall family inet filter protect_re term 1 from is-fragment\nset firewall family inet filter protect_re term 1 then log\nset firewall family inet filter protect_re term 1 then syslog\nset firewall family inet filter protect_re term 1 then discard\n<additional terms to account for all traffic destined for the RE>\n\nset interfaces lo0 unit 0 family inet filter input protect_re", "CCI": "CCI-001097"}, {"VulnID": "V-254012", "RuleID": "SV-254012r844069_rule", "StigID": "JUEX-RT-000400", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000205-RTR-000003", "RuleTitle": "The Juniper perimeter router must be configured to filter traffic destined to the enclave in accordance with the guidelines contained in DoD Instruction 8551.1.", "Description": "<VulnDiscussion>Vulnerability assessments must be reviewed by the System Administrator, and protocols must be approved by the Information Assurance (IA) staff before entering the enclave.\n\nStateless firewall filters are the first line of defense in a layered security approach. They permit authorized packets and deny unauthorized packets based on port or service type. They enhance the posture of the network by not allowing packets to reach a potential target within the security domain. The lists provided are highly susceptible ports and services that should be blocked or limited as much as possible without adversely affecting customer requirements. Auditing packets attempting to penetrate the network but that are stopped by a firewall filter will allow network administrators to broaden their protective ring and more tightly define the scope of operation.\n\nIf the perimeter is in a Deny-by-Default posture and what is allowed through the filter is in accordance with DoD Instruction 8551.1, and if the permit rule is explicitly defined with explicit ports and protocols allowed, then all requirements related to PPS being blocked would be satisfied.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Vulnerability assessments must be reviewed by the System Administrator, and protocols must be approved by the Information Assurance (IA) staff before entering the enclave.\n\nStateless firewall filters are the first line of defense in a layered security approach. They permit authorized packets and deny unauthorized packets based on port or service type. They enhance the posture of the network by not allowing packets to reach a potential target within the security domain. The lists provided are highly susceptible ports and services that should be blocked or limited as much as possible without adversely affecting customer requirements. Auditing packets attempting to penetrate the network but that are stopped by a firewall filter will allow network administrators to broaden their protective ring and more tightly define the scope of operation.\n\nIf the perimeter is in a Deny-by-Default posture and what is allowed through the filter is in accordance with DoD Instruction 8551.1, and if the permit rule is explicitly defined with explicit ports and protocols allowed, then all requirements related to PPS being blocked would be satisfied.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "This requirement is not applicable for the DODIN Backbone. \n\nReview the router configuration to verify that the ingress filter is in accordance with DoD 8551. For example, assuming TCP 80 and 443 are permitted inbound:\n[edit policy-options]\nprefix-list inside-addresses-ipv4 {\n    <interior IPv4 subnet / mask>;\n}\nprefix-list inside-addresses-ipv4 {\n    <interior IPv6 subnet / prefix>;\n}\n[edit firewall]\nfamily inet {\n    filter inbound-ipv4 {\n        term 1 {\n            from {\n                destination-prefix-list inside-addresses-ipv4;\n                protocol tcp;\n                destination-port [ 80 443 ];\n            }\n            then accept;\n        }\n        <other terms as required>\n        term default-deny {\n            then {\n                log;\n                syslog;\n                discard;\n            }\n        }\n    }\n}\nfamily inet6 {\n    filter inbound-ipv6 {\n        term 1 {\n            from {\n                destination-prefix-list inside-addresses-ipv6;\n                next-header tcp;\n                destination-port [ 80 443 ];\n            }\n            then accept;\n        }\n        <other terms as required>\n        term default-deny {\n            then {\n                log;\n                syslog;\n                discard;\n            }\n        }\n    }\n}\n\nIf the router does not filter traffic in accordance with the guidelines contained in DoD 8551, this is a finding.", "FixText": "This requirement is not applicable for the DODIN Backbone.\n\nConfigure the router to use ingress firewall filters to restrict traffic in accordance with the guidelines contained in DOD Instruction 8551.1 for all services and protocols required for operational commitments.\n\nset policy-options prefix-list inside-addresses-ipv4 <IPv4 subnet>/<mask>\n<additional subnets as required>\nset policy-options prefix-list inside-addresses-ipv6 <IPv6 subnet>/<prefix>\n<additional subnets as required>\n\nset firewall family inet filter inbound-ipv4 term 1 from destination-prefix-list inside-addresses-ipv4\nset firewall family inet filter inbound-ipv4 term 1 from protocol tcp\nset firewall family inet filter inbound-ipv4 term 1 from destination-port 80\nset firewall family inet filter inbound-ipv4 term 1 from destination-port 443\nset firewall family inet filter inbound-ipv4 term 1 then accept\n<additional terms as required>\nset firewall family inet filter inbound-ipv4 term default-deny then log\nset firewall family inet filter inbound-ipv4 term default-deny then syslog\nset firewall family inet filter inbound-ipv4 term default-deny then discard\n\nset firewall family inet6 filter inbound-ipv6 term 1 from destination-prefix-list inside-addresses-ipv6\nset firewall family inet6 filter inbound-ipv6 term 1 from next-header tcp\nset firewall family inet6 filter inbound-ipv6 term 1 from destination-port 80\nset firewall family inet6 filter inbound-ipv6 term 1 from destination-port 443\nset firewall family inet6 filter inbound-ipv6 term 1 then accept\nset firewall family inet6 filter inbound-ipv6 term default-deny then log\nset firewall family inet6 filter inbound-ipv6 term default-deny then syslog\nset firewall family inet6 filter inbound-ipv6 term default-deny then discard", "CCI": "CCI-001097"}, {"VulnID": "V-254013", "RuleID": "SV-254013r844072_rule", "StigID": "JUEX-RT-000410", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000205-RTR-000004", "RuleTitle": "The Juniper perimeter router must be configured to filter ingress traffic at the external interface on an inbound direction.", "Description": "<VulnDiscussion>Firewall filters are used to separate data traffic into that which it will route (permitted packets) and that which it will not route (denied packets). Secure configuration of routers makes use of firewall filters for restricting access to services on the router itself as well as for filtering traffic passing through the router. \n\nInbound versus Outbound: It should be noted that some operating systems default access lists are applied to the outbound queue. The more secure solution is to apply the access list to the inbound queue for three reasons:\n\n- The router can protect itself before damage is inflicted.\n- The input port is still known and can be filtered upon.\n- It is more efficient to filter packets before routing them.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Firewall filters are used to separate data traffic into that which it will route (permitted packets) and that which it will not route (denied packets). Secure configuration of routers makes use of firewall filters for restricting access to services on the router itself as well as for filtering traffic passing through the router. \n\nInbound versus Outbound: It should be noted that some operating systems default access lists are applied to the outbound queue. The more secure solution is to apply the access list to the inbound queue for three reasons:\n\n- The router can protect itself before damage is inflicted.\n- The input port is still known and can be filtered upon.\n- It is more efficient to filter packets before routing them.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "This requirement is not applicable for the DODIN Backbone.\n\nReview the router configuration to verify that the ingress firewall filter is bound to the external interface in an inbound direction.\n\n[edit interfaces]\n<external interface> {\n    unit <number> {\n        family inet {\n            filter {\n                input inbound-ipv4;\n            }\n        }\n        family inet6 {\n            filter {\n                input inbound-ipv6;\n            }\n        }\n    }\n}\n\nNote: Some Juniper devices support both monolithic filters and filter lists. Filter lists separate each term, or set of terms, into a separate filter that is applied sequentially to an interface. If using filter lists, the keywords \"input\" or \"output\" change to \"input-list\" or \"output-list\". Verify the final list item is a deny-all filter. The deny-all filter is created once per family and can be reused across multiple lists. For example:\n\ninput-list [ permit_mgt permit_routing_protocols default-deny ];\n\nIf the router is not configured to filter traffic entering the network at the external interface in an inbound direction, this is a finding.", "FixText": "This requirement is not applicable for the DODIN Backbone.\n\nBind the ingress firewall filter to the external interface (inbound).\n\nset interfaces <external interface name> unit <number> family inet filter input inbound-ipv4\nset interfaces <external interface name> unit <number> family inet6 filter input inbound-ipv6", "CCI": "CCI-001097"}, {"VulnID": "V-254014", "RuleID": "SV-254014r844075_rule", "StigID": "JUEX-RT-000420", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000205-RTR-000005", "RuleTitle": "The Juniper perimeter router must be configured to filter egress traffic at the internal interface on an inbound direction.", "Description": "<VulnDiscussion>Firewall filters are used to separate data traffic into that which it will route (permitted packets) and that which it will not route (denied packets). Secure configuration of routers makes use of firewall filters for restricting access to services on the router itself as well as for filtering traffic passing through the router. \n\nInbound versus Outbound: It should be noted that some operating systems default access lists are applied to the outbound queue. The more secure solution is to apply the access list to the inbound queue for three reasons:\n\n- The router can protect itself before damage is inflicted.\n- The input port is still known and can be filtered upon.\n- It is more efficient to filter packets before routing them.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Firewall filters are used to separate data traffic into that which it will route (permitted packets) and that which it will not route (denied packets). Secure configuration of routers makes use of firewall filters for restricting access to services on the router itself as well as for filtering traffic passing through the router. \n\nInbound versus Outbound: It should be noted that some operating systems default access lists are applied to the outbound queue. The more secure solution is to apply the access list to the inbound queue for three reasons:\n\n- The router can protect itself before damage is inflicted.\n- The input port is still known and can be filtered upon.\n- It is more efficient to filter packets before routing them.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "This requirement is not applicable for the DODIN Backbone. \n\nReview the router configuration to verify that the egress firewall filter is bound to the internal interface in an inbound direction. \n\n[edit interfaces]\n<internal interface> {\n    unit <number> {\n        family inet {\n            filter {\n                input outbound-ipv4;\n            }\n        }\n        family inet6 {\n            filter {\n                input outbound-ipv6;\n            }\n        }\n    }\n}\n\nNote: Some Juniper devices support both monolithic filters and filter lists. Filter lists separate each term, or set of terms, into a separate filter that is applied sequentially to an interface. If using filter lists, the keywords \"input\" or \"output' change to \"input-list\" or \"output-list\". Verify the final list item is a deny-all filter. The deny-all filter is created once per family and can be reused across multiple lists. For example:\n\ninput-list [ permit_mgt permit_routing_protocols default-deny ];\n\nIf the router is not configured to filter traffic leaving the network at the internal interface in an inbound direction, this is a finding.", "FixText": "This requirement is not applicable for the DODIN Backbone.\n\nConfigure an egress firewall filter bound to the internal interface in an inbound direction to filter traffic leaving the network.\n\nset interfaces <internal interface name> unit <number> family inet filter input outbound-ipv4\nset interfaces <internal interface name> unit <number> family inet6 filter input outbound-ipv6", "CCI": "CCI-001097"}, {"VulnID": "V-254015", "RuleID": "SV-254015r844078_rule", "StigID": "JUEX-RT-000430", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000205-RTR-000006", "RuleTitle": "The Juniper BGP router must be configured to reject outbound route advertisements for any prefixes belonging to the IP core.", "Description": "<VulnDiscussion>Outbound route advertisements belonging to the core can result in traffic either looping or being black holed, or at a minimum, using a nonoptimized path.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Outbound route advertisements belonging to the core can result in traffic either looping or being black holed, or at a minimum, using a nonoptimized path.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the BGP router configuration to verify that there is a filter defined to block route advertisements for prefixes that belong to the IP core. \n\nVerify an appropriate prefix-list containing the IP core prefixes is referenced in a policy-statement. For example:\n[edit policy-options]\nprefix-list ip-core-ipv4 {\n    192.0.2.0/24;\n}\nprefix-list ip-core-ipv6 {\n    2001:db8:2::/64;\n}\npolicy-statement advertise-bgp-prefix {\n    term exclude-ipv4-core {\n        from {\n            prefix-list ip-core-ipv4;\n        }\n        then reject;\n    }\n    term exclude-ipv6-core {\n        from {\n            prefix-list ip-core-ipv6;\n        }\n        then reject;\n    }\n    term default {\n        then accept;\n    }\n}\n\nThe prefix filter must be referenced outbound on the appropriate BGP neighbor statements. For example:\n[edit protocols]\nbgp {\n    group eBGP {\n        type external;\n        export advertise-bgp-prefix;\n        neighbor 192.0.2.11 {\n            export advertise-bgp-prefix;\n        }\n    }\n    export advertise-bgp-prefix;\n}\n\nNote: Juniper routers support global, group, and neighbor export statements with the more specific definition taking precedence. Ensure more specific export policies (e.g., neighbor and group) do not reverse higher level export statements.\n\nIf the router is not configured to reject outbound route advertisements that belong to the IP core, this is a finding.", "FixText": "Configure all eBGP routers to filter outbound route advertisements belonging to the IP core.\n\nFor example:\nset policy-options prefix-list ip-core-ipv4 192.0.2.0/24\nset policy-options prefix-list ip-core-ipv6 2001:db8:2::/64\nset policy-options policy-statement advertise-bgp-prefix term exclude-ipv4-core from prefix-list ip-core-ipv4\nset policy-options policy-statement advertise-bgp-prefix term exclude-ipv4-core then reject\nset policy-options policy-statement advertise-bgp-prefix term exclude-ipv6-core from prefix-list ip-core-ipv6\nset policy-options policy-statement advertise-bgp-prefix term exclude-ipv6-core then reject\nset policy-options policy-statement advertise-bgp-prefix term default then accept\n\nset protocols bgp group eBGP type external\nset protocols bgp group eBGP export advertise-bgp-prefix\nset protocols bgp group eBGP neighbor 192.0.2.11 export advertise-bgp-prefix\nset protocols bgp export advertise-bgp-prefix", "CCI": "CCI-001097"}, {"VulnID": "V-254016", "RuleID": "SV-254016r844081_rule", "StigID": "JUEX-RT-000440", "Severity": "high", "Cat": "CAT I", "Classification": "", "GroupTitle": "SRG-NET-000205-RTR-000007", "RuleTitle": "The Juniper PE router must be configured to block any traffic that is destined to IP core infrastructure.", "Description": "<VulnDiscussion>IP/MPLS networks providing VPN and transit services must provide, at the least, the same level of protection against denial-of-service (DoS) attacks and intrusions as layer 2 networks. Although the IP core network elements are hidden, security should never rely entirely on obscurity.\n\nIP addresses can be guessed. Core network elements must not be accessible from any external host. Protecting the core from any attack is vital for the integrity and privacy of customer traffic as well as the availability of transit services. A compromise of the IP core can result in an outage or, at a minimum, nonoptimized forwarding of customer traffic. Protecting the core from an outside attack also prevents attackers from using the core to attack any customer. Hence, it is imperative that all routers at the edge deny traffic destined to any address belonging to the IP core infrastructure.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "IP/MPLS networks providing VPN and transit services must provide, at the least, the same level of protection against denial-of-service (DoS) attacks and intrusions as layer 2 networks. Although the IP core network elements are hidden, security should never rely entirely on obscurity.\n\nIP addresses can be guessed. Core network elements must not be accessible from any external host. Protecting the core from any attack is vital for the integrity and privacy of customer traffic as well as the availability of transit services. A compromise of the IP core can result in an outage or, at a minimum, nonoptimized forwarding of customer traffic. Protecting the core from an outside attack also prevents attackers from using the core to attack any customer. Hence, it is imperative that all routers at the edge deny traffic destined to any address belonging to the IP core infrastructure.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the PE router configuration to verify that an ingress firewall filter is applied to all CE-facing interfaces. \n\nVerify that the ingress firewall filter rejects and logs packets destined to the IP core address block. For example:\n[edit policy-options]\nprefix-list ipv4-core {\n    192.0.2.0/24;\n}\nprefix-list ipv6-core {\n    2001:db8:2::/64;\n}\n\n[edit firewall]\nfamily inet {\n    filter deny-core-ipv4 {\n        term 1 {\n            from {\n                destination-prefix-list {\n                    ipv4-core;\n                }\n            }\n            then {\n                log;\n                syslog;\n                discard;\n            }\n        }\n        term default {\n            then accept;\n        }\n    }\n}\nfamily inet6 {\n    filter deny-core-ipv6 {\n        term 1 {\n            from {\n                destination-prefix-list {\n                    ipv6-core;\n                }\n            }\n            then {\n                log;\n                syslog;\n                discard;\n            }\n        }\n        term default {\n            then accept;\n        }\n    }\n}\n\nVerify the firewall filter is applied to CE-facing interfaces:\n[edit interfaces]\nge-0/0/0 {\n    unit 0 {\n        family inet {\n            filter {\n                input deny-core-ipv4;   \n            }                           \n            address <IPv4 address/mask>;         \n        }                               \n        family inet6 {                  \n            filter {                    \n                input deny-core-ipv6;   \n            }                           \n            address <IPv6 address/prefix>;     \n        }                               \n    }                                   \n}\n\nNote: Some Juniper devices support both monolithic filters and filter lists. Filter lists separate each term, or set of terms, into a separate filter that is applied sequentially to an interface. If using filter lists, the keywords \"input\" or \"output\" change to \"input-list\" or \"output-list\". Verify the final list item is a deny-all filter. The deny-all filter is created once per family and can be reused across multiple lists. For example:\n\ninput-list [ permit_mgt permit_routing_protocols default-deny ];\n\nIf the PE router is not configured to block any traffic with a destination address assigned to the IP core infrastructure, this is a finding.\n\nNote: Internet Control Message Protocol (ICMP) echo requests and traceroutes will be allowed to the edge from external adjacent peers.", "FixText": "Configure protection for the IP core to be implemented at the edges by blocking any traffic with a destination address assigned to the IP core infrastructure.\n\nConfigure appropriate prefix lists and firewall filters. For example:\nset policy-options prefix-list ipv4-core 192.0.2.0/24\nset policy-options prefix-list ipv6-core 2001:db8:2::/64\n\nset firewall family inet filter deny-core-ipv4 term 1 from destination-prefix-list ipv4-core\nset firewall family inet filter deny-core-ipv4 term 1 then log\nset firewall family inet filter deny-core-ipv4 term 1 then syslog\nset firewall family inet filter deny-core-ipv4 term 1 then discard\nset firewall family inet filter deny-core-ipv4 term default then accept\nset firewall family inet6 filter deny-core-ipv6 term 1 from destination-prefix-list ipv6-core\nset firewall family inet6 filter deny-core-ipv6 term 1 then log\nset firewall family inet6 filter deny-core-ipv6 term 1 then syslog\nset firewall family inet6 filter deny-core-ipv6 term 1 then discard\nset firewall family inet6 filter deny-core-ipv6 term default then accept\n\nConfigure the appropriate interfaces with the firewall filter. For example:\n[edit interfaces]\nset interfaces ge-0/0/0 unit 0 family inet filter input deny-core-ipv4\nset interfaces ge-0/0/0 unit 0 family inet address <IPv4 address/mask>\nset interfaces ge-0/0/0 unit 0 family inet6 filter input deny-core-ipv6\nset interfaces ge-0/0/0 unit 0 family inet6 address <IPv6 address/prefix>", "CCI": "CCI-001097"}, {"VulnID": "V-254017", "RuleID": "SV-254017r844084_rule", "StigID": "JUEX-RT-000450", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000205-RTR-000008", "RuleTitle": "The Juniper PE router must be configured with Unicast Reverse Path Forwarding (uRPF) loose mode, or a firewall filter, enabled on all CE-facing interfaces.", "Description": "<VulnDiscussion>The uRPF feature, and ingress firewall filters, are defenses against spoofing and denial-of-service (DoS) attacks by verifying if the source address of any ingress packet is reachable. To mitigate attacks that rely on forged source addresses, all provider edge routers must enable uRPF or ingress firewall filters to guarantee that all packets received from a CE router contain source addresses that are in the route table.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "The uRPF feature, and ingress firewall filters, are defenses against spoofing and denial-of-service (DoS) attacks by verifying if the source address of any ingress packet is reachable. To mitigate attacks that rely on forged source addresses, all provider edge routers must enable uRPF or ingress firewall filters to guarantee that all packets received from a CE router contain source addresses that are in the route table.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the PE router configuration to determine if uRPF loose mode is enabled on all CE-facing interfaces.\n\n[edit interfaces]\nge-0/0/12 {\n    unit 0 {\n        family inet {\n            rpf-check {                 \n                mode loose;             \n            }                           \n            address <IPv4 address>/<mask>;         \n        }                               \n        family inet6 {                  \n            rpf-check {                 \n                mode loose;             \n            }                           \n            address <IPv6 address>/<prefix>;     \n        }                               \n    }                                   \n}\n\nFor those platforms that do not support uRPF, verify an ingress stateless firewall filter is applied to all CE-facing interfaces. Because the prefixes assigned to each customer is known, verify each customer's prefix list contains only their prefixes and is referenced in an appropriate firewall filter. For example:\n[edit policy-options]\nprefix-list cust1-prefixes-ipv4 {\n    192.0.2.0/24;\n}\nprefix-list cust1-prefixes-ipv6 {\n    2001:db8:2::/64;\n}\n[edit firewall]\nfamily inet {\n    filter cust1-prefixes-ipv4 {\n        term 1 {\n            from {\n                source-prefix-list {\n                    cust1-prefixes-ipv4;\n                }\n            }\n            then accept;\n        }\n        term default {\n            then {\n                log;\n                syslog;\n                discard;\n            }\n        }\n    }\n}\nfamily inet6 {\n    filter cust1-prefixes-ipv6 {\n        term 1 {\n            from {\n                source-prefix-list {\n                    cust1-prefixes-ipv6;\n                }\n            }\n            then accept;\n        }\n        term default {\n            then {\n                log;\n                syslog;\n                discard;\n            }\n        }\n    }\n}\n\nVerify the appropriate filter is applied to each CE-facing interface. For example:\n[edit interfaces]\nge-0/0/0 {\n    unit 0 {\n        family inet {\n            filter {\n                input cust1-prefixes-ipv4;\n            }                           \n            address <IPv4 address>/<mask>;       \n        }                               \n        family inet6 {                  \n            filter {                    \n                input cust1-prefixes-ipv6;\n            }                           \n            address <IPv6 address>/<prefix>;     \n        }                               \n    }                                   \n}\n\nNote: Some Juniper devices support both monolithic filters and filter lists. Filter lists separate each term, or set of terms, into a separate filter that is applied sequentially to an interface. If using filter lists, the keywords \"input\" or \"output\" change to \"input-list\" or \"output-list\". Verify the final list item is a deny-all filter. The deny-all filter is created once per family and can be reused across multiple lists. For example:\n\ninput-list [ permit_mgt permit_routing_protocols default-deny ];\n\nIf uRPF or an ingress firewall filter is not enabled on all CE-facing interfaces, this is a finding.", "FixText": "Enable uRPF loose mode or apply an ingress filter on all CE-facing interfaces.\n\nFor example, configure uRPF on CE-facing interfaces:\nset interfaces ge-0/0/0 unit 0 family inet rpf-check mode loose\nset interfaces ge-0/0/0 unit 0 family inet6 rpf-check mode loose\n\nFor example, configure firewall filter and apply to CE-facing interfaces (only for devices that do not support uRPF):\nset policy-options prefix-list cust1-prefixes-ipv4 192.0.2.0/24\nset policy-options prefix-list cust1-prefixes-ipv6 2001:db8:2::/64\n\nset firewall family inet filter cust1-prefixes-ipv4 term 1 from source-prefix-list cust1-prefixes-ipv4\nset firewall family inet filter cust1-prefixes-ipv4 term 1 then accept\nset firewall family inet filter cust1-prefixes-ipv4 term default then log\nset firewall family inet filter cust1-prefixes-ipv4 term default then syslog\nset firewall family inet filter cust1-prefixes-ipv4 term default then discard\nset firewall family inet6 filter cust1-prefixes-ipv6 term 1 from source-prefix-list cust1-prefixes-ipv6\nset firewall family inet6 filter cust1-prefixes-ipv6 term 1 then accept\nset firewall family inet6 filter cust1-prefixes-ipv6 term default then log\nset firewall family inet6 filter cust1-prefixes-ipv6 term default then syslog\nset firewall family inet6 filter cust1-prefixes-ipv6 term default then discard\n\nset interfaces ge-0/0/0 unit 0 family inet filter input cust1-prefixes-ipv4\nset interfaces ge-0/0/0 unit 0 family inet6 filter input cust1-prefixes-ipv6", "CCI": "CCI-001097"}, {"VulnID": "V-254018", "RuleID": "SV-254018r844087_rule", "StigID": "JUEX-RT-000460", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000205-RTR-000009", "RuleTitle": "The Juniper out-of-band management (OOBM) gateway must be configured to transport management traffic to the Network Operations Center (NOC) via dedicated circuit, MPLS/VPN service, or IPsec tunnel.", "Description": "<VulnDiscussion>Using dedicated paths, the OOBM backbone connects the OOBM gateway routers located at the edge of the managed network and at the NOC. Dedicated links can be deployed using provisioned circuits or MPLS layer 2 and layer 3 VPN services or implementing a secured path with gateway-to-gateway IPsec tunnels. The tunnel mode ensures that the management traffic will be logically separated from any other traffic traversing the same path.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Using dedicated paths, the OOBM backbone connects the OOBM gateway routers located at the edge of the managed network and at the NOC. Dedicated links can be deployed using provisioned circuits or MPLS layer 2 and layer 3 VPN services or implementing a secured path with gateway-to-gateway IPsec tunnels. The tunnel mode ensures that the management traffic will be logically separated from any other traffic traversing the same path.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "This requirement is not applicable for the DODIN Backbone.\n\nReview the network topology diagram to determine connectivity between the managed network and the NOC.\n\nReview the OOBM gateway router configuration to validate the path and interface that the management traffic traverses. MPLS-based VPN (L2 or L3) must have a working provider MPLS network including routing (for reachability) and Label Switched Paths (LSP). Additionally, the PE router will maintain separation for each CE router in individual routing instances. If using a dedicated circuit, verify the interface transporting NOC traffic is properly connected.\n\nCE routers will not peer with PE routers when using L2 VPN. Verify the CE router peers with the appropriate CE router, generally with an IGP (e.g., OSPF), and not the PE router.\n[edit interfaces]\n<exterior interface> {\n    unit <number> {\n        family inet {\n            address <IPv4 address>/<mask>;\n        }\n    }    \n}\nlo0 {\n    unit 0 {\n        family inet {\n            address <IPv4 address>/32;\n        }\n    }\n}\n[edit protocols ospf]\narea <number> {\n    interface lo0.0;\n    interface <exterior interface>.<number>;\n}\n\nCE routers will peer with PE routers, generally with eBGP, when using L3 VPN. Verify the CE router advertises the appropriate interior networks to the PE.\n[edit interfaces]\n<exterior interface>:0 {\n    unit <number> {\n        family inet {\n            address <IPv4 address>/<mask>;\n        }\n    }\n}\nlo0 {\n    family inet {\n        address <IPv4 address>/<mask>;\n    }\n}\n[edit routing-options]\nrouter-id <ID>;\nautonomous-system <AS #>;\n[edit protocols bgp]\ngroup PE1 {\n    type external;\n    export <policy name>;\n    peer-as <peer AS #>;\n    neighbor <neighbor address>; << Reachable from the exterior interface\n}\n[edit policy-options policy-statement <statement name>]\nterm 1 {\n    from {\n        protocol <protocol>; << Include the appropriate protocol (e.g., 'direct' for directly connected routes)\n        route-filter <subnet>/<mask> <match condition>; << Include only interior routes that must be advertised to the L3 VPN\n    }\n    then accept;\n}\n\nNote: The policy-statement is applied as an export filter, using a route-filter to limit the exported routes. For example, assume 192.0.2.0/24 is the advertised route, and that it is directly connected. Using \"protocol direct\" will export all directly-connected routes, but no routes learned via an IGP (e.g., OSPF). Using \"route-filter 192.0.2.0/24 orlonger then accept\" will accept that /24 (or longer mask) and deny all others. Verify the match condition is appropriate for the desired advertisement.\n\nIf management traffic is not transported between the managed network and the NOC via dedicated circuit, MPLS/VPN service, or IPsec tunnel, this is a finding.", "FixText": "This requirement is not applicable for the DODIN Backbone.\n\nCE peering to CE (L2 VPN):\nset interfaces <exterior interface> unit <number> family inet address <IPv4 address>/<mask>\nset interfaces lo0 unit 0 family inet address <IPv4 address>/32\nset protocols ospf area <number> interface lo0.0\nset protocols ospf area <number> interface <exterior interface>\n\nCE peering to PE (L3 VPN):\nset system host-name ce1\nset interfaces <exterior interface>:<number> description \"Link from CE1 to PE1 for L3vpn\"\nset interfaces <exterior interface>:<number> unit <number> family inet address <IPv4 address>/<mask>\nset interfaces lo0 unit 0 family inet address <IPv4 address>/32\nset routing-options router-id <ID>\nset routing-options autonomous-system <AS #>\nset protocols bgp group <name> type external\nset protocols bgp group <name> export <policy name>\nset protocols bgp group <name> peer-as <Peer AS #>\nset protocols bgp group <name> neighbor <neighbor address>\nset policy-options policy-statement <policy name> term 1 from protocol <protocol>\nset policy-options policy-statement <policy name> term 1 from route-filter <subnet> <match criterion>\nset policy-options policy-statement <policy name> term 1 then accept\n\nEnsure that a dedicated circuit, MPLS/VPN service, or IPsec tunnel is deployed to transport management traffic between the managed network and the NOC.", "CCI": "CCI-001097"}, {"VulnID": "V-254019", "RuleID": "SV-254019r844090_rule", "StigID": "JUEX-RT-000470", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000205-RTR-000010", "RuleTitle": "The Juniper out-of-band management (OOBM) gateway router must be configured to forward only authorized management traffic to the Network Operations Center (NOC).", "Description": "<VulnDiscussion>The OOBM network is an IP network used exclusively for the transport of OAM&P data from the network being managed to the OSS components located at the NOC. Its design provides connectivity to each managed network device, enabling network management traffic to flow between the managed network elements and the NOC. This allows the use of paths separate from those used by the managed network.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "The OOBM network is an IP network used exclusively for the transport of OAM&P data from the network being managed to the OSS components located at the NOC. Its design provides connectivity to each managed network device, enabling network management traffic to flow between the managed network elements and the NOC. This allows the use of paths separate from those used by the managed network.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "This requirement is not applicable for the DODIN Backbone.\n\nReview the network topology diagram to determine connectivity between the managed network and the NOC.\n\nReview the OOBM gateway router configuration to validate the path that the management traffic traverses.\n\nVerify that only management traffic is forwarded through the OOBM interface or IPsec tunnel. Verify the destination address is configured either via a prefix-list or directly assigned addresses in each firewall filter term match condition.\n\n[edit policy-options]\nprefix-list NOC-ipv4 {\n    <IPv4 address>/<mask>;\n}\nprefix-list NOC-ipv6 {\n    <IPv6 address>/<prefix>;\n}\n[edit firewall]\nfamily inet {\n    filter permit-NOC-ipv4 {\n        term 1 {\n            from {\n                destination-prefix-list {\n                    NOC-ipv4;\n                }\n                protocol <protocol>;\n                destination-port [ <port 1> <port 2> ];\n            }\n            then accept;\n        }\n        <additional permitted traffic terms>\n        term default {\n            then {\n                log;\n                syslog;\n                discard;\n            }\n        }\n    }\n}\nfamily inet6 {\n    filter permit-NOC-ipv6 {\n        term 1 {\n            from {\n                destination-prefix-list {\n                    NOC-ipv6;\n                }\n                next-header <protocol>;\n                destination-port [ <port 1> <port 2> ];\n            }\n            then accept;\n        }\n        <additional permitted traffic terms>\n        term default {\n            then {\n                log;\n                syslog;\n                discard;\n            }\n        }\n    }\n}\n[edit interfaces]\n<OOBM interface> {\n    unit <number> {\n        family inet {\n            filter {\n                output NOC-ipv4;   \n            }                           \n            address <IPv4 address>/<mask>;         \n        }                               \n        family inet6 {                  \n            filter {                    \n                output NOC-ipv6;   \n            }                           \n            address <IPv6 address>/<prefix>;     \n        }                               \n    }                                   \n}\n\nNote: Some Juniper devices support both monolithic filters and filter lists. Filter lists separate each term, or set of terms, into a separate filter that is applied sequentially to an interface. If using filter lists, the keywords \"input\" or \"output\" change to \"input-list\" or \"output-list\". Verify the final list item is a deny-all filter. The deny-all filter is created once per family and can be reused across multiple lists. For example:\n\ninput-list [ permit_mgt permit_routing_protocols default-deny ];\n\nIf using an IPsec tunnel, verify the route with the tunnel interface as the next-hop destination.\n[edit routing-options]\nrib inet6.0 {\n    static {\n        route <NOC IPv6 network> next-hop <(tunnel interface | NOC IPv6 tunnel endpoint address)>;\n    }\n}\nstatic { \n    route <NOC IPv4 network> next-hop <(tunnel interface | NOC IPv6 tunnel endpoint address)>;\n}\n\nIf traffic other than authorized management traffic is permitted through the OOBM interface or IPsec tunnel, this is a finding.", "FixText": "Configure appropriate prefix lists and firewall filters. For example:\nset policy-options prefix-list NOC-ipv4 <IPv4 network>/<mask>\nset policy-options prefix-list NOC-ipv6 <IPv6 network>/<prefix>\n\nset firewall family inet filter permit-NOC-ipv4 term 1 from destination-prefix-list NOC-ipv4\nset firewall family inet filter permit-NOC-ipv4 term 1 from protocol <protocol>\nset firewall family inet filter permit-NOC-ipv4 term 1 from destination-port [ <port 1> <port 2> ]\nset firewall family inet filter permit-NOC-ipv4 term 1 then accept\n<additional permit terms>\nset firewall family inet filter permit-NOC-ipv4 term default then log\nset firewall family inet filter permit-NOC-ipv4 term default then syslog\nset firewall family inet filter permit-NOC-ipv4 term default then discard\n\nset firewall family inet6 filter permit-NOC-ipv6 term 1 from destination-prefix-list NOC-ipv6\nset firewall family inet6 filter permit-NOC-ipv6 term 1 from next-header <protocol>\nset firewall family inet6 filter permit-NOC-ipv6 term 1 from destination-port [ <port 1> <port 2> ]\nset firewall family inet6 filter permit-NOC-ipv6 term 1 then accept\n<additional permit terms>\nset firewall family inet6 filter permit-NOC-ipv6 term default then log\nset firewall family inet6 filter permit-NOC-ipv6 term default then syslog\nset firewall family inet6 filter permit-NOC-ipv6 term default then discard\n\nApply firewall filter to OOBM interface:\nset interfaces <OOBM interface> unit <number> family inet filter output NOC-ipv4\nset interfaces <OOBM interface> unit <number> family inet address <IPv4 address>/<mask>\nset interfaces <OOBM interface> unit <number> family inet6 filter output NOC-ipv6\nset interfaces <OOBM interface> unit <number> family inet6 address <IPv6 address>/<prefix>\n\nIf using IPsec tunnel:\nset rib inet6.0 static route <NOC IPv6 network> next-hop <(tunnel interface | NOC IPv6 tunnel endpoint address)>\nset static route <NOC IPv4 network> next-hop <(tunnel interface | NOC IPv4 tunnel endpoint address)>", "CCI": "CCI-001097"}, {"VulnID": "V-254020", "RuleID": "SV-254020r844093_rule", "StigID": "JUEX-RT-000480", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000205-RTR-000011", "RuleTitle": "The Juniper out-of-band management (OOBM) gateway router must be configured to block any traffic destined to itself that is not sourced from the OOBM network or the NOC.", "Description": "<VulnDiscussion>If the gateway router is not a dedicated device for the OOBM network, several safeguards must be implemented for containment of management and production traffic boundaries. It is imperative that hosts from the managed network are not able to access the OOBM gateway router.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "If the gateway router is not a dedicated device for the OOBM network, several safeguards must be implemented for containment of management and production traffic boundaries. It is imperative that hosts from the managed network are not able to access the OOBM gateway router.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "This requirement is not applicable for the DODIN Backbone.\n\nReview the firewall filter for the router receive path.\n\nVerify that only traffic sourced from the OOBM network or the NOC is allowed to access the router.\n\n[edit policy-options]\nprefix-list OOBM-ipv4 {\n    <IPv4 address>/<mask>;\n}\nprefix-list OOBM-ipv6 {\n    <IPv6 address>/<prefix>;\n}\nprefix-list router-ipv4 {\n    <IPv4 address>/<mask>;\n}\nprefix-list router-ipv6 {\n    <IPv6 address>/<prefix>;\n}\n\n[edit firewall]\nfamily inet {\n    filter protect-re-ipv4 {\n        term 1 {\n            from {\n                source-prefix-list OOBM-ipv4;\n                destination-prefix-list router-ipv4;\n            }\n            then accept;\n        }\n        <additional terms for authorized traffic like OSPF or BGP>\n        term default {\n            then {\n                log;\n                syslog;\n                discard;\n            }\n        }\n    }\n}\nfamily inet6 {\n    filter protect-re-ipv6 {\n        term 1 {\n            from {\n                source-prefix-list OOBM-ipv6;\n                destination-prefix-list router-ipv6;\n            }\n            then accept {\n        }\n        <additional terms for authorized traffic like OSPF or BGP>\n        term default {\n            then {\n                log;\n                syslog;\n                discard;\n            }\n        }\n    }\n}\n\nVerify the firewall filter is applied to the loopback interface.\n[edit interfaces]\nlo0 {\n    unit 0 {\n        family inet {\n            filter {\n                input protect-re-ipv4;   \n            }                           \n            address <IPv4 address/mask>;         \n        }                               \n        family inet6 {                  \n            filter {                    \n                input protect-re-ipv6;   \n            }                           \n            address <IPv6 address/prefix>;     \n        }                               \n    }                                   \n}\n\nNote: Some Juniper devices support both monolithic filters and filter lists. Filter lists separate each term, or set of terms, into a separate filter that is applied sequentially to an interface. If using filter lists, the keywords \"input\" or \"output\" change to \"input-list\" or \"output-list\". Verify the final list item is a deny-all filter. The deny-all filter is created once per family and can be reused across multiple lists. For example:\n\ninput-list [ permit_mgt permit_routing_protocols default-deny ];\n\nIf the router does not block any traffic destined to itself that is not sourced from the OOBM network or the NOC, this is a finding.\n\nNote: If the platform does not support the receive path filter, verify that all non-OOBM interfaces have an ingress firewall filter to restrict access to that interface address or any of the router\u2019s loopback addresses to only traffic sourced from the management network. An exception would be to allow packets destined to these interfaces used for troubleshooting, such as ping and traceroute.", "FixText": "This requirement is not applicable for the DODIN Backbone.\n\nEnsure that traffic from the managed network is not able to access the OOBM gateway router using either receive path or interface firewall filters.\n\nset policy-options prefix-list OOBM-ipv4 <IPv4 address>/<mask>\nset policy-options prefix-list OOBM-ipv6 <IPv6 address>/<prefix>\n\nset firewall family inet filter protect-re-ipv4 term 1 from source-prefix-list OOBM-ipv4\nset firewall family inet filter protect-re-ipv4 term 1 from destination-prefix-list router-ipv4\nset firewall family inet filter protect-re-ipv4 term 1 then accept\n<additional terms for authorized traffic like OSPF or BGP>\nset firewall family inet filter protect-re-ipv4 term default then log\nset firewall family inet filter protect-re-ipv4 term default then syslog\nset firewall family inet filter protect-re-ipv4 term default then discard\n\nset firewall family inet filter protect-re-ipv6 term 1 from source-prefix-list OOBM-ipv6\nset firewall family inet filter protect-re-ipv6 term 1 from destination-prefix-list router-ipv6\nset firewall family inet filter protect-re-ipv6 term 1 then accept\n<additional terms for authorized traffic like OSPF or BGP>\nset firewall family inet filter protect-re-ipv6 term default then log\nset firewall family inet filter protect-re-ipv6 term default then syslog\nset firewall family inet filter protect-re-ipv6 term default then discard\n\nset interfaces lo0 unit 0 family inet filter input protect-re-ipv4\nset interfaces lo0 unit 0 family inet address <IPv4 address>/<mask>\nset interfaces lo0 unit 0 family inet6 filter input protect-re-ipv6\nset interfaces lo0 unit 0 family inet6 address <IPv6 address>/<prefix>", "CCI": "CCI-001097"}, {"VulnID": "V-254021", "RuleID": "SV-254021r844096_rule", "StigID": "JUEX-RT-000490", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000205-RTR-000012", "RuleTitle": "The Juniper router must be configured to only permit management traffic that ingresses and egresses the OOBM interface.", "Description": "<VulnDiscussion>The OOBM access switch will connect to the management interface of the managed network elements. The management interface can be a true OOBM interface or a standard interface functioning as the management interface. In either case, the management interface of the managed network element will be directly connected to the OOBM network.\n\nAn OOBM interface does not forward transit traffic, thereby providing complete separation of production and management traffic. Because all management traffic is immediately forwarded into the management network, it is not exposed to possible tampering. The separation also ensures that congestion or failures in the managed network do not affect the management of the device. If the device does not have an OOBM interface, the interface functioning as the management interface must be configured so that management traffic does not leak into the managed network and that production traffic does not leak into the management network.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "The OOBM access switch will connect to the management interface of the managed network elements. The management interface can be a true OOBM interface or a standard interface functioning as the management interface. In either case, the management interface of the managed network element will be directly connected to the OOBM network.\n\nAn OOBM interface does not forward transit traffic, thereby providing complete separation of production and management traffic. Because all management traffic is immediately forwarded into the management network, it is not exposed to possible tampering. The separation also ensures that congestion or failures in the managed network do not affect the management of the device. If the device does not have an OOBM interface, the interface functioning as the management interface must be configured so that management traffic does not leak into the managed network and that production traffic does not leak into the management network.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Verify that the managed interface has an inbound and outbound firewall filter configured. In this example, the firewall filter uses prefix-lists rather than directly embedding the addresses in the filter term. Verify that the ingress filter only allows management, IGP, and ICMP traffic.\n\nCaveat: If the management interface is a true OOBM interface, this requirement is not applicable.\n\n[edit policy-options]\nprefix-list OOBM-ipv4 {\n    192.0.2.0/24;\n}\nprefix-list OOBM-ipv6 {\n    2001:db8:2::/64;\n}\n[edit firewall]\nfamily inet {\n    filter inbound-OOBM-ipv4 {\n        term 1 {\n            from {\n                source-prefix-list {\n                    OOBM-ipv4;\n                }\n                protocol [ icmp ospf ];\n            }\n            then accept;\n        }\n        term 2 {\n            from {\n                source-prefix-list {\n                    OOBM-ipv4;\n                }\n                protocol tcp;\n                destination-port ssh;\n            }\n            then accept;\n        }\n        <additional permit terms>\n        term default {\n            then {\n                log;\n                syslog;\n                discard;\n            }\n        }\n    }\n    filter outbound-OOBM-ipv4 {\n        term 1 {\n            from {\n                destination-prefix-list {\n                    OOBM-ipv4;\n                }\n                protocol [ icmp ospf ];\n            }\n            then accept;\n        }\n        term 2 {\n            from {\n                destination-prefix-list {\n                    OOBM-ipv4;\n                }\n                protocol tcp;\n                source-port ssh;\n            }\n            then accept;\n        }\n        <additional permit terms>\n        term default {\n            then {\n                log;\n                syslog;\n                discard;\n            }\n        }\n    }\n}\nfamily inet6 {\n    filter inbound-OOBM-ipv6 {\n        term 1 {\n            from {\n                source-prefix-list {\n                    OOBM-ipv6;\n                }\n                next-header [ icmp6 ospf ];\n            }\n            then accept;\n        }\n        term 2 {\n            from {\n                source-prefix-list {\n                    OOBM-ipv6;\n                }\n                next-header tcp;\n                destination-port ssh;\n            }\n            then accept;\n        }\n        <additional permit terms>\n        term default {\n            then {\n                log;\n                syslog;\n                discard;\n            }\n        }\n    }\n    filter outbound-OOBM-ipv6 {\n        term 1 {\n            from {\n                destination-prefix-list {\n                    OOBM-ipv6;\n                }\n                next-header [ icmp6 ospf ];\n            }\n            then accept;\n        }\n        term 2 {\n            from {\n                destination-prefix-list {\n                    OOBM-ipv6;\n                }\n                next-header tcp;\n                source-port ssh;\n            }\n            then accept;\n        }\n        <additional permit terms>\n        term default {\n            then {\n                log;\n                syslog;\n                discard;\n            }\n        }\n    }\n}\n\nIf no true OOBM interface is available, verify the OOBM firewall filter is applied to the revenue interface configured for OOBM use.\n\n<revenue OOBM interface> {\n    unit <number> {\n        family inet {\n            filter {\n                input inbound-OOBM-ipv4;\n                output outbound-OOBM-ipv4;\n            }\n            address <IPv4 address>/<mask>;\n        }\n        family inet6 {\n            filter {\n                input inbound-OOBM-ipv6;\n                output outbound-OOBM-ipv6;\n            }\n            address <IPv6 address>/<prefix>;\n        }\n    }\n}\n\nNote: Some Juniper devices support both monolithic filters and filter lists. Filter lists separate each term, or set of terms, into a separate filter that is applied sequentially to an interface. If using filter lists, the keywords \"input\" or \"output\" change to \"input-list\" or \"output-list\". Verify the final list item is a deny-all filter. The deny-all filter is created once per family and can be reused across multiple lists. For example:\n\ninput-list [ permit_mgt permit_routing_protocols default-deny ];\n\nIf the router does not restrict traffic that ingresses and egresses the management interface, this is a finding.", "FixText": "If the management interface is a routed interface, it must be configured with both an ingress and egress ACL. \n\nset policy-options prefix-list OOBM-ipv4 192.0.2.0/24\nset policy-options prefix-list OOBM-ipv6 2001:db8:2::/64\n\nset firewall family inet filter inbound-OOBM-ipv4 term 1 from source-prefix-list OOBM-ipv4\nset firewall family inet filter inbound-OOBM-ipv4 term 1 from protocol icmp\nset firewall family inet filter inbound-OOBM-ipv4 term 1 from protocol ospf\nset firewall family inet filter inbound-OOBM-ipv4 term 1 then accept\nset firewall family inet filter inbound-OOBM-ipv4 term 2 from source-prefix-list OOBM-ipv4\nset firewall family inet filter inbound-OOBM-ipv4 term 2 from protocol tcp\nset firewall family inet filter inbound-OOBM-ipv4 term 2 from destination-port ssh\nset firewall family inet filter inbound-OOBM-ipv4 term 2 then accept\n<additional accept terms>\nset firewall family inet filter inbound-OOBM-ipv4 term default then log\nset firewall family inet filter inbound-OOBM-ipv4 term default then syslog\nset firewall family inet filter inbound-OOBM-ipv4 term default then discard\n\nset firewall family inet filter outbound-OOBM-ipv4 term 1 from destination-prefix-list OOBM-ipv4\nset firewall family inet filter outbound-OOBM-ipv4 term 1 from protocol icmp\nset firewall family inet filter outbound-OOBM-ipv4 term 1 from protocol ospf\nset firewall family inet filter outbound-OOBM-ipv4 term 1 then accept\nset firewall family inet filter outbound-OOBM-ipv4 term 2 from destination-prefix-list OOBM-ipv4\nset firewall family inet filter outbound-OOBM-ipv4 term 2 from protocol tcp\nset firewall family inet filter outbound-OOBM-ipv4 term 2 from source-port ssh\nset firewall family inet filter outbound-OOBM-ipv4 term 2 then accept\n<additional accept terms>\nset firewall family inet filter outbound-OOBM-ipv4 term default then log\nset firewall family inet filter outbound-OOBM-ipv4 term default then syslog\nset firewall family inet filter outbound-OOBM-ipv4 term default then discard\n\nset firewall family inet filter inbound-OOBM-ipv6 term 1 from source-prefix-list OOBM-ipv6\nset firewall family inet filter inbound-OOBM-ipv6 term 1 from next-header icmp6\nset firewall family inet filter inbound-OOBM-ipv6 term 1 from next-header ospf\nset firewall family inet filter inbound-OOBM-ipv6 term 1 then accept\nset firewall family inet filter inbound-OOBM-ipv6 term 2 from source-prefix-list OOBM-ipv6\nset firewall family inet filter inbound-OOBM-ipv6 term 2 from next-header tcp\nset firewall family inet filter inbound-OOBM-ipv6 term 2 from destination-port ssh\nset firewall family inet filter inbound-OOBM-ipv6 term 2 then accept\n<additional accept terms>\nset firewall family inet filter inbound-OOBM-ipv6 term default then log\nset firewall family inet filter inbound-OOBM-ipv6 term default then syslog\nset firewall family inet filter inbound-OOBM-ipv6 term default then discard\n\nset firewall family inet6 filter outbound-OOBM-ipv6 term 1 from destination-prefix-list OOBM-ipv6\nset firewall family inet6 filter outbound-OOBM-ipv6 term 1 from next-header icmp6\nset firewall family inet6 filter outbound-OOBM-ipv6 term 1 from next-header ospf\nset firewall family inet6 filter outbound-OOBM-ipv6 term 1 then accept\nset firewall family inet6 filter outbound-OOBM-ipv6 term 2 from destination-prefix-list OOBM-ipv6\nset firewall family inet6 filter outbound-OOBM-ipv6 term 2 from next-header tcp\nset firewall family inet6 filter outbound-OOBM-ipv6 term 2 from source-port ssh\nset firewall family inet6 filter outbound-OOBM-ipv6 term 2 then accept\n<additional accept terms>\nset firewall family inet6 filter outbound-OOBM-ipv6 term default then log\nset firewall family inet6 filter outbound-OOBM-ipv6 term default then syslog\nset firewall family inet6 filter outbound-OOBM-ipv6 term default then discard\n\nset interfaces <revenue OOBM> unit <number> family inet filter input inbound-OOBM-ipv4\nset interfaces <revenue OOBM> unit <number> family inet filter output outbound-OOBM-ipv4\nset interfaces <revenue OOBM> unit <number> family inet <IPv4 address>/<mask>\nset interfaces <revenue OOBM> unit <number> family inet6 filter input inbound-OOBM-ipv6\nset interfaces <revenue OOBM> unit <number> family inet6 filter output outbound-OOBM-ipv6\nset interfaces <revenue OOBM> unit <number> family inet6 <IPv6 address>/<prefix>", "CCI": "CCI-001097"}, {"VulnID": "V-254022", "RuleID": "SV-254022r844099_rule", "StigID": "JUEX-RT-000500", "Severity": "high", "Cat": "CAT I", "Classification": "", "GroupTitle": "SRG-NET-000205-RTR-000014", "RuleTitle": "The Juniper perimeter router must be configured to restrict it from accepting outbound IP packets that contain an illegitimate address in the source address field via egress filter or by enabling Unicast Reverse Path Forwarding (uRPF).", "Description": "<VulnDiscussion>A compromised host in an enclave can be used by a malicious platform to launch cyberattacks on third parties. This is a common practice in \"botnets\", which are a collection of compromised computers using malware to attack other computers or networks. DDoS attacks frequently leverage IP source address spoofing to send packets to multiple hosts that in turn will then send return traffic to the hosts with the IP addresses that were forged. This can generate significant amounts of traffic. Therefore, protection measures to counteract IP source address spoofing must be taken. When uRPF is enabled in strict mode, the packet must be received on the interface that the device would use to forward the return packet; thereby mitigating IP source address spoofing.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "A compromised host in an enclave can be used by a malicious platform to launch cyberattacks on third parties. This is a common practice in \"botnets\", which are a collection of compromised computers using malware to attack other computers or networks. DDoS attacks frequently leverage IP source address spoofing to send packets to multiple hosts that in turn will then send return traffic to the hosts with the IP addresses that were forged. This can generate significant amounts of traffic. Therefore, protection measures to counteract IP source address spoofing must be taken. When uRPF is enabled in strict mode, the packet must be received on the interface that the device would use to forward the return packet; thereby mitigating IP source address spoofing.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "This requirement is not applicable for the DODIN Backbone.\n\nReview the router configuration to verify uRPF or an egress filter has been configured on all internal interfaces to restrict the router from accepting outbound IP packets that contain an illegitimate address in the source address field.\n\n[edit interfaces]\n<internal interface name> {\n    unit <number> {\n        family inet {\n            rpf-check;\n            address <IPv4 address>/<mask>;         \n        }                               \n        family inet6 {                  \n            rpf-check;\n            address <IPv6 address>/<prefix>;     \n        }                               \n    }                                   \n}\n\nFor those platforms that do not support uRPF, verify an egress stateless firewall filter is applied to all internal interfaces. In this example, the egress (from the enclave) filter is applied in the input direction of internal interfaces to prevent the router from accepting packets sourced from any address except the internal subnets. For example:\n[edit policy-options]\nprefix-list internal-prefixes-ipv4 {\n    192.0.2.0/24;\n}\nprefix-list internal-prefixes-ipv6 {\n    2001:0:2::/64;\n}\n[edit firewall]\nfamily inet {\n    filter internal-inbound-ipv4 {\n        term 1 {\n            from {\n                source-prefix-list {\n                    internal-prefixes-ipv4;\n                }\n            }\n            then accept;\n        }\n        term default {\n            then {\n                log;\n                syslog;\n                discard;\n            }\n        }\n    }\n}\nfamily inet6 {\n    filter internal-inbound-ipv6 {\n        term 1 {\n            from {\n                source-prefix-list {\n                    internal-prefixes-ipv6;\n                }\n            }\n            then accept;\n        }\n        term default {\n            then {\n                log;\n                syslog;\n                discard;\n            }\n        }\n    }\n}\n\nVerify the appropriate filter is applied to each internal interface. For example:\n[edit interfaces]\n<internal interface name> {\n    unit <number> {\n        family inet {\n            filter {\n                input internal-inbound-ipv4;\n            }                           \n            address <IPv4 address>/<mask>;       \n        }                               \n        family inet6 {                  \n            filter {                    \n                input internal-inbound-ipv6;\n            }                           \n            address <IPv6 address>/<prefix>;     \n        }                               \n    }                                   \n}\n\nNote: Some Juniper devices support both monolithic filters and filter lists. Filter lists separate each term, or set of terms, into a separate filter that is applied sequentially to an interface. If using filter lists, the keywords \"input\" or \"output\" change to \"input-list\" or \"output-list\". Verify the final list item is a deny-all filter. The deny-all filter is created once per family and can be reused across multiple lists. For example:\n\ninput-list [ permit_mgt permit_routing_protocols default-deny ];\n\nIf uRPF or an egress filter to restrict the router from accepting outbound IP packets that contain an illegitimate address in the source address field has not been configured on all internal interfaces, this is a finding.", "FixText": "This requirement is not applicable for the DODIN Backbone.\n\nConfigure the router to ensure that an egress filter or uRPF is configured to restrict the router from accepting any outbound IP packet that contains an external IP address in the source field.\n\nset interfaces <internal interface name> unit <number> family inet rpf-check\nset interfaces <internal interface name> unit <number> family inet6 rpf-check\n\nFor example, configure firewall filter and apply to internal interfaces:\nset policy-options prefix-list internal-prefixes-ipv4 192.0.2.0/24\nset policy-options prefix-list internal-prefixes-ipv6 2001:0:2::/64\n\nset firewall family inet filter internal-inbound-ipv4 term 1 from source-prefix-list internal-prefixes-ipv4\nset firewall family inet filter internal-inbound-ipv4 term 1 then accept\nset firewall family inet filter internal-inbound-ipv4 term default then log\nset firewall family inet filter internal-inbound-ipv4 term default then syslog\nset firewall family inet filter internal-inbound-ipv4 term default then discard\nset firewall family inet6 filter internal-inbound-ipv6 term 1 from source-prefix-list internal-prefixes-ipv6\nset firewall family inet6 filter internal-inbound-ipv6 term 1 then accept\nset firewall family inet6 filter internal-inbound-ipv6 term default then log\nset firewall family inet6 filter internal-inbound-ipv6 term default then syslog\nset firewall family inet6 filter internal-inbound-ipv6 term default then discard\n\nset interfaces ge-0/0/0 unit 0 family inet filter input internal-inbound-ipv4\nset interfaces ge-0/0/0 unit 0 family inet6 filter input internal-inbound-ipv6", "CCI": "CCI-001094"}, {"VulnID": "V-254023", "RuleID": "SV-254023r844102_rule", "StigID": "JUEX-RT-000510", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000205-RTR-000015", "RuleTitle": "The Juniper perimeter router must be configured to block all packets with any IP options.", "Description": "<VulnDiscussion>Packets with IP options are not fast switched and must be punted to the route engine (RE). Hackers who initiate denial-of-service (DoS) attacks on routers commonly send large streams of packets with IP options. Dropping the packets with IP options reduces the load of IP options packets on the router. The end result is a reduction in the effects of the DoS attack on the router and on downstream routers.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Packets with IP options are not fast switched and must be punted to the route engine (RE). Hackers who initiate denial-of-service (DoS) attacks on routers commonly send large streams of packets with IP options. Dropping the packets with IP options reduces the load of IP options packets on the router. The end result is a reduction in the effects of the DoS attack on the router and on downstream routers.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "This requirement is not applicable for the DODIN Backbone.\n\nReview the router configuration to determine if it will block all packets with IP options.\n\n[edit firewall family inet]\nfilter <name> {\n    term 1 {\n        from {\n            ip-options any;\n        }\n        then {\n            log;\n            syslog;\n            discard;\n        }\n    }\n    <additional accept terms>\n    term default {\n        then {\n            log;\n            syslog;\n            discard;\n        }\n    }\n}\n[edit interfaces]\n<interface name> {\n    unit <number> {\n        family inet {\n            filter input <filter name>;\n            address <IPv4 address>/<mask>;\n        }\n    }\n}\n\nNote: Some Juniper devices support both monolithic filters and filter lists. Filter lists separate each term, or set of terms, into a separate filter that is applied sequentially to an interface. If using filter lists, the keywords \"input\" or \"output\" change to \"input-list\" or \"output-list\". Verify the final list item is a deny-all filter. The deny-all filter is created once per family and can be reused across multiple lists. For example:\n\ninput-list [ permit_mgt permit_routing_protocols default-deny ];\n\nIf the router is not configured to drop all packets with IP options, this is a finding.", "FixText": "This requirement is not applicable for the DODIN Backbone.\n\nConfigure the router to drop all packets with IP options.\n\nset firewall family inet filter <filter name> term 1 from ip-options any\nset firewall family inet filter <filter name> term 1 then log\nset firewall family inet filter <filter name> term 1 then syslog\nset firewall family inet filter <filter name> term 1 then discard\n<additional accept terms>\nset firewall family inet filter default term 1 then log\nset firewall family inet filter default term 1 then syslog\nset firewall family inet filter default term 1 then discard\n\nset interfaces <interface name> unit <number> family inet filter input <filter name>\nset interfaces <interface name> unit <number> family inet address <IPv4 address>/<mask>", "CCI": "CCI-002403"}, {"VulnID": "V-254024", "RuleID": "SV-254024r844105_rule", "StigID": "JUEX-RT-000520", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000205-RTR-000016", "RuleTitle": "The Juniper PE router must be configured to ignore or block all packets with any IP options.", "Description": "<VulnDiscussion>Packets with IP options are not fast switched and, therefore, must be punted to the route engine (RE). Hackers who initiate denial-of-service (DoS) attacks on routers commonly send large streams of packets with IP options. Dropping the packets with IP options reduces the load of IP options packets on the router. The end result is a reduction in the effects of the DoS attack on the router and on downstream routers.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Packets with IP options are not fast switched and, therefore, must be punted to the route engine (RE). Hackers who initiate denial-of-service (DoS) attacks on routers commonly send large streams of packets with IP options. Dropping the packets with IP options reduces the load of IP options packets on the router. The end result is a reduction in the effects of the DoS attack on the router and on downstream routers.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the router configuration to determine if it will block all packets with IP options.\n\n[edit firewall family inet]\nfilter <name> {\n    term 1 {\n        from {\n            ip-options any;\n        }\n        then {\n            log;\n            syslog;\n            discard;\n        }\n    }\n    <additional accept terms>\n    term default {\n        then {\n            log;\n            syslog;\n            discard;\n        }\n    }\n}\n[edit interfaces]\n<interface name> {\n    unit <number> {\n        family inet {\n            filter input <filter name>;\n            address <IPv4 address>/<mask>;\n        }\n    }\n}\n\nNote: Some Juniper devices support both monolithic filters and filter lists. Filter lists separate each term, or set of terms, into a separate filter that is applied sequentially to an interface. If using filter lists, the keywords \"input\" or \"output\" change to \"input-list\" or \"output-list\". Verify the final list item is a deny-all filter. The deny-all filter is created once per family and can be reused across multiple lists. For example:\n\ninput-list [ permit_mgt permit_routing_protocols default-deny ];\n\nIf the router is not configured to drop all packets with IP options, this is a finding.", "FixText": "Configure the router to drop all packets with IP options.\n\nset firewall family inet filter <filter name> term 1 from ip-options any\nset firewall family inet filter <filter name> term 1 then log\nset firewall family inet filter <filter name> term 1 then syslog\nset firewall family inet filter <filter name> term 1 then discard\n<additional accept terms>\nset firewall family inet filter default term 1 then log\nset firewall family inet filter default term 1 then syslog\nset firewall family inet filter default term 1 then discard\n\nset interfaces <interface name> unit <number> family inet filter input <filter name>\nset interfaces <interface name> unit <number> family inet address <IPv4 address>/<mask>", "CCI": "CCI-002403"}, {"VulnID": "V-254025", "RuleID": "SV-254025r844108_rule", "StigID": "JUEX-RT-000530", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000230-RTR-000001", "RuleTitle": "The Juniper router must be configured to implement message authentication for all control plane protocols.", "Description": "<VulnDiscussion>A rogue router could send a fictitious routing update to convince a site's perimeter router to send traffic to an incorrect or even a rogue destination. This diverted traffic could be analyzed to learn confidential information about the site's network or used to disrupt the network's ability to communicate with other networks. This is known as a \"traffic attraction attack\" and is prevented by configuring neighbor router authentication for routing updates.\n\nThis requirement applies to all IPv4 and IPv6 protocols that are used to exchange routing or packet forwarding information; this includes all Interior Gateway Protocols (such as OSPF, EIGRP, and IS-IS) and Exterior Gateway Protocols (such as BGP), MPLS-related protocols (such as LDP), and multicast-related protocols.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "A rogue router could send a fictitious routing update to convince a site's perimeter router to send traffic to an incorrect or even a rogue destination. This diverted traffic could be analyzed to learn confidential information about the site's network or used to disrupt the network's ability to communicate with other networks. This is known as a \"traffic attraction attack\" and is prevented by configuring neighbor router authentication for routing updates.\n\nThis requirement applies to all IPv4 and IPv6 protocols that are used to exchange routing or packet forwarding information; this includes all Interior Gateway Protocols (such as OSPF, EIGRP, and IS-IS) and Exterior Gateway Protocols (such as BGP), MPLS-related protocols (such as LDP), and multicast-related protocols.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the router configuration.\n\nFor every protocol that affects the routing or forwarding tables (where information is exchanged between neighbors), verify that neighbor router authentication is enabled.\n\n[edit security ipsec]\nsecurity-association <sa name> {\n    manual {\n        direction bidirectional {\n            protocol esp;\n            spi <SPI value>;\n            authentication {\n                algorithm hmac-sha-256-128;\n                key ascii-text \"$8$aes256-gcm$hmac-sha2-256$100$SpJ/ERRFEsc$y1Wqf1zM3d3xI+ZVB9WzTw$lgM06LJZN3FcVbTaSkDz4g$bZVi57MkUWg\"; ## SECRET-DATA\n            }\n        }\n    }\n}\n[edit protocols]\nbgp {\n    group <group name> {\n        type external;\n        local-as <local AS number>;\n        neighbor <neighbor 1 address> {\n            authentication-key \"$8$aes256-gcm$hmac-sha2-256$100$cFQ99Gy83Og$SCMVXvnfna7/cZqH9fCECQ$bCVokm+es94xFJONmbKFNA$4561Uc/r\"; ## SECRET-DATA\n        }\n        neighbor <neighbor 2 address> {\n            ipsec-sa <SA name>;\n        }\n    }\n}\n\nNote: Juniper BGP routers support either an MD5 key, rotating MD5 keys, or an IPsec security association (SA). Verify the PSK for each MD5 and SA is different between all neighbors.\nospf {\n    area <area number> {\n        interface <interface name>.<logical unit> {\n            authentication {\n                md5 1 key \"$8$aes256-gcm$hmac-sha2-256$100$hvt9Fpk6EEU$I2FKFJNrdKHpp1xesMB0aA$l9BsHxOYO4+B8f7erRj8Hw$A9PYzx53Ius\"; ## SECRET-DATA\n            }\n        }\n        interface <interface name>.<logical unit> {\n            interface-type p2p;\n            ipsec-sa <SA name>;\n        }                               \n    }\n}\nNote: Juniper OSPF routers support either an MD5 key or an IPsec SA.\nospf3 {\n    area <area number> {\n        interface <interface name>.<logical unit> {\n            ipsec-sa <SA name>;\n        }\n    }\n}\nNote: Juniper OSPFv3 routers only support IPsec SA.\n\nIf authentication is not enabled, this is a finding.", "FixText": "Configure authentication to be enabled for every protocol that affects the routing or forwarding tables.\n\nset security ipsec security-association <sa name> manual direction bidirectional protocol esp\nset security ipsec security-association <sa name> manual direction bidirectional spi <SPI value>\nset security ipsec security-association <sa name> manual direction bidirectional authentication algorithm hmac-sha-256-128\nset security ipsec security-association <sa name> manual direction bidirectional authentication key ascii-text <PSK value>\n\nset protocols bgp group <group name> type external\nset protocols bgp group <group name> local-as <local AS number>\nset protocols bgp group <group name> neighbor <neighbor 1 address> authentication-key <PSK value>\nset protocols bgp group <group name> neighbor <neighbor 1 address> ipsec-sa <SA name>\n\nset protocols ospf area 0.0.0.1 interface <interface name>.<logical unit> authentication md5 1 key <PSK value>\nset protocols ospf area 0.0.0.1 interface <interface name>.<logical unit> interface-type p2p\nset protocols ospf area 0.0.0.1 interface <interface name>.<logical unit> ipsec-sa <SA name>", "CCI": "CCI-000366,CCI-002205"}, {"VulnID": "V-254026", "RuleID": "SV-254026r844111_rule", "StigID": "JUEX-RT-000540", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000230-RTR-000002", "RuleTitle": "The Juniper BGP router must be configured to use a unique key for each autonomous system (AS) that it peers with.", "Description": "<VulnDiscussion>If the same keys are used between eBGP neighbors, the chance of a hacker compromising any of the BGP sessions increases. It is possible that a malicious user exists in one autonomous system who would know the key used for the eBGP session. This user would then be able to hijack BGP sessions with other trusted neighbors.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "If the same keys are used between eBGP neighbors, the chance of a hacker compromising any of the BGP sessions increases. It is possible that a malicious user exists in one autonomous system who would know the key used for the eBGP session. This user would then be able to hijack BGP sessions with other trusted neighbors.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Interview the ISSM and router administrator to determine if unique keys are being used. \n\n[edit security ipsec]\nsecurity-association <sa name> {\n    manual {\n        direction bidirectional {\n            protocol esp;\n            spi <SPI value>;\n            authentication {\n                algorithm hmac-sha-256-128;\n                key ascii-text \"$8$aes256-gcm$hmac-sha2-256$100$SpJ/ERRFEsc$y1Wqf1zM3d3xI+ZVB9WzTw$lgM06LJZN3FcVbTaSkDz4g$bZVi57MkUWg\"; ## SECRET-DATA\n            }\n        }\n    }\n}\n[edit protocols bgp]\ngroup <group name> {\n    type external;\n    local-as <local AS number>;\n    neighbor <neighbor 1 address> {\n        authentication-key \"$8$aes256-gcm$hmac-sha2-256$100$cFQ99Gy83Og$SCMVXvnfna7/cZqH9fCECQ$bCVokm+es94xFJONmbKFNA$4561Uc/r\"; ## SECRET-DATA\n    }\n    neighbor <neighbor 2 address> {\n        ipsec-sa <sa name>;\n    }\n}\n\nNote: Juniper BGP routers support either an MD5 key, rotating MD5 keys, or an IPsec security association (SA). Verify the PSK for each MD5 and SA is different between all neighbors.\n\nIf unique keys are not being used, this is a finding.", "FixText": "Configure all eBGP routers with unique keys for each eBGP neighbor that it peers with.\n\nset security ipsec security-association <sa name> manual direction bidirectional protocol esp\nset security ipsec security-association <sa name> manual direction bidirectional spi <SPI value>\nset security ipsec security-association <sa name> manual direction bidirectional authentication algorithm hmac-sha-256-128\nset security ipsec security-association <sa name> manual direction bidirectional authentication key ascii-text <PSK value>\n\nset protocols bgp group <group name> type external\nset protocols bgp group <group name> local-as <local AS number>\nset protocols bgp group <group name> neighbor <neighbor 1 address> authentication-key <PSK value>\nset protocols bgp group <group name> neighbor <neighbor 2 address> ipsec-sa test", "CCI": "CCI-000366,CCI-002205"}, {"VulnID": "V-254027", "RuleID": "SV-254027r844114_rule", "StigID": "JUEX-RT-000550", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000230-RTR-000003", "RuleTitle": "The Juniper router must be configured to use keys with a duration not exceeding 180 days for authenticating routing protocol messages.", "Description": "<VulnDiscussion>If the keys used for routing protocol authentication are guessed, the malicious user could create havoc within the network by advertising incorrect routes and redirecting traffic. Some routing protocols allow the use of key chains for authentication. A key chain is a set of keys that is used in succession, with each having a lifetime of no more than 180 days. Changing the keys frequently reduces the risk of them eventually being guessed.\n\nKeys cannot be used during time periods for which they are not activated. If a time period occurs during which no key is activated, neighbor authentication cannot occur, and therefore routing updates will fail. Therefore, ensure that for a given key chain, key activation times overlap to avoid any period of time during which no key is activated.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "If the keys used for routing protocol authentication are guessed, the malicious user could create havoc within the network by advertising incorrect routes and redirecting traffic. Some routing protocols allow the use of key chains for authentication. A key chain is a set of keys that is used in succession, with each having a lifetime of no more than 180 days. Changing the keys frequently reduces the risk of them eventually being guessed.\n\nKeys cannot be used during time periods for which they are not activated. If a time period occurs during which no key is activated, neighbor authentication cannot occur, and therefore routing updates will fail. Therefore, ensure that for a given key chain, key activation times overlap to avoid any period of time during which no key is activated.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "This requirement is not applicable for the DODIN Backbone.\n\nFor each authenticated routing protocol session, review the configured key expiration dates.\n[edit security]\nauthentication-key-chains {\n    key-chain <name> {\n        key 1 {\n            secret \"$9$vNbM7Vg4ZjkPJGn/AtOB7-d\"; ## SECRET-DATA\n            start-time \"2021-1-1.00:00:00 -0700\";\n            algorithm md5;\n        }\n        key 2 {\n            secret \"$9$MAQL7VgoGqmTwYmTz3tpWLxNwY4aZjk.\"; ## SECRET-DATA\n            start-time \"2021-5-31.00:00:00 -0700\";\n            algorithm md5;\n        }\n    }\n}\n[edit protocols]\nbgp {\n    group eBGP {\n        authentication-key-chain <name>;\n        neighbor 1.2.3.4 {\n            authentication-key-chain <name>;\n        }\n    }\n    authentication-key-chain <name>;\n}\n\nNote: BGP supports authentication globally, at the group level, and individually for each neighbor. The most specific authentication configuration is applied.\nospf {\n    area 0.0.0.2 {\n        interface ge-0/0/0.0 {\n            authentication {\n                md5 0 key \"$9$vG08xd24Zk.5bs.5QFAtM8X7bsgoJDHq\" start-time \"2021-1-1.00:00:00 -0700\"; ## SECRET-DATA\n                md5 1 key \"$9$m5z6p0IreW9AeWLxwsP5QF9AuO1hyl\" start-time \"2021-5-31.00:00:00 -0700\"; ## SECRET-DATA\n            }\n        }\n    }                                   \n}\n\nIf any key has a lifetime of more than 180 days, this is a finding.", "FixText": "This requirement is not applicable for the DODIN Backbone.\n\nFor each authenticated routing protocol session, configure each key to have a lifetime of no more than 180 days.\n\nset security authentication-key-chains key-chain <name> key <number-1> secret <key value>\nset security authentication-key-chains key-chain <name> key <number-1> start-time <YYYY-MM-DD.HH:MM>\nset security authentication-key-chains key-chain <name> key <number-1> algorithm md5\nset security authentication-key-chains key-chain <name> key <number-2> secret <key value>\nset security authentication-key-chains key-chain <name> key <number-2> start-time <YYYY-MM-DD.HH:MM>\nset security authentication-key-chains key-chain <name> key <number-2> algorithm md5\n\nset protocols bgp group <name> authentication-key-chain <name>\nset protocols bgp group <name> neighbor <neighbor address> authentication-key-chain <name>\nset protocols bgp authentication-key-chain <name>\n\nset protocols ospf area <area number> interface <interface name>.<logical unit> authentication md5 <number> key <key value>\nset protocols ospf area <area number> interface <interface name>.<logical unit> authentication md5 <number> start-time <YYYY-MM-DD.HH:MM>\nset protocols ospf area <area number> interface <interface name>.<logical unit> authentication md5 <number> key <key value>\nset protocols ospf area <area number> interface <interface name>.<logical unit> authentication md5 <number> start-time <YYYY-MM-DD.HH:MM>", "CCI": "CCI-000366,CCI-002205"}, {"VulnID": "V-254028", "RuleID": "SV-254028r844260_rule", "StigID": "JUEX-RT-000560", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000343-RTR-000001", "RuleTitle": "The router providing MPLS L2VPN services must be configured to authenticate targeted LDP sessions used to exchange VC information using a FIPS-approved message authentication code algorithm.", "Description": "<VulnDiscussion>Label Distribution Protocol (LDP) provides the signaling required for setting up and tearing down pseudowires (virtual circuits used to transport layer 2 frames) across an MPLS IP core network. Using a targeted LDP session, each PE router advertises a virtual circuit label mapping that is used as part of the label stack imposed on the frames by the ingress PE router during packet forwarding. Authentication provides protection against spoofed TCP segments that can be introduced into the LDP sessions.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Label Distribution Protocol (LDP) provides the signaling required for setting up and tearing down pseudowires (virtual circuits used to transport layer 2 frames) across an MPLS IP core network. Using a targeted LDP session, each PE router advertises a virtual circuit label mapping that is used as part of the label stack imposed on the frames by the ingress PE router during packet forwarding. Authentication provides protection against spoofed TCP segments that can be introduced into the LDP sessions.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the router configuration to determine if LDP messages are being authenticated for the targeted LDP sessions.\n\n[edit protocols]\nldp {\n    interface <interface 1 name>.<logical unit>;\n    interface <interface 2 name>.<logical unit>;\n    session <Session destination address> {\n        authentication-algorithm <aes-128-cmac-96|hmac-sha-1-96>;\n        authentication-key-chain <name>;\n    }\n}\n\nIf authentication is not being used for the LDP sessions using a FIPS-approved message authentication code algorithm, this is a finding.", "FixText": "Implement authentication for all targeted LDP sessions using a FIPS-approved message authentication code algorithm.\n\nset protocols ldp interface <interface 1 name>.<logical unit>\nset protocols ldp interface <interface 2 name>.<logical unit>\nset protocols ldp session <Session destination address> authentication-algorithm <aes-128-cmac-96|hmac-sha-1-96>\nset protocols ldp session <Session destination address> authentication-key-chain <name>", "CCI": "CCI-001958"}, {"VulnID": "V-254029", "RuleID": "SV-254029r844120_rule", "StigID": "JUEX-RT-000570", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000343-RTR-000002", "RuleTitle": "The Juniper Multicast Source Discovery Protocol (MSDP) router must be configured to authenticate all received MSDP packets.", "Description": "<VulnDiscussion>MSDP peering with customer network routers presents additional risks to the core, whether from a rogue or misconfigured MSDP-enabled router. MSDP password authentication is used to validate each segment sent on the TCP connection between MSDP peers, protecting the MSDP session against the threat of spoofed packets being injected into the TCP connection stream.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "MSDP peering with customer network routers presents additional risks to the core, whether from a rogue or misconfigured MSDP-enabled router. MSDP password authentication is used to validate each segment sent on the TCP connection between MSDP peers, protecting the MSDP session against the threat of spoofed packets being injected into the TCP connection stream.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the router configuration to determine if received MSDP packets are authenticated.\n\n[edit protocols]\nmsdp {\n    active-source-limit {\n        maximum <1..1000000>;\n        threshold <1..1000000>;\n        log-warning <percent to log warning>;\n    }\n    <additional configuration>\n    peer <address> {\n        authentication-key \"hashed PSK\"; ## SECRET-DATA\n    }\n}\n\nIf the router does not require MSDP authentication, this is a finding.", "FixText": "Ensure all MSDP packets received by an MSDP router are authenticated.\n\nset protocols msdp active-source-limit maximum <1..1000000>\nset protocols msdp active-source-limit threshold <1..1000000>\nset protocols msdp active-source-limit log-warning <percent to log warning>\n<additional configuration>\nset protocols msdp peer <address> authentication-key <PSK>", "CCI": "CCI-001958"}, {"VulnID": "V-254030", "RuleID": "SV-254030r844123_rule", "StigID": "JUEX-RT-000580", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000362-RTR-000109", "RuleTitle": "The Juniper router must not be configured to have any zero-touch deployment feature enabled when connected to an operational network.", "Description": "<VulnDiscussion>Network devices configured via a zero-touch deployment or auto-loading feature can have their startup configuration or image pushed to the device for installation via TFTP or Remote Copy (rcp). Loading an image or configuration file from the network is taking a security risk because the file could be intercepted by an attacker who could corrupt the file, resulting in a denial of service.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Network devices configured via a zero-touch deployment or auto-loading feature can have their startup configuration or image pushed to the device for installation via TFTP or Remote Copy (rcp). Loading an image or configuration file from the network is taking a security risk because the file could be intercepted by an attacker who could corrupt the file, resulting in a denial of service.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the device configuration to determine if a configuration auto-loading or zero-touch deployment feature is enabled. Verify the Juniper router is not configured with the factory default configuration. The Zero Touch Provisioning (ZTP) feature requires the factory default configuration. Juniper ZTP leverages Dynamic Host Configuration Protocol (DHCP) options to provide not only the interface address, but also the location of the upgrade image and configuration file. Interfaces configured for DHCP will not attempt to establish a ZTP session simply because DHCP is enabled but, instead, also require a factory default configuration. Therefore, if DHCP is authorized, removing the following [edit system] options, setting a root password, and committing will prevent the device from attempting ZTP.\n\nVerify the following are removed. \n[edit system]\n:\n:\nauto-configuration; << Delete this command.\nphone-home { << Delete this stanza.\n    server <server URL>;\n    rfc-compliant;\n}\n\nIf a configuration auto-loading feature or zero-touch deployment feature is enabled, this is a finding.\n\nNote: Auto-configuration or zero-touch deployment features can be enabled when the router is offline for the purpose of image loading or building out the configuration. In addition, this would not be applicable to the provisioning of virtual routers via a software-defined network (SDN) orchestration system.", "FixText": "Disable all configuration auto-loading or zero-touch deployment features.\n\ndelete system auto-configuration\ndelete system phone-home\nNote: The \"phone-home\" command is hidden and must be fully typed into the CLI (autocomplete will not work).\n\nConfigure the router with a nondefault configuration and commit.", "CCI": "CCI-002385"}, {"VulnID": "V-254031", "RuleID": "SV-254031r844126_rule", "StigID": "JUEX-RT-000590", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000362-RTR-000110", "RuleTitle": "The Juniper router must be configured to protect against or limit the effects of denial-of-service (DoS) attacks by employing control plane protection.", "Description": "<VulnDiscussion>The Routing Engine (RE) is critical to all network operations because it is the component used to build all forwarding paths for the data plane via control plane processes. It is also instrumental with ongoing network management functions that keep the routers and links available for providing network services. Any disruption to the RE or the control and management planes can result in mission-critical network outages.\n\nA DoS attack targeting the RE can result in excessive CPU and memory utilization. To maintain network stability and RE security, the router must be able to handle specific control plane and management plane traffic that is destined to the RE. In the past, one method of filtering was to use ingress filters on forwarding interfaces to filter both forwarding path and receiving path traffic. However, this method does not scale well as the number of interfaces grows and the size of the ingress filters grows. Control plane policing increases the security of routers and multilayer switches by protecting the RE from unnecessary or malicious traffic. Filtering and rate limiting the traffic flow of control plane packets can be implemented to protect routers against reconnaissance and DoS attacks, allowing the control plane to maintain packet forwarding and protocol states despite an attack or heavy load on the router or multilayer switch.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "The Routing Engine (RE) is critical to all network operations because it is the component used to build all forwarding paths for the data plane via control plane processes. It is also instrumental with ongoing network management functions that keep the routers and links available for providing network services. Any disruption to the RE or the control and management planes can result in mission-critical network outages.\n\nA DoS attack targeting the RE can result in excessive CPU and memory utilization. To maintain network stability and RE security, the router must be able to handle specific control plane and management plane traffic that is destined to the RE. In the past, one method of filtering was to use ingress filters on forwarding interfaces to filter both forwarding path and receiving path traffic. However, this method does not scale well as the number of interfaces grows and the size of the ingress filters grows. Control plane policing increases the security of routers and multilayer switches by protecting the RE from unnecessary or malicious traffic. Filtering and rate limiting the traffic flow of control plane packets can be implemented to protect routers against reconnaissance and DoS attacks, allowing the control plane to maintain packet forwarding and protocol states despite an attack or heavy load on the router or multilayer switch.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Determine whether control plane protection has been implemented on the device by verifying traffic types have been classified based on importance levels and a policy has been configured to filter and rate limit the traffic according to each class.\n\nVerify firewall filters include policers (rate limiting) based upon importance levels. Although the policer names shown in the example are the bandwidth limit, any legal name can be used.\n\n[edit firewall]\nfamily inet {\n    filter <name> {\n        term accept-tcp-initial {\n            from {\n                source-prefix-list {\n                    management-networks-ipv4;\n                }\n                destination-prefix-list {\n                    router-addresses-ipv4;\n                }\n                protocol tcp;\n                destination-port ssh;\n                tcp-initial;\n            }\n            then {\n                policer policer-32k; << Lower rate for connection attempts to help prevent SYN flood attacks.\n                accept;\n            }\n        }\n        term accept-ssh {\n            from {\n                source-prefix-list {\n                    management-networks-ipv4;\n                }\n                destination-prefix-list {\n                    router-addresses-ipv4;\n                }\n                protocol tcp;\n                destination-port ssh;\n            }\n            then {\n                policer policer-1g; << Higher rate after connection establishment for remote management and/or secure file transfer.\n                accept;\n            }\n        }\n        term accept-snmp {\n            from {\n                source-prefix-list {\n                    snmp-servers-ipv4;\n                }\n                destination-prefix-list {\n                    router-addresses-ipv4;\n                }\n                protocol udp;\n                destination-port snmp;\n            }\n            then {\n                policer policer-1m;\n                accept;\n            }\n        }\n        <additional terms>\n        term default-deny {\n            then {\n                log;\n                syslog;\n                discard;\n            }\n        }\n    }\n}\nfamily inet6 {\n    filter <name> {\n        term accept-tcp-initial {\n            from {\n                source-prefix-list {\n                    management-networks-ipv6;\n                }\n                destination-prefix-list {\n                    router-addresses-ipv6;\n                }\n                next-header tcp;\n                destination-port ssh;\n                tcp-initial;\n            }\n            then {\n                policer policer-32k; << Lower rate for connection attempts to help prevent SYN flood attacks.\n                accept;\n            }\n        }\n        term accept-ssh {\n            from {\n                source-prefix-list {\n                    management-networks-ipv6;\n                }\n                destination-prefix-list {\n                    router-addresses-ipv6;\n                }\n                next-header tcp;\n                destination-port ssh;\n            }\n            then {\n                policer policer-1g; << Higher rate after connection establishment for remote management.\n                accept;\n            }\n        }\n        term accept-snmp {\n            from {\n                source-prefix-list {\n                    snmp-servers-ipv6;\n                }\n                destination-prefix-list {\n                    router-addresses-ipv6;\n                }\n                next-header udp;\n                destination-port snmp;\n            }\n            then {\n                policer policer-1m;\n                accept;\n            }\n        }\n        <additional terms>\n        term default-deny {\n            then {\n                log;\n                syslog;\n                discard;\n            }\n        }\n    }\n}\n\nNote: Verify the applied filter has terms for all permitted traffic (e.g., OSPF, BGP, etc.).\npolicer policer-1g {\n    if-exceeding {\n        bandwidth-limit 1g;\n        burst-size-limit 100k;\n    }\n    then discard;\n}\npolicer policer-1m {\n    if-exceeding {\n        bandwidth-limit 1m;\n        burst-size-limit 15k;\n    }\n    then discard;\n}\npolicer policer-32k {\n    if-exceeding {\n        bandwidth-limit 32k;\n        burst-size-limit 1500;\n    }\n    then discard;\n}\n[edit interfaces]\nlo0 {\n    unit <number> {\n        family inet {\n            filter {\n                input <filter name>;\n            }\n            address <IPv4 address>/32;\n        }\n        family inet6 {\n            filter {\n                input <filter name>;\n            }\n            address <IPv6 address>/128/\n        }\n    }\n}\nNote: Some Juniper devices support both monolithic filters and filter lists. Filter lists separate each term, or set of terms, into a separate filter that is applied sequentially to an interface. If using filter lists, the keywords \"input\" or \"output\" change to \"input-list\" or \"output-list\". Verify the final list item is a deny-all filter. The deny-all filter is created once per family and can be reused across multiple lists. For example:\n\ninput-list [ permit_mgt permit_routing_protocols default-deny ];\n\nIf the router does not have control plane protection implemented, this is a finding.", "FixText": "Implement control plane protection by classifying traffic types based on importance and configure filters to restrict and rate limit the traffic directed to and processed by the RE according to each class.\n\nset firewall family inet filter <name> term accept-tcp-initial from source-prefix-list management-networks-ipv4\nset firewall family inet filter <name> term accept-tcp-initial from destination-prefix-list router-addresses-ipv4\nset firewall family inet filter <name> term accept-tcp-initial from protocol tcp\nset firewall family inet filter <name> term accept-tcp-initial from destination-port ssh\nset firewall family inet filter <name> term accept-tcp-initial from tcp-initial\nset firewall family inet filter <name> term accept-tcp-initial then policer policer-32k\nset firewall family inet filter <name> term accept-tcp-initial then accept\nset firewall family inet filter <name> term accept-ssh from source-prefix-list management-networks-ipv4\nset firewall family inet filter <name> term accept-ssh from destination-prefix-list router-addresses-ipv4\nset firewall family inet filter <name> term accept-ssh from protocol tcp\nset firewall family inet filter <name> term accept-ssh from destination-port ssh\nset firewall family inet filter <name> term accept-ssh then policer policer-1g\nset firewall family inet filter <name> term accept-ssh then count accept-ssh\nset firewall family inet filter <name> term accept-ssh then accept\nset firewall family inet filter <name> term accept-snmp from source-prefix-list snmp-servers-ipv4\nset firewall family inet filter <name> term accept-snmp from destination-prefix-list router-addresses-ipv4\nset firewall family inet filter <name> term accept-snmp from protocol udp\nset firewall family inet filter <name> term accept-snmp from destination-port snmp\nset firewall family inet filter <name> term accept-snmp then policer policer-1m\nset firewall family inet filter <name> term accept-snmp then count accept-snmp\nset firewall family inet filter <name> term accept-snmp then accept\n<additional terms>\nset firewall family inet filter <name> term default-deny then log\nset firewall family inet filter <name> term default-deny then syslog\nset firewall family inet filter <name> term default-deny then discard\n\nset firewall policer policer-1g if-exceeding bandwidth-limit 1g\nset firewall policer policer-1g burst-size-limit 100k\nset firewall policer policer-1g then discard\nset firewall policer policer-1m if-exceeding bandwidth-limit 1m\nset firewall policer policer-1m burst-size-limit 15k\nset firewall policer policer-1m then discard\nset firewall policer policer-32k if-exceeding bandwidth-limit 132k\nset firewall policer policer-32k burst-size-limit 1500\nset firewall policer policer-32k then discard\n\nset interfaces lo0 unit <number> family inet filter <name>\nset interfaces lo0 unit <number> family inet address <IPv4 address>/32\nset interfaces lo0 unit <number> family inet6 filter <name>\nset interfaces lo0 unit <number> family inet6 address <IPv6 address>/128", "CCI": "CCI-002385"}, {"VulnID": "V-254032", "RuleID": "SV-254032r844129_rule", "StigID": "JUEX-RT-000600", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000362-RTR-000111", "RuleTitle": "The Juniper router must be configured to have Gratuitous ARP disabled on all external interfaces.", "Description": "<VulnDiscussion>A gratuitous ARP is an ARP broadcast in which the source and destination MAC addresses are the same. It is used to inform the network about a host IP address. A spoofed gratuitous ARP message can cause network mapping information to be stored incorrectly, causing network malfunction.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "A gratuitous ARP is an ARP broadcast in which the source and destination MAC addresses are the same. It is used to inform the network about a host IP address. A spoofed gratuitous ARP message can cause network mapping information to be stored incorrectly, causing network malfunction.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the configuration to determine if gratuitous ARP is disabled on all external interfaces.\n[edit interfaces]\n<external interface> {\n    no-gratuitous-arp-reply;\n    no-gratuitous-arp-request;\n    unit <number> {\n        family inet {\n            address <IPv4 address>/<mask>;\n        }\n        family inet6 {\n            address <IPv6 address>/<mask>;\n        }\n    }\n}\n\nIf gratuitous ARP is enabled on any external interface, this is a finding.", "FixText": "Disable gratuitous ARP on all external interfaces.\n\nset interfaces <external interface> no-gratuitous-arp-reply\nset interfaces <external interface> no-gratuitous-arp-request\nset interfaces <external interface> unit <number> family inet address <IPv4 address>/<mask>\nset interfaces <external interface> unit <number> family inet6 address <IPv6 address>/<prefix>", "CCI": "CCI-002385"}, {"VulnID": "V-254033", "RuleID": "SV-254033r844132_rule", "StigID": "JUEX-RT-000610", "Severity": "low", "Cat": "CAT III", "Classification": "", "GroupTitle": "SRG-NET-000362-RTR-000112", "RuleTitle": "The Juniper router must be configured to have IP directed broadcast disabled on all interfaces.", "Description": "<VulnDiscussion>An IP directed broadcast is a datagram sent to the broadcast address of a subnet that is not directly attached to the sending machine. The directed broadcast is routed through the network as a unicast packet until it arrives at the target subnet, where it is converted into a link-layer broadcast. Because of the nature of the IP addressing architecture, only the last router in the chain, which is connected directly to the target subnet, can conclusively identify a directed broadcast.\n\nIP directed broadcasts are used in the extremely common and popular smurf, or denial-of-service (DoS), attacks. In a smurf attack, the attacker sends Internet Control Message Protocol (ICMP) echo requests from a falsified source address to a directed broadcast address, causing all the hosts on the target subnet to send replies to the falsified source. By sending a continuous stream of such requests, the attacker can create a much larger stream of replies, which can completely inundate the host whose address is being falsified. This service should be disabled on all interfaces when not needed to prevent smurf and DoS attacks.\n\nDirected broadcast can be enabled on internal facing interfaces to support services such as Wake-On-LAN. Case scenario may also include support for legacy applications where the content server and the clients do not support multicast. The content servers send streaming data using UDP broadcast. Used in conjunction with the IP multicast helper-map feature, broadcast data can be sent across a multicast topology. The broadcast streams are converted to multicast and vice versa at the first-hop routers and last-hop routers before entering and leaving the multicast transit area respectively. The last-hop router must convert the multicast to broadcast. Hence, this interface must be configured to forward a broadcast packet (i.e., a directed broadcast address is converted to the all-nodes broadcast address).</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "An IP directed broadcast is a datagram sent to the broadcast address of a subnet that is not directly attached to the sending machine. The directed broadcast is routed through the network as a unicast packet until it arrives at the target subnet, where it is converted into a link-layer broadcast. Because of the nature of the IP addressing architecture, only the last router in the chain, which is connected directly to the target subnet, can conclusively identify a directed broadcast.\n\nIP directed broadcasts are used in the extremely common and popular smurf, or denial-of-service (DoS), attacks. In a smurf attack, the attacker sends Internet Control Message Protocol (ICMP) echo requests from a falsified source address to a directed broadcast address, causing all the hosts on the target subnet to send replies to the falsified source. By sending a continuous stream of such requests, the attacker can create a much larger stream of replies, which can completely inundate the host whose address is being falsified. This service should be disabled on all interfaces when not needed to prevent smurf and DoS attacks.\n\nDirected broadcast can be enabled on internal facing interfaces to support services such as Wake-On-LAN. Case scenario may also include support for legacy applications where the content server and the clients do not support multicast. The content servers send streaming data using UDP broadcast. Used in conjunction with the IP multicast helper-map feature, broadcast data can be sent across a multicast topology. The broadcast streams are converted to multicast and vice versa at the first-hop routers and last-hop routers before entering and leaving the multicast transit area respectively. The last-hop router must convert the multicast to broadcast. Hence, this interface must be configured to forward a broadcast packet (i.e., a directed broadcast address is converted to the all-nodes broadcast address).", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the router configuration to determine if IP directed broadcast is enabled.\n\nBy default, IP directed broadcast is disabled on all L3 interfaces, including Integrated Routing and Bridging (IRB) interfaces. Verify \"targeted-broadcast\" is not enabled as shown.\n\n[edit interfaces]\n<L3 interface> {\n    unit <number> {\n        family inet {\n            targeted-broadcast; << Must not be present.\n            address <IPv4 address>/<mask>;\n        }\n    }\n}\nirb {\n    unit <number> {\n        family inet {\n            targeted-broadcast; << Must not be present.\n            address <IPv4 address>/<mask>;\n        }\n    }\n}\n\nIf IP directed broadcast is enabled on layer 3 interfaces, this is a finding.", "FixText": "Disable IP directed broadcasts on all layer 3 interfaces.\n\ndelete interfaces <L3 interface> unit <number> family inet targeted-broadcast\ndelete interfaces irb unit <L3 IRB interface> family inet targeted-broadcast", "CCI": "CCI-002385"}, {"VulnID": "V-254034", "RuleID": "SV-254034r844135_rule", "StigID": "JUEX-RT-000620", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000362-RTR-000113", "RuleTitle": "The Juniper router must be configured to have Internet Control Message Protocol (ICMP) unreachable notifications disabled on all external interfaces.", "Description": "<VulnDiscussion>The ICMP supports IP traffic by relaying information about paths, routes, and network conditions. Routers automatically send ICMP messages under a wide variety of conditions. Host unreachable ICMP messages are commonly used by attackers for network mapping and diagnosis.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "The ICMP supports IP traffic by relaying information about paths, routes, and network conditions. Routers automatically send ICMP messages under a wide variety of conditions. Host unreachable ICMP messages are commonly used by attackers for network mapping and diagnosis.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the device configuration to determine if controls have been defined to ensure the router does not send ICMP unreachable notifications out to any external interfaces.\n\n[edit policy-options]\nprefix-list router-address-ipv4 {\n    <external interface address>/32;\n    <internal subnet>/<mask>;\n}\n[edit firewall family inet]\nfilter <name> {\n    term 1 {\n        from {\n            source-prefix-list {\n                router-address-ipv4; \n            }\n            protocol icmp;\n            icmp-type unreachable;\n        }\n        then {\n            log;\n            syslog;\n            discard;\n        }\n    }\n    <additional terms>\n    term default {\n        then {\n            log;\n            syslog;\n            discard;\n        }\n    }\n}\n\n[edit interfaces]\n<external interface> {\n    unit <number> {\n        family inet {\n            filter {\n                output <filter name>;\n            }\n            address <IPv4 address>/<mask>;\n        }\n    }\n}\n\nNote: Some Juniper devices support both monolithic filters and filter lists. Filter lists separate each term, or set of terms, into a separate filter that is applied sequentially to an interface. If using filter lists, the keywords \"input\" or \"output\" change to \"input-list\" or \"output-list\". Verify the final list item is a deny-all filter. The deny-all filter is created once per family and can be reused across multiple lists. For example:\n\ninput-list [ permit_mgt permit_routing_protocols default-deny ];\n\nIf ICMP unreachable notifications are enabled on any external interfaces, this is a finding.", "FixText": "Disable ICMP unreachable notifications on all external interfaces.\n\nset policy-options prefix-list router-addresses-ipv4 <external interface address>/32\nset policy-options prefix-list router-addresses-ipv4 <internal subnet>/<mask>\n\nset firewall family inet filter <name> term 1 from source-prefix-list router-address-ipv4\nset firewall family inet filter <name> term 1 from protocol icmp\nset firewall family inet filter <name> term 1 from icmp-type unreachable\nset firewall family inet filter <name> term 1 then log\nset firewall family inet filter <name> term 1 then syslog\nset firewall family inet filter <name> term 1 then discard\n<additional terms>\nset firewall family inet filter <name> term default then log\nset firewall family inet filter <name> term default then syslog\nset firewall family inet filter <name> term default then discard\n\nset interfaces <interface name> unit <number> family inet filter output <filter name>\nset interfaces <interface name> unit <number> family inet address <IPv4 address>.<mask>", "CCI": "CCI-002385"}, {"VulnID": "V-254035", "RuleID": "SV-254035r844138_rule", "StigID": "JUEX-RT-000630", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000362-RTR-000114", "RuleTitle": "The Juniper router must be configured to have Internet Control Message Protocol (ICMP) mask replies disabled on all external interfaces.", "Description": "<VulnDiscussion>The ICMP supports IP traffic by relaying information about paths, routes, and network conditions. Routers automatically send ICMP messages under a wide variety of conditions. Mask Reply ICMP messages are commonly used by attackers for network mapping and diagnosis.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "The ICMP supports IP traffic by relaying information about paths, routes, and network conditions. Routers automatically send ICMP messages under a wide variety of conditions. Mask Reply ICMP messages are commonly used by attackers for network mapping and diagnosis.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the device configuration to determine if controls have been defined to ensure the router does not send ICMP Mask Reply messages out to any external interfaces.\n\n[edit policy-options]\nprefix-list router-address-ipv4 {\n    <external interface address>/32;\n    <internal subnet>/<mask>;\n}\n[edit firewall family inet]\nfilter <name> {\n    term 1 {\n        from {\n            source-prefix-list {\n                router-address-ipv4; \n            }\n            protocol icmp;\n            icmp-type mask-reply;\n        }\n        then {\n            log;\n            syslog;\n            discard;\n        }\n    }\n    <additional terms>\n    term default {\n        then {\n            log;\n            syslog;\n            discard;\n        }\n    }\n}\n\n[edit interfaces]\n<external interface> {\n    unit <number> {\n        family inet {\n            filter {\n                output <filter name>;\n            }\n            address <IPv4 address>/<mask>;\n        }\n    }\n}\n\nNote: Some Juniper devices support both monolithic filters and filter lists. Filter lists separate each term, or set of terms, into a separate filter that is applied sequentially to an interface. If using filter lists, the keywords \"input\" or \"output\" change to \"input-list\" or \"output-list\". Verify the final list item is a deny-all filter. The deny-all filter is created once per family and can be reused across multiple lists. For example:\n\ninput-list [ permit_mgt permit_routing_protocols default-deny ];\n\nIf ICMP Mask Reply messages are enabled on any external interfaces, this is a finding.", "FixText": "Disable ICMP mask replies on all external interfaces.\n\nset policy-options prefix-list router-addresses-ipv4 <external interface address>/32\nset policy-options prefix-list router-addresses-ipv4 <internal subnet>/<mask>\n\nset firewall family inet filter <name> term 1 from source-prefix-list router-address-ipv4\nset firewall family inet filter <name> term 1 from protocol icmp\nset firewall family inet filter <name> term 1 from icmp-type mask-reply\nset firewall family inet filter <name> term 1 then log\nset firewall family inet filter <name> term 1 then syslog\nset firewall family inet filter <name> term 1 then discard\n<additional terms>\nset firewall family inet filter <name> term default then log\nset firewall family inet filter <name> term default then syslog\nset firewall family inet filter <name> term default then discard\n\nset interfaces <interface name> unit <number> family inet filter output <filter name>\nset interfaces <interface name> unit <number> family inet address <IPv4 address>.<mask>", "CCI": "CCI-002385"}, {"VulnID": "V-254036", "RuleID": "SV-254036r844141_rule", "StigID": "JUEX-RT-000640", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000362-RTR-000115", "RuleTitle": "The Juniper router must be configured to have Internet Control Message Protocol (ICMP) redirects disabled on all external interfaces.", "Description": "<VulnDiscussion>The ICMP supports IP traffic by relaying information about paths, routes, and network conditions. Routers automatically send ICMP messages under a wide variety of conditions. Redirect ICMP messages are commonly used by attackers for network mapping and diagnosis.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "The ICMP supports IP traffic by relaying information about paths, routes, and network conditions. Routers automatically send ICMP messages under a wide variety of conditions. Redirect ICMP messages are commonly used by attackers for network mapping and diagnosis.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the device configuration to determine if controls have been defined to ensure the router does not send ICMP Redirect messages out to any external interfaces.\n\nVerify the global \"no-redirects\" statement is enabled under [edit system] or that individual interface \"no-redirects\" statements are configured on external interfaces.\n[edit system]\nno-redirects;\n[edit interfaces]\n<external interface name> {\n    unit <number> {\n        family inet {\n            no-redirects;\n            address <IPv4 address>.<mask>;\n        }\n        family inet6 {\n            no-redirects;\n            address <IPv6 address>.<prefix>;\n        }\n    }\n}\n\nIf ICMP Redirect messages are enabled on any external interfaces, this is a finding.", "FixText": "Disable ICMP redirects on all external interfaces.\n\nset system no-redirects\n\nset interfaces <external interface name> unit <number> family inet no-redirects\nset interfaces <external interface name> unit <number> family inet6 no-redirects", "CCI": "CCI-002385"}, {"VulnID": "V-254037", "RuleID": "SV-254037r844144_rule", "StigID": "JUEX-RT-000650", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000362-RTR-000117", "RuleTitle": "The Juniper BGP router must be configured to use the prefix limit feature to protect against route table flooding and prefix deaggregation attacks.", "Description": "<VulnDiscussion>The effects of prefix deaggregation can degrade router performance due to the size of routing tables and also result in black-holing legitimate traffic. Initiated by an attacker or a misconfigured router, prefix deaggregation occurs when the announcement of a large prefix is fragmented into a collection of smaller prefix announcements.\n\nIn 1997, misconfigured routers in the Florida Internet Exchange network (AS7007) deaggregated every prefix in their routing table and started advertising the first /24 block of each of these prefixes as their own. Faced with this additional burden, the internal routers became overloaded and crashed repeatedly. This caused prefixes advertised by these routers to disappear from routing tables and reappear when the routers came back online. As the routers came back after crashing, they were flooded with the routing table information by their neighbors. The flood of information would again overwhelm the routers and cause them to crash. This process of route flapping served to destabilize not only the surrounding network but also the entire internet. Routers trying to reach those addresses would choose the smaller, more specific /24 blocks first. This caused backbone networks throughout North America and Europe to crash.\n\nMaximum prefix limits on peer connections combined with aggressive prefix-size filtering of customers' reachability advertisements will effectively mitigate the deaggregation risk. BGP maximum prefix must be used on all eBGP routers to limit the number of prefixes that it should receive from a particular neighbor, whether customer or peering AS. Consider each neighbor and how many routes they should be advertising and set a threshold slightly higher than the number expected.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "The effects of prefix deaggregation can degrade router performance due to the size of routing tables and also result in black-holing legitimate traffic. Initiated by an attacker or a misconfigured router, prefix deaggregation occurs when the announcement of a large prefix is fragmented into a collection of smaller prefix announcements.\n\nIn 1997, misconfigured routers in the Florida Internet Exchange network (AS7007) deaggregated every prefix in their routing table and started advertising the first /24 block of each of these prefixes as their own. Faced with this additional burden, the internal routers became overloaded and crashed repeatedly. This caused prefixes advertised by these routers to disappear from routing tables and reappear when the routers came back online. As the routers came back after crashing, they were flooded with the routing table information by their neighbors. The flood of information would again overwhelm the routers and cause them to crash. This process of route flapping served to destabilize not only the surrounding network but also the entire internet. Routers trying to reach those addresses would choose the smaller, more specific /24 blocks first. This caused backbone networks throughout North America and Europe to crash.\n\nMaximum prefix limits on peer connections combined with aggressive prefix-size filtering of customers' reachability advertisements will effectively mitigate the deaggregation risk. BGP maximum prefix must be used on all eBGP routers to limit the number of prefixes that it should receive from a particular neighbor, whether customer or peering AS. Consider each neighbor and how many routes they should be advertising and set a threshold slightly higher than the number expected.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the router configuration to verify that the number of received prefixes from each eBGP neighbor is controlled.\n\n[edit protocols]\nbgp {\n    group <group name> {\n        type external;\n        local-as <local AS number>;\n        neighbor <neighbor 1 address> {\n            family inet {\n                unicast {\n                    prefix-limit {\n                        maximum 10;\n                        teardown;\n                    }\n                }\n            }\n            family inet6 {\n                unicast {\n                    prefix-limit {\n                        maximum 10;\n                        teardown;\n                    }\n                }\n            }\n            authentication-key \"$8$aes256-gcm$hmac-sha2-256$100$cFQ99Gy83Og$SCMVXvnfna7/cZqH9fCECQ$bCVokm+es94xFJONmbKFNA$4561Uc/r\"; ## SECRET-DATA\n        }\n        neighbor <neighbor 2 address> {\n            family inet {\n                unicast {\n                    prefix-limit {\n                        maximum 10;\n                        teardown;\n                    }\n                }\n            }\n            family inet6 {\n                unicast {\n                    prefix-limit {\n                        maximum 10;\n                        teardown;\n                    }\n                }\n            }\n            ipsec-sa <SA name>;\n        }\n    }\n}\n\nIf the router is not configured to control the number of prefixes received from each peer to protect against route table flooding and prefix deaggregation attacks, this is a finding.", "FixText": "Configure all eBGP routers to use the prefix limit feature to protect against route table flooding and prefix deaggregation attacks.\n\nset protocols bgp group <group name> type external\nset protocols bgp group <group name> local-as <local AS number>\nset protocols bgp group <group name> neighbor <neighbor 1 address> family inet unicast prefix-limit maximum 10\nset protocols bgp group <group name> neighbor <neighbor 1 address> family inet unicast prefix-limit teardown\nset protocols bgp group <group name> neighbor <neighbor 1 address> family inet6 unicast prefix-limit maximum 10\nset protocols bgp group <group name> neighbor <neighbor 1 address> family inet6 unicast prefix-limit teardown\nset protocols bgp group <group name> neighbor <neighbor 1 address> authentication-key <PSK value>\nset protocols bgp group <group name> neighbor <neighbor 2 address> family inet unicast prefix-limit maximum 10\nset protocols bgp group <group name> neighbor <neighbor 2 address> family inet unicast prefix-limit teardown\nset protocols bgp group <group name> neighbor <neighbor 2 address> family inet6 unicast prefix-limit maximum 10\nset protocols bgp group <group name> neighbor <neighbor 2 address> family inet6 unicast prefix-limit teardown\nset protocols bgp group <group name> neighbor <neighbor 2 address> ipsec-sa <SA name>", "CCI": "CCI-002385"}, {"VulnID": "V-254038", "RuleID": "SV-254038r844147_rule", "StigID": "JUEX-RT-000660", "Severity": "low", "Cat": "CAT III", "Classification": "", "GroupTitle": "SRG-NET-000362-RTR-000118", "RuleTitle": "The Juniper BGP router must be configured to limit the prefix size on any inbound route advertisement to /24 or the least significant prefixes issued to the customer.", "Description": "<VulnDiscussion>The effects of prefix deaggregation can degrade router performance due to the size of routing tables and also result in black-holing legitimate traffic. Initiated by an attacker or a misconfigured router, prefix deaggregation occurs when the announcement of a large prefix is fragmented into a collection of smaller prefix announcements.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "The effects of prefix deaggregation can degrade router performance due to the size of routing tables and also result in black-holing legitimate traffic. Initiated by an attacker or a misconfigured router, prefix deaggregation occurs when the announcement of a large prefix is fragmented into a collection of smaller prefix announcements.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "This requirement is not applicable for the DODIN Backbone. \n\nReview the router configuration to verify that there is a filter to reject inbound route advertisements that are greater than /24, or the least significant prefixes issued to the customer, whichever is larger. Verify each BGP neighbor implements an import policy. BGP import policies are supported in three locations: Global (at [edit protocols bgp]), group (at [edit protocols bgp group <name>]), and for each neighbor (at [edit protocols bgp group <name> neighbor <neighbor address>]) with the most specific import statement being applied. Multiple policy statements may be necessary to address each customer's requirements.\n\n[edit policy-options]\npolicy-statement reject-long-prefixes {\n    term 1 {\n        from {\n            route-filter 0.0.0.0/0 prefix-length-range /25-/32;\n        }\n        then reject;\n    }\n    <additional terms>\n}\n[edit protocols]\nbgp {\n    group <group name> {\n        type external;\n        import <policy statement name>; << Applied instead of global BGP policy unless a more specific neighbor import filter exists. Excludes all terms in the global filter.\n        local-as <local AS number>;\n        neighbor <neighbor 1 address> {\n            import <policy statement name>; << Most specific import filter. If configured, only this filter applies to this neighbor (all other terms in all other filters ignored).\n            authentication-key \"$8$aes256-gcm$hmac-sha2-256$100$cFQ99Gy83Og$SCMVXvnfna7/cZqH9fCECQ$bCVokm+es94xFJONmbKFNA$4561Uc/r\"; ## SECRET-DATA\n        }\n        neighbor <neighbor 2 address> {\n            import <policy statement name>; << Most specific import filter. If configured, only this filter applies to this neighbor (all other terms in all other filters ignored).\n            ipsec-sa <SA name>;\n        }\n    }\n    import <policy statement name>; << Least specific import filter.\n}\n\nIf the router is not configured to limit the prefix size on any inbound route advertisement to /24 or the least significant prefixes issued to the customer, this is a finding.", "FixText": "Configure all eBGP routers to use the prefix limit feature to protect against route table flooding and prefix deaggregation attacks.\n\nset policy-options policy-statement <statement name> term 1 from route-filter 0.0.0.0/0 prefix-length-range /25-/32\nset policy-options policy-statement <statement name> term 1 then reject\n\nset protocols bgp group <group name> type external\nset protocols bgp group <group name> import <statement name>\nset protocols bgp group <group name> local-as <local AS number>\nset protocols bgp group <group name> neighbor <neighbor 1 address> import <statement name>\nset protocols bgp group <group name> neighbor <neighbor 1 address> authentication-key <PSK value>\nset protocols bgp group <group name> neighbor <neighbor 2 address> import <statement name>\nset protocols bgp group <group name> neighbor <neighbor 2 address> ipsec-sa <SA name>\nset protocols bgp import <statement name>", "CCI": "CCI-002385"}, {"VulnID": "V-254039", "RuleID": "SV-254039r844150_rule", "StigID": "JUEX-RT-000670", "Severity": "low", "Cat": "CAT III", "Classification": "", "GroupTitle": "SRG-NET-000362-RTR-000119", "RuleTitle": "The Juniper PE router must be configured to implement Internet Group Management Protocol (IGMP) or Multicast Listener Discovery (MLD) snooping for each Virtual Private LAN Services (VPLS) bridge domain.", "Description": "<VulnDiscussion>IGMP snooping provides a way to constrain multicast traffic at layer 2. By monitoring the IGMP membership reports sent by hosts within the bridge domain, the snooping application can set up layer 2 multicast forwarding tables to deliver traffic only to ports with at least one interested member within the VPLS bridge, thereby significantly reducing the volume of multicast traffic that would otherwise flood an entire VPLS bridge domain. The IGMP snooping operation applies to both access circuits and pseudowires within a VPLS bridge domain.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "IGMP snooping provides a way to constrain multicast traffic at layer 2. By monitoring the IGMP membership reports sent by hosts within the bridge domain, the snooping application can set up layer 2 multicast forwarding tables to deliver traffic only to ports with at least one interested member within the VPLS bridge, thereby significantly reducing the volume of multicast traffic that would otherwise flood an entire VPLS bridge domain. The IGMP snooping operation applies to both access circuits and pseudowires within a VPLS bridge domain.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the router configuration to verify that IGMP or MLD snooping has been configured for IPv4 and IPv6 multicast traffic respectively for each VPLS bridge domain (VFI instance).\n\n[edit routing-instances <name>]\nprotocols {\n    igmp-snooping {\n        vlan <VLAN name>;\n    }\n    mld-snooping {\n        vlan <VLAN name>;\n    }\n}\n\nNote: Only EX9200-series devices currently support VPLS.\n\nIf the router is not configured to implement IGMP or MLD snooping for each VPLS bridge domain, this is a finding.", "FixText": "Configure IGMP or MLD snooping for IPv4 and IPv6 multicast traffic respectively for each VPLS bridge domain.\n\nset routing-instances <name> protocols igmp-snooping vlan <vlan ID>\nset routing-instances <name> protocols mld-snooping vlan <vlan ID>", "CCI": "CCI-002385"}, {"VulnID": "V-254040", "RuleID": "SV-254040r844261_rule", "StigID": "JUEX-RT-000680", "Severity": "low", "Cat": "CAT III", "Classification": "", "GroupTitle": "SRG-NET-000362-RTR-000120", "RuleTitle": "The Juniper multicast RP router must be configured to limit the multicast forwarding cache so that its resources are not saturated by managing an overwhelming number of PIM and MSDP source-active entries.", "Description": "<VulnDiscussion>MSDP peering between networks enables sharing of multicast source information. Enclaves with an existing multicast topology using PIM-SM can configure their RP routers to peer with MSDP routers. As a first step of defense against a denial-of-service (DoS) attack, all RP routers must limit the multicast forwarding cache to ensure that router resources are not saturated managing an overwhelming number of PIM and MSDP source-active entries.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "MSDP peering between networks enables sharing of multicast source information. Enclaves with an existing multicast topology using PIM-SM can configure their RP routers to peer with MSDP routers. As a first step of defense against a denial-of-service (DoS) attack, all RP routers must limit the multicast forwarding cache to ensure that router resources are not saturated managing an overwhelming number of PIM and MSDP source-active entries.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the router configuration to determine if forwarding cache thresholds are defined.\n\n[edit routing-options]\nmulticast {\n    forwarding-cache {\n        threshold {\n            suppress <1..200000>;\n            reuse <1..200000>;\n            log-warning <percent to generate warning>;\n        }\n    }\n}\n\nIf the RP router is not configured to limit the multicast forwarding cache to ensure that its resources are not saturated, this is a finding.", "FixText": "Configure MSDP-enabled RP routers to limit the multicast forwarding cache for source-active entries.\n\nset routing-options multicast forwarding-cache threshold suppress <1..200000>\nset routing-options multicast forwarding-cache threshold reuse <1..200000>\nset routing-options multicast forwarding-cache threshold log-warning <percent to generate warning>", "CCI": "CCI-002385"}, {"VulnID": "V-254041", "RuleID": "SV-254041r844156_rule", "StigID": "JUEX-RT-000690", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000362-RTR-000121", "RuleTitle": "The Juniper multicast Rendezvous Point (RP) must be configured to rate limit the number of Protocol Independent Multicast (PIM) Register messages.", "Description": "<VulnDiscussion>When a new source starts transmitting in a PIM Sparse Mode network, the DR will encapsulate the multicast packets into register messages and forward them to the RP using unicast. This process can be taxing on the CPU for both the DR and the RP if the source is running at a high data rate and there are many new sources starting at the same time. This scenario can potentially occur immediately after a network failover. The rate limit for the number of register messages should be set to a relatively low value based on the known number of multicast sources within the multicast domain.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "When a new source starts transmitting in a PIM Sparse Mode network, the DR will encapsulate the multicast packets into register messages and forward them to the RP using unicast. This process can be taxing on the CPU for both the DR and the RP if the source is running at a high data rate and there are many new sources starting at the same time. This scenario can potentially occur immediately after a network failover. The rate limit for the number of register messages should be set to a relatively low value based on the known number of multicast sources within the multicast domain.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the configuration of the RP to verify that it is rate limiting the number of multicast register messages.\n\n[edit protocols pim]\nrp {\n    register-limit {\n        maximum <1..65535>;\n    }\n    <additional configuration>\n}\n\nIf the RP is not limiting multicast register messages, this is a finding.", "FixText": "Configure the RP to rate limit the number of multicast register messages.\n\nset protocols pim rp register-limit maximum <1..65535>", "CCI": "CCI-002385"}, {"VulnID": "V-254042", "RuleID": "SV-254042r844159_rule", "StigID": "JUEX-RT-000700", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000362-RTR-000122", "RuleTitle": "The Juniper multicast Designated Router (DR) must be configured to limit the number of mroute states resulting from Internet Group Management Protocol (IGMP) and Multicast Listener Discovery (MLD) Host Membership Reports.", "Description": "<VulnDiscussion>The current multicast paradigm can let any host join any multicast group at any time by sending an IGMP or MLD membership report to the DR. In a Protocol Independent Multicast (PIM) Sparse Mode network, the DR will send a PIM Join message for the group to the RP. Without any form of admission control, this can pose a security risk to the entire multicast domain - specifically the multicast routers along the shared tree from the DR to the RP that must maintain the mroute state information for each group join request. Hence, it is imperative that the DR is configured to limit the number of mroute state information that must be maintained to mitigate the risk of IGMP or MLD flooding.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "The current multicast paradigm can let any host join any multicast group at any time by sending an IGMP or MLD membership report to the DR. In a Protocol Independent Multicast (PIM) Sparse Mode network, the DR will send a PIM Join message for the group to the RP. Without any form of admission control, this can pose a security risk to the entire multicast domain - specifically the multicast routers along the shared tree from the DR to the RP that must maintain the mroute state information for each group join request. Hence, it is imperative that the DR is configured to limit the number of mroute state information that must be maintained to mitigate the risk of IGMP or MLD flooding.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the DR configuration to verify that it is limiting the number of mroute states via IGMP or MLD. Verify the group-limit parameter is appropriate for the target network.\n\n[edit protocols]\nigmp {\n    interface <name>.<logical unit> {\n        group-limit <1..32767>;\n    }\n}\nmld {\n    interface <name>.<logical unit> {\n        group-limit <1..32767>;\n    }\n}\n\nIf the DR is not limiting multicast join requests via IGMP or MLD, this is a finding.", "FixText": "Configure the DR on a global or interface basis to limit the number of mroute states resulting from IGMP or MLD membership reports.\n\nset protocols igmp interface <name>.<logical unit> group-limit <1..32767>\nset protocols mld interface <name>.<logical unit> group-limit <1..32767>", "CCI": "CCI-002385"}, {"VulnID": "V-254043", "RuleID": "SV-254043r844162_rule", "StigID": "JUEX-RT-000710", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000362-RTR-000123", "RuleTitle": "The Juniper multicast Designated Router (DR) must be configured to increase the shortest-path tree (SPT) threshold or set it to infinity to minimalize source-group (S, G) state within the multicast topology where Any Source Multicast (ASM) is deployed.", "Description": "<VulnDiscussion>ASM can have many sources for the same groups (many-to-many). For many receivers, the path via the RP may not be ideal compared with the shortest path from the source to the receiver. By default, the last-hop router will initiate a switch from the shared tree to a source-specific SPT to obtain lower latencies. This is accomplished by the last-hop router sending an (S, G) Protocol Independent Multicast (PIM) Join toward S (the source).\n\nWhen the last-hop router begins to receive traffic for the group from the source via the SPT, it will send a PIM Prune message to the RP for the (S, G). The RP will then send a Prune message toward the source. The SPT switchover becomes a scaling issue for large multicast topologies that have many receivers and many sources for many groups because (S, G) entries require more memory than (*, G). Hence, it is imperative to minimize the amount of (S, G) state to be maintained by increasing the threshold that determines when the SPT switchover occurs.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "ASM can have many sources for the same groups (many-to-many). For many receivers, the path via the RP may not be ideal compared with the shortest path from the source to the receiver. By default, the last-hop router will initiate a switch from the shared tree to a source-specific SPT to obtain lower latencies. This is accomplished by the last-hop router sending an (S, G) Protocol Independent Multicast (PIM) Join toward S (the source).\n\nWhen the last-hop router begins to receive traffic for the group from the source via the SPT, it will send a PIM Prune message to the RP for the (S, G). The RP will then send a Prune message toward the source. The SPT switchover becomes a scaling issue for large multicast topologies that have many receivers and many sources for many groups because (S, G) entries require more memory than (*, G). Hence, it is imperative to minimize the amount of (S, G) state to be maintained by increasing the threshold that determines when the SPT switchover occurs.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the multicast last-hop router configuration to verify that the SPT switchover threshold is increased (default is \"0\") or set to infinity (never switch over). \n\nVerify the policy statement includes specific multicast groups or all groups (as shown).\n[edit policy-options]\npolicy-statement <name> {\n    term 1 {\n        from {\n            route-filter 234.0.0.0/8 orlonger;\n        }\n        then accept;\n    }\n}\n\nVerify the infinity policy is applied.\n[edit protocols pim]\nspt-threshold {\n    infinity <policy name>;\n}\n\nIf any multicast router is not configured to increase the SPT threshold or set to infinity to minimalize (S, G) state, this is a finding.", "FixText": "Configure the multicast router to increase the SPT threshold or set it to infinity to minimalize (S, G) state within the multicast topology where ASM is deployed.\n\nset policy-options policy-statement <name> term 1 from route-filter 239.0.0.0/8 orlonger\nset policy-options policy-statement <name> term 1 then accept\n\nset protocols pim spt-threshold infinity <policy name>", "CCI": "CCI-002385"}, {"VulnID": "V-254044", "RuleID": "SV-254044r844165_rule", "StigID": "JUEX-RT-000720", "Severity": "low", "Cat": "CAT III", "Classification": "", "GroupTitle": "SRG-NET-000362-RTR-000124", "RuleTitle": "The Juniper BGP router must be configured to enable the Generalized TTL Security Mechanism (GTSM).", "Description": "<VulnDiscussion>GTSM is designed to protect a router's IP-based control plane from DoS attacks. Many attacks focused on CPU load and line-card overload can be prevented by implementing GTSM on all Exterior Border Gateway Protocol speaking routers. \n\nGTSM is based on the fact that the vast majority of control plane peering is established between adjacent routers; that is, the Exterior Border Gateway Protocol peers are either between connecting interfaces or between loopback interfaces. Since TTL spoofing is considered nearly impossible, a mechanism based on an expected TTL value provides a simple and reasonably robust defense from infrastructure attacks based on forged control plane traffic.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "GTSM is designed to protect a router's IP-based control plane from DoS attacks. Many attacks focused on CPU load and line-card overload can be prevented by implementing GTSM on all Exterior Border Gateway Protocol speaking routers. \n\nGTSM is based on the fact that the vast majority of control plane peering is established between adjacent routers; that is, the Exterior Border Gateway Protocol peers are either between connecting interfaces or between loopback interfaces. Since TTL spoofing is considered nearly impossible, a mechanism based on an expected TTL value provides a simple and reasonably robust defense from infrastructure attacks based on forged control plane traffic.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the router configuration. Verify a firewall filter term discards BGP packets with a TTL less than 255.\n[edit firewall family inet]\nfilter gtsm {\n    term 1 {\n        from {\n            protocol tcp;\n            ttl 255;\n            destination-port bgp;\n        }\n        then accept;\n    }\n    term 2 {\n        from {\n            protocol tcp;\n            destination-port bgp;\n        }\n        then {\n            log;\n            syslog;\n            discard;\n        }\n    }\n    <additional accept terms>\n    term default {\n        then {\n            log;\n            syslog;\n            discard;\n        }\n    }\n}\n\nSome routers support the \"ttl-except\" directive that can replace the two term filter shown above. For example:\n[edit firewall family inet]\nfilter gtsm {\n    term 1 {\n        from {\n            protocol tcp;\n            ttl-except 255;\n            destination-port bgp;\n        }\n        then {\n            log;\n            syslog;\n            discard;\n        }\n    }\n    <additional accept terms>\n    term default {\n        then {\n            log;\n            syslog;\n            discard;\n        }\n    }\n}\n\nVerify the filter is applied to BGP neighbor interfaces.\n[edit interfaces]\n<bgp interface> {\n    unit <number> {\n        family inet {\n            filter input gtsm;\n        }\n        address <IPv4 address>.<mask>;\n    }\n}\n\nNote: Some Juniper devices support both monolithic filters and filter lists. Filter lists separate each term, or set of terms, into a separate filter that is applied sequentially to an interface. If using filter lists, the keywords \"input\" or \"output\" change to \"input-list\" or \"output-list\". Verify the final list item is a deny-all filter. The deny-all filter is created once per family and can be reused across multiple lists. For example:\n\ninput-list [ permit_mgt permit_routing_protocols default-deny ];\n\nIf the router is not configured to use GTSM for all Exterior Border Gateway Protocol peering sessions, this is a finding.", "FixText": "Configure all Exterior Border Gateway Protocol peering sessions to use GTSM.\n\nset firewall family inet filter gtsm term 1 from protocol tcp\nset firewall family inet filter gtsm term 1 from ttl 255\nset firewall family inet filter gtsm term 1 from destination-port bgp\nset firewall family inet filter gtsm term 1 then accept\nset firewall family inet filter gtsm term 2 from protocol tcp\nset firewall family inet filter gtsm term 2 from destination-port bgp\nset firewall family inet filter gtsm term 2 then log\nset firewall family inet filter gtsm term 2 then syslog\nset firewall family inet filter gtsm term 2 then discard\n<additional accept terms>\nset firewall family inet filter gtsm term default then log\nset firewall family inet filter gtsm term default then syslog\nset firewall family inet filter gtsm term default then discard\n\nFor those platforms that support 'ttl-except':\nset firewall family inet filter gtsm term 1 from protocol tcp\nset firewall family inet filter gtsm term 1 from ttl-except 255\nset firewall family inet filter gtsm term 1 from destination-port bgp\nset firewall family inet filter gtsm term 1 then log\nset firewall family inet filter gtsm term 1 then syslog\nset firewall family inet filter gtsm term 1 then discard\n<additional accept terms>\nset firewall family inet filter gtsm term default then log\nset firewall family inet filter gtsm term default then syslog\nset firewall family inet filter gtsm term default then discard\n\nset interfaces <BGP interface> unit <number> family inet filter input gtsm\nset interfaces <BGP interface> unit <number> family inet address <IPv4 address>.<mask>", "CCI": "CCI-002385"}, {"VulnID": "V-254045", "RuleID": "SV-254045r844168_rule", "StigID": "JUEX-RT-000730", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000364-RTR-000109", "RuleTitle": "The Juniper perimeter router must be configured to only allow incoming communications from authorized sources to be routed to authorized destinations.", "Description": "<VulnDiscussion>Unrestricted traffic may contain malicious traffic that poses a threat to an enclave or to other connected networks. Additionally, unrestricted traffic may transit a network, which uses bandwidth and other resources.\n\nTraffic can be restricted directly by stateless firewall filter, or filter based forwarding. Filter based forwarding is a technique used to make routing decisions based on a number of different criteria other than just the destination network, including source or destination network, source or destination address, source or destination port, protocol, packet size, and packet classification. This overrides the router's normal routing procedures used to control the specific paths of network traffic. It is normally used for traffic engineering but can also be used to meet security requirements; for example, traffic that is not allowed can be routed to the discard interface. Filter based forwarding can also be used to control which prefixes appear in the routing table.\n\nThis requirement is intended to allow network administrators the flexibility to use whatever technique is most effective.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Unrestricted traffic may contain malicious traffic that poses a threat to an enclave or to other connected networks. Additionally, unrestricted traffic may transit a network, which uses bandwidth and other resources.\n\nTraffic can be restricted directly by stateless firewall filter, or filter based forwarding. Filter based forwarding is a technique used to make routing decisions based on a number of different criteria other than just the destination network, including source or destination network, source or destination address, source or destination port, protocol, packet size, and packet classification. This overrides the router's normal routing procedures used to control the specific paths of network traffic. It is normally used for traffic engineering but can also be used to meet security requirements; for example, traffic that is not allowed can be routed to the discard interface. Filter based forwarding can also be used to control which prefixes appear in the routing table.\n\nThis requirement is intended to allow network administrators the flexibility to use whatever technique is most effective.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "This requirement is not applicable for the DODIN Backbone.\n\nReview the router configuration to determine if the router allows only incoming communications from authorized sources to be routed to authorized destinations.\n\n[edit policy-options]\nprefix-list inside-addresses-ipv4 {\n    192.0.2.0/25;\n    192.0.2.130/32;\n}\nprefix-list inside-addresses-ipv6 {\n    2001:db8:1::/64;\n    2001:db8:a1::/64;\n}\n\n[edit firewall]\nfamily inet {\n    filter authorized-outbound-ipv4 {\n        <additional terms>\n        term permitted-source-addresses {\n            from {\n                source-prefix-list {\n                    inside-addresses-ipv4;\n                }\n            }\n            then accept;\n        }\n        term default-deny {\n            then {\n                log;\n                syslog;\n                discard;\n            }\n        }\n    }\n    filter authorized-inbound-ipv4 {\n        <additional terms>\n        term permitted-destination-addresses {\n            from {\n                destination-prefix-list {\n                    inside-addresses-ipv4;\n                }\n            }\n            then accept;\n        }\n        term default-deny {\n            then {\n                log;\n                syslog;\n                discard;\n            }\n        }\n    }\n}\nfamily inet6 {\n    filter authorized-outbound-ipv6 {\n        <additional terms>\n        term permitted-source-addresses {\n            from {\n                source-prefix-list {\n                    inside-addresses-ipv6;\n                }\n            }\n            then accept;\n        }\n        term default-deny {\n            then {\n                log;\n                syslog;\n                discard;\n            }\n        }\n    }\n    filter authorized-inbound-ipv6 {\n        <additional terms>\n        term permitted-destination-addresses {\n            from {\n                destination-prefix-list {\n                    inside-addresses-ipv6;\n                }\n            }\n            then accept;\n        }\n        term default-deny {\n            then {\n                log;\n                syslog;\n                discard;\n            }\n        }\n    }\n}\n\nNote: The same firewall filtering process can be configured to control traffic destined to the router, or between internal subnets.\n\nVerify the firewall filters are applied to the correct interface in the appropriate direction.\n[edit interfaces]\n<external interface> {\n    unit <number> {\n        family inet {\n            filter {\n                input authorized-inbound-ipv4;\n            }\n            address <IPv4 address>.<mask>;\n        }\n        family inet6 {\n            filter {\n                input authorized-inbound-ipv6;\n            }\n            address <IPv6 address>.<prefix>;\n        }\n    }\n}\n<internal interface> {\n    unit <number> {\n        family inet {\n            filter {\n                input authorized-outbound-ipv4;\n            }\n            address <IPv4 address>.<mask>;\n        }\n        family inet6 {\n            filter {\n                input authorized-outbound-ipv6;\n            }\n            address <IPv6 address>.<prefix>;\n        }\n    }\n}\n\nIf the router does not restrict incoming communications to allow only authorized sources and destinations, this is a finding.", "FixText": "This requirement is not applicable for the DODIN Backbone.\n\nConfigure the router to allow only incoming communications from authorized sources to be routed to authorized destinations.\n\nset policy-options prefix-list inside-addresses-ipv4 192.0.2.0/25\nset policy-options prefix-list inside-addresses-ipv4 192.0.2.130/32\nset policy-options prefix-list inside-addresses-ipv6 2001:db8:1::/64\nset policy-options prefix-list inside-addresses-ipv6 2001:db8:a1::/64\n\nset firewall family inet filter authorized-outbound-ipv4 <additional terms>\nset firewall family inet filter authorized-outbound-ipv4 term permitted-source-addresses from source-prefix-list inside-addresses-ipv4\nset firewall family inet filter authorized-outbound-ipv4 term permitted-source-addresses then accept\nset firewall family inet filter authorized-outbound-ipv4 term default-deny then log\nset firewall family inet filter authorized-outbound-ipv4 term default-deny then syslog\nset firewall family inet filter authorized-outbound-ipv4 term default-deny then discard\n\nset firewall family inet filter authorized-inbound-ipv4 <additional terms>\nset firewall family inet filter authorized-inbound-ipv4 term permitted-destination-addresses from destination-prefix-list inside-addresses-ipv4\nset firewall family inet filter authorized-inbound-ipv4 term permitted-destination-addresses then accept\nset firewall family inet filter authorized-inbound-ipv4 term default-deny then log\nset firewall family inet filter authorized-inbound-ipv4 term default-deny then syslog\nset firewall family inet filter authorized-inbound-ipv4 term default-deny then discard\n\nset firewall family inet6 filter authorized-outbound-ipv6 <additional terms>\nset firewall family inet6 filter authorized-outbound-ipv6 term permitted-source-addresses from source-prefix-list inside-addresses-ipv6\nset firewall family inet6 filter authorized-outbound-ipv6 term permitted-source-addresses then accept\nset firewall family inet6 filter authorized-outbound-ipv6 term default-deny then log\nset firewall family inet6 filter authorized-outbound-ipv6 term default-deny then syslog\nset firewall family inet6 filter authorized-outbound-ipv6 term default-deny then discard\n\nset firewall family inet6 filter authorized-inbound-ipv6 <additional terms>\nset firewall family inet6 filter authorized-inbound-ipv6 term permitted-destination-addresses from destination-prefix-list inside-addresses-ipv6\nset firewall family inet6 filter authorized-inbound-ipv6 term permitted-destination-addresses then accept\nset firewall family inet6 filter authorized-inbound-ipv6 term default-deny then log\nset firewall family inet6 filter authorized-inbound-ipv6 term default-deny then syslog\nset firewall family inet6 filter authorized-inbound-ipv6 term default-deny then discard\n\nset interfaces <external interface> unit <number> family inet filter input authorized-inbound-ipv4\nset interfaces <external interface> unit <number> family inet6 filter input authorized-inbound-ipv6\n\nset interfaces <internal interface> unit <number> family inet filter input authorized-outbound-ipv4\nset interfaces <internal interface> unit <number> family inet6 filter input authorized-outbound-ipv6", "CCI": "CCI-002403"}, {"VulnID": "V-254046", "RuleID": "SV-254046r844171_rule", "StigID": "JUEX-RT-000740", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000364-RTR-000110", "RuleTitle": "The Juniper perimeter router must be configured to block inbound packets with source Bogon IP address prefixes.", "Description": "<VulnDiscussion>Bogons include IP packets on the public internet that contain addresses that are not in any range allocated or delegated by the Internet Assigned Numbers Authority (IANA) or a delegated regional Internet registry (RIR) and allowed for public internet use. Bogons also include multicast, IETF reserved, and special purpose address space as defined in RFC 6890.\n\nSecurity of the internet's routing system relies on the ability to authenticate an assertion of unique control of an address block. Measures to authenticate such assertions rely on the validation the address block forms as part of an existing allocated address block, and must be a trustable and unique reference in the IANA address registries. The intended use of a Bogon address would only be for the purpose of address spoofing in denial-of-service attacks. Hence, it is imperative that IP packets with a source Bogon address are blocked at the network\u2019s perimeter.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Bogons include IP packets on the public internet that contain addresses that are not in any range allocated or delegated by the Internet Assigned Numbers Authority (IANA) or a delegated regional Internet registry (RIR) and allowed for public internet use. Bogons also include multicast, IETF reserved, and special purpose address space as defined in RFC 6890.\n\nSecurity of the internet's routing system relies on the ability to authenticate an assertion of unique control of an address block. Measures to authenticate such assertions rely on the validation the address block forms as part of an existing allocated address block, and must be a trustable and unique reference in the IANA address registries. The intended use of a Bogon address would only be for the purpose of address spoofing in denial-of-service attacks. Hence, it is imperative that IP packets with a source Bogon address are blocked at the network\u2019s perimeter.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "This requirement is not applicable for the DODIN Backbone. \n\nVerify that the ingress filter is blocking packets with Bogon source addresses. Bogon addresses are added to prefix lists to ease management, and prefix lists are associated with firewall filters. Verify appropriate prefix lists for IPv4 and IPv6 Bogon addresses. For example:\n[edit policy-options]\nprefix-list bogon-addresses-ipv4 {\n    /* This host on this network */\n    0.0.0.0/8;\n    /* CGN Addresses */\n    100.64.0.0/10;\n    /* Loopback */\n    127.0.0.0/8;\n    /* IPv4 link-local or APIPA */\n    169.254.0.0/16;\n    /* IETF Protocol Assignments */\n    192.0.0.0/24;\n    /* IPv4 documentation addresses: TEST-NET-1 */\n    192.0.2.0/24;\n    /* 6to4 Relay Anycast descr in RFC3068 */\n    192.88.99.0/24;\n    /* Benchmark testing descr in RFC2544 */\n    198.18.0.0/15;\n    /* IPv4 documentation addresses: TEST-NET-2 */\n    198.51.100.0/24;\n    /* IPv4 documentation addresses: TEST-NET-3 */\n    203.0.113.0/24;\n    /* Multicast */\n    224.0.0.0/24;\n    /* Reserved */\n    240.0.0.0/4;\n    /* RFC1918 Addresses */\n    10.0.0.0/8;\n    172.16.0.0/12;\n    192.168.0.0/16;\n    <add additional routes as needed>\n}\nroute-filter-list bogon-ipv6 {\n    /* Unspecified */\n    ::/128;\n    /* Loopback */\n    ::1/128;\n    /* IPv4 Compatible */\n    0::/96;\n    /* IPv4-mapped */\n    ::ffff:0:0/96;\n    /* 6Bone */\n    3ffe::/16;\n    /* IPv4-IPv6 Translate */\n    64:ff9b::/96;\n    /* Discard-Only */\n    100::/64;\n    /* ORCHID */\n    2001:10::/28;\n    /* Documentation */\n    2001:db8::/32;\n    /* Benchmarking */\n    2001:2::/48;\n    /* TEREDO */\n    2001::/32;\n    /* IETF Protocol Assignments */\n    2001::/23;\n    /* 6to4 */\n    2002::/16;\n    /* Unique-Local */\n    fc00::/7;\n    /* Site local (deprecated) - now reserved */\n    fec0::/10;\n    /* Multicast */\n    ff00::/8;\n    <add additional routes as needed>\n}\n\nNote: The comments associated with addresses is configured with the \"annotate\" command. Annotations will appear in the standard hierarchical configuration display but do not appear when using \"display set\". The annotations are not required but added to this check to show what each address represents.\n\nVerify IPv4 and IPv6 firewall filters incorporate Bogon address restrictions.\n[edit firewall]\nfamily inet {\n    filter inbound-ipv4 {\n        term 1 {\n            from {\n                source-prefix-list bogon-ipv4;\n            }\n            then {\n                log;\n                syslog;\n                discard;\n            }\n        }\n        <permitted traffic terms>\n    }\n}\nfamily inet6 {\n    filter inbound-ipv6 {\n        term 1 {\n            from {\n                source-prefix-list bogon-ipv6;\n            }\n            then {\n                log;\n                syslog;\n                discard;\n            }\n        }\n        <permitted traffic terms>\n    }\n}\n\nReview the router configuration to verify that it is configured to block IP packets with a Bogon source address. Verify the firewall filter enforcing Bogon restrictions is applied inbound on exterior-facing interfaces. For example:\n[edit interfaces]\n<interface name> {\n    unit <number> {\n        family inet {\n            filter {\n                input inbound-ipv4;\n            }\n            address <IPv4 address>/<mask>;\n        }\n        family inet6 {\n            filter {\n                input inbound-ipv6;\n            }\n            address <IPv6 address>/<prefix>;\n        }\n    }\n}\nNote: Some Juniper devices support both monolithic filters and filter lists. Filter lists separate each term, or set of terms, into a separate filter that is applied sequentially to an interface. If using filter lists, the keywords \"input\" or \"output\" change to \"input-list\" or \"output-list\". Verify the final list item is a deny-all filter. The deny-all filter is created once per family and can be reused across multiple lists. For example:\n\ninput-list [ permit_mgt permit_routing_protocols default-deny ];\n\nReference minimum IPv4 Bogon Prefixes\n0.0.0.0/8\n10.0.0.0/8\n100.64.0.0/10\n127.0.0.0/8\n169.254.0.0/16\n172.16.0.0/12\n192.0.0.0/24\n192.0.2.0/24  \n192.88.99.0/24\n192.168.0.0/16\n198.18.0.0/15 \n198.51.100.0/24\n203.0.113.0/24 \n224.0.0.0/4 \n240.0.0.0/4\n\nReference minimum IPv6 Bogon Prefixes\n::/128\n::1/128\n0::/96\n::ffff:0:0/96 \n3ffe::/16 \n64:ff9b::/96  \n100::/64   \n2001:10::/28   \n2001:db8::/32   \n2001:2::/48  \n2001::/32  \n2001::/23 \n2002::/16   \nfc00::/7 \nfe80::/10  \nfec0::/10  \nff00::/8\n     \nIf the router is not configured to block inbound IP packets containing a Bogon source address, this is a finding.\n\nNote: At a minimum, IP packets containing a source address from the special purpose address space as defined in RFC 6890 must be blocked. The 6Bone prefix (3ffe::/16) is also be considered a Bogon address. Perimeter routers connected to commercial ISPs for internet or other non-DoD network sources will need to be reviewed for a full Bogon list. \n\nThe IPv4 full Bogon list contains prefixes that have been allocated to RIRs but not assigned by those RIRs. Reference the following link: http://www.team-cymru.org/Services/Bogons/fullbogons-ipv4.txt\n\nThe IPv6 full Bogon list contains prefixes that have not been allocated to RIRs, or those that have been allocated to RIRs but have not been assigned by those RIRs. Reference the following link: https://www.team-cymru.org/Services/Bogons/fullbogons-ipv6.txt", "FixText": "This requirement is not applicable for the DODIN Backbone. \n\nConfigure the router to block inbound packets with Bogon source addresses.\n\nExample Bogon prefix lists:\nset policy-options prefix-list bogon-ipv4 0.0.0.0/8\nset policy-options prefix-list bogon-ipv4 10.0.0.0/8\nset policy-options prefix-list bogon-ipv4 100.64.0.0/10\nset policy-options prefix-list bogon-ipv4 127.0.0.0/8\nset policy-options prefix-list bogon-ipv4 169.254.0.0/16\nset policy-options prefix-list bogon-ipv4 172.16.0.0/12\nset policy-options prefix-list bogon-ipv4 192.0.0.0/24\nset policy-options prefix-list bogon-ipv4 192.0.2.0/24\nset policy-options prefix-list bogon-ipv4 192.88.99.0/24\nset policy-options prefix-list bogon-ipv4 192.168.0.0/16\nset policy-options prefix-list bogon-ipv4 198.18.0.0/15\nset policy-options prefix-list bogon-ipv4 198.51.100.0/24\nset policy-options prefix-list bogon-ipv4 203.0.113.0/24\nset policy-options prefix-list bogon-ipv4  224.0.0.0/24\nset policy-options prefix-list bogon-ipv4 240.0.0.0/4\n\nset policy-options prefix-list bogon-ipv6 ::/128\nset policy-options prefix-list bogon-ipv6 ::1/128\nset policy-options prefix-list bogon-ipv6 0::/96\nset policy-options prefix-list bogon-ipv6 ::ffff:0:0/96\nset policy-options prefix-list bogon-ipv6 3ffe::/16\nset policy-options prefix-list bogon-ipv6 64:ff9b::/96\nset policy-options prefix-list bogon-ipv6 100::/64\nset policy-options prefix-list bogon-ipv6 2001:10::/28\nset policy-options prefix-list bogon-ipv6 2001:db8::/32\nset policy-options prefix-list bogon-ipv6 2001:2::/48\nset policy-options prefix-list bogon-ipv6 2001::/32\nset policy-options prefix-list bogon-ipv6 2001::/23\nset policy-options prefix-list bogon-ipv6 2002::/16\nset policy-options prefix-list bogon-ipv6 fc00::/7\nset policy-options prefix-list bogon-ipv6 fec0::/10\nset policy-options prefix-list bogon-ipv6 ff00::/8\n\nExample firewall filters:\nset firewall family inet filter inbound-ipv4 term 1 from source-prefix-list bogon-ipv4\nset firewall family inet filter inbound-ipv4 term 1 then log\nset firewall family inet filter inbound-ipv4 term 1 then syslog\nset firewall family inet filter inbound-ipv4 term 1 then discard\nset firewall family inet filter inbound-ipv4 term <permitted traffic terms>\n\nset firewall family inet6 filter inbound-ipv6 term 1 from source-prefix-list bogon-ipv6\nset firewall family inet6 filter inbound-ipv6 term 1 then log\nset firewall family inet6 filter inbound-ipv6 term 1 then syslog\nset firewall family inet6 filter inbound-ipv6 term 1 then discard\nset firewall family inet6 filter inbound-ipv6 term <permitted traffic terms>\n\nExample application on external interfaces:\nset interfaces <interface name> unit <number> family inet filter input inbound-ipv4\nset interfaces <interface name> unit <number> family inet address <IPv4 address / mask>\n\nset interfaces <interface name> unit <number> family inet6 filter input inbound-ipv6\nset interfaces <interface name> unit <number> family inet6 address <IPv6 address / prefix>", "CCI": "CCI-002403"}, {"VulnID": "V-254047", "RuleID": "SV-254047r844174_rule", "StigID": "JUEX-RT-000750", "Severity": "low", "Cat": "CAT III", "Classification": "", "GroupTitle": "SRG-NET-000364-RTR-000111", "RuleTitle": "The Juniper perimeter router must be configured to have Link Layer Discovery Protocols (LLDPs) disabled on all external interfaces.", "Description": "<VulnDiscussion>LLDPs are primarily used to obtain protocol addresses of neighboring devices and discover platform capabilities of those devices. Use of SNMP with the LLDP Management Information Base (MIB) allows network management applications to learn the device type and the SNMP agent address of neighboring devices, thereby enabling the application to send SNMP queries to those devices. LLDPs are also media- and protocol-independent as they run over the data link layer; therefore, two systems that support different network-layer protocols can still learn about each other. Allowing LLDP messages to reach external network nodes is dangerous as it provides an attacker a method to obtain information of the network infrastructure that can be useful to plan an attack.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "LLDPs are primarily used to obtain protocol addresses of neighboring devices and discover platform capabilities of those devices. Use of SNMP with the LLDP Management Information Base (MIB) allows network management applications to learn the device type and the SNMP agent address of neighboring devices, thereby enabling the application to send SNMP queries to those devices. LLDPs are also media- and protocol-independent as they run over the data link layer; therefore, two systems that support different network-layer protocols can still learn about each other. Allowing LLDP messages to reach external network nodes is dangerous as it provides an attacker a method to obtain information of the network infrastructure that can be useful to plan an attack.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "This requirement is not applicable for the DODIN Backbone.\n\nReview all router configurations to ensure LLDPs are not included in the global configuration or LLDPs are not included for each active external interface. Examples of LLDPs are Cisco Discovery Protocol (CDP), Link Layer Discovery Protocol (LLDP), and Link Layer Discovery Protocol - Media Endpoint Discovery (LLDP-MED). Junos does not support CDP, but supports both LLDP and LLDP-MED, configured at [edit protocols]. Verify external interfaces are either not configured or explicitly disabled. For example:\n\nTo globally disable LLDP and LLDP-MED:\n[edit protocols]\n<no LLDP or LLDP-MED hierarchy>\n-or-\nlldp {\n    interface all {\n        disable;\n    }\n}\nlldp-med {\n    interface all {\n        disable;\n    }\n}\n\nIf LLDP or LLDP-MED is authorized, verify external interfaces are not configured or are explicitly disabled. For example:\n[edit protocols]\nlldp {\n    interface all {\n        disable;\n    }\n    interface ge-0/0/0; <<< Verify ge-0/0/0 is not an external interface.\n    interface ge-0/0/1 {\n        disable; <<< Assuming ge-0/0/1 is an external interface, it is disabled globally (interface all disable) or explicitly disabled as shown.\n    }\n}\nlldp-med {\n    interface all {\n        disable;\n    interface ge-0/0/0; <<< Verify ge-0/0/0 is not an external interface.\n    interface ge-0/0/1 {\n        disable; <<< Assuming ge-0/0/1 is an external interface, it is disabled globally (interface all disable) or explicitly disabled as shown.\n    }\n}\n\nNote: Both LLDP and LLDP-MED are globally disabled on all interfaces but Junos will apply the most specific configuration. Therefore, both LLDP and LLDP-MED are enabled only on ge-0/0/0 and disabled on all other interfaces as configured in the example.\n\nIf LLDPs are configured globally or on any external interface, this is a finding.", "FixText": "This requirement is not applicable for the DODIN Backbone.\n\nDisable LLDPs on all external interfaces.\n\nset protocols lldp interface all disable\nset protocols lldp interface <interior interface>\nset protocols lldp interface <exterior interface> disable\n\nset protocols lldp-med interface all disable\nset protocols lldp-med interface <interior interface>\nset protocols lldp-med interface <exterior interface> disable\n\nNote: The <exterior interface> disable command is not required if LLDP and LLDP-MED are globally disabled. However, the configured protocol status may be more apparent if each exterior interface is explicitly disabled.", "CCI": "CCI-002403"}, {"VulnID": "V-254048", "RuleID": "SV-254048r844177_rule", "StigID": "JUEX-RT-000760", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000364-RTR-000112", "RuleTitle": "The Juniper perimeter router must be configured to have Proxy ARP disabled on all external interfaces.", "Description": "<VulnDiscussion>When Proxy ARP is enabled on a router, it allows that router to extend the network (at layer 2) across multiple interfaces (LAN segments). Because proxy ARP allows hosts from different LAN segments to look like they are on the same segment, proxy ARP is only safe when used between trusted LAN segments. Attackers can leverage the trusting nature of proxy ARP by spoofing a trusted host and then intercepting packets. Proxy ARP should always be disabled on router interfaces that do not require it, unless the router is being used as a LAN bridge.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "When Proxy ARP is enabled on a router, it allows that router to extend the network (at layer 2) across multiple interfaces (LAN segments). Because proxy ARP allows hosts from different LAN segments to look like they are on the same segment, proxy ARP is only safe when used between trusted LAN segments. Attackers can leverage the trusting nature of proxy ARP by spoofing a trusted host and then intercepting packets. Proxy ARP should always be disabled on router interfaces that do not require it, unless the router is being used as a LAN bridge.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "This requirement is not applicable for the DODIN Backbone.\n\nReview the router configuration to determine if Proxy ARP is disabled on all external interfaces. By default, Proxy ARP is disabled on all interfaces. Verify \"proxy-arp\" has not been enabled on external interfaces as shown in the example:\n\n[edit interfaces]\n<external interface> {\n    unit 0 {\n        proxy-arp [restricted|unrestricted]; << Must not be configured on external interfaces.\n        <additional configuration>\n    }\n}\n\nIf Proxy ARP is enabled on any external interface, this is a finding.", "FixText": "This requirement is not applicable for the DODIN Backbone.\n\nDisable IP Proxy ARP on all external interfaces.\n\ndelete interfaces <external interface> unit 0 proxy-arp", "CCI": "CCI-002403"}, {"VulnID": "V-254049", "RuleID": "SV-254049r844180_rule", "StigID": "JUEX-RT-000770", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000364-RTR-000113", "RuleTitle": "The Juniper perimeter router must be configured to block all outbound management traffic.", "Description": "<VulnDiscussion>For in-band management, the management network must have its own subnet to enforce control and access boundaries provided by layer 3 network nodes, such as routers and firewalls. Management traffic between the managed network elements and the management network is routed via the same links and nodes as that used for production or operational traffic. Safeguards must be implemented to ensure that the management traffic does not leak past the perimeter of the managed network.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "For in-band management, the management network must have its own subnet to enforce control and access boundaries provided by layer 3 network nodes, such as routers and firewalls. Management traffic between the managed network elements and the management network is routed via the same links and nodes as that used for production or operational traffic. Safeguards must be implemented to ensure that the management traffic does not leak past the perimeter of the managed network.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "This requirement is not applicable for the DODIN Backbone.\n\nThe perimeter router of the managed network must be configured with a firewall filter on the egress interface to block all management traffic.\n\n[edit firewall]\nfamily inet {\n    filter <name> {\n        term block-UDP-MGT-SRC {\n            from {\n                protocol udp;\n                source-port [ snmp snmptrap 2055 9995 9996 ];\n            }\n            then {\n                syslog;\n                discard;\n            }\n        }\n        term block-TCP-MGT-SRC {\n            from {\n                protocol tcp;\n                source-port [ ssh tacacs ];\n            }\n            then {\n                syslog;\n                discard;\n            }\n        }\n        term block-UDP-MGT-DST {\n            from {\n                protocol udp;\n                destination-port [ snmp snmptrap 2055 9995 9996 ];\n            }\n            then {\n                syslog;\n                discard;\n            }\n        }\n        term block-TCP-MGT-DST {\n            from {\n                protocol tcp;\n                destination-port [ ssh tacacs ];\n            }\n            then {\n                syslog;\n                discard;\n            }\n        }\n        <additional terms>\n        term accept-other {\n            then accept;\n        }\n    }\n}\nfamily inet6 {\n    filter <name> {\n        term block-UDP-MGT-SRC {\n            from {\n                next-header udp;\n                source-port [ snmp snmptrap 2055 9995 9996 ];\n            }\n            then {\n                syslog;\n                discard;\n            }\n        }\n        term block-TCP-MGT-SRC {\n            from {\n                next-header tcp;\n                source-port [ ssh tacacs ];\n            }\n            then {\n                syslog;\n                discard;\n            }\n        }\n        term block-UDP-MGT-DST {\n            from {\n                next-header udp;\n                destination-port [ snmp snmptrap 2055 9995 9996 ];\n            }\n            then {\n                syslog;\n                discard;\n            }\n        }\n        term block-TCP-MGT-DST {\n            from {\n                next-header tcp;\n                destination-port [ ssh tacacs ];\n            }\n            then {\n                syslog;\n                discard;\n            }\n        }\n        <additional terms>\n        term accept-other {\n            then accept;\n        }\n    }\n}\n\nNote: Some platforms support the \"port\" match criterion. For those platforms, only a single term is required to flag on both source- and destination-port. For example:\n[edit firewall]\nfamily [inet|inet6] {\n    filter <name> {\n        term <name> {\n            from {\n                :\n                port [ port1 port2... ];\n            }\n            then {\n                syslog;\n                discard;\n            }\n        }\n        <additional terms>\n    }\n}\n\nVerify the filter is applied to external interfaces.\n[edit interfaces]\n<external interface> {\n    unit <number> {\n        family inet {\n            filter {\n                output <name>;\n            }\n            address <IPv4 address>/<mask>;\n        }\n        family inet6 {\n            filter {\n                output <name>;\n            }\n            address <IPv6 address>/<prefix>;\n        }\n    }\n}\nNote: Some Juniper devices support both monolithic filters and filter lists. Filter lists separate each term, or set of terms, into a separate filter that is applied sequentially to an interface. If using filter lists, the keywords \"input\" or \"output\" change to \"input-list\" or \"output-list\". Verify the final list item is a deny-all filter. The deny-all filter is created once per family and can be reused across multiple lists. For example:\n\ninput-list [ permit_mgt permit_routing_protocols default-deny ];\n\nIf management traffic is not blocked at the perimeter, this is a finding.", "FixText": "This requirement is not applicable for the DODIN Backbone.\n\nConfigure the perimeter router of the managed network with a firewall filter on the egress interface to block all outbound management traffic.\n\nset firewall family inet filter <name> term block-UDP-MGT-SRC from protocol udp\nset firewall family inet filter <name> term block-UDP-MGT-SRC from source-port [ snmp snmptrap 2055 9995 9996 ]\nset firewall family inet filter <name> term block-UDP-MGT-SRC then syslog \nset firewall family inet filter <name> term block-UDP-MGT-SRC then discard \nset firewall family inet filter <name> term block-TCP-MGT-SRC from protocol tcp\nset firewall family inet filter <name> term block-TCP-MGT-SRC from source-port [ ssh tacacs ]\nset firewall family inet filter <name> term block-TCP-MGT-SRC then syslog \nset firewall family inet filter <name> term block-TCP-MGT-SRC then discard \nset firewall family inet filter <name> term block-UDP-MGT-DST from protocol udp\nset firewall family inet filter <name> term block-UDP-MGT-DST from destination-port [ snmp snmptrap 2055 9995 9996 ]\nset firewall family inet filter <name> term block-UDP-MGT-DST then syslog \nset firewall family inet filter <name> term block-UDP-MGT-DST then discard \nset firewall family inet filter <name> term block-TCP-MGT-DST from protocol tcp\nset firewall family inet filter <name> term block-TCP-MGT-DST from destination-port [ ssh tacacs ]\nset firewall family inet filter <name> term block-TCP-MGT-DST then syslog \nset firewall family inet filter <name> term block-TCP-MGT-DST then discard \n<additional terms>\nset firewall family inet filter <name> term accept-others then accept \n\nset firewall family inet6 filter <name> term block-UDP-MGT-SRC from next-header udp\nset firewall family inet6 filter <name> term block-UDP-MGT-SRC from source-port [ snmp snmptrap 2055 9995 9996 ]\nset firewall family inet6 filter <name> term block-UDP-MGT-SRC then syslog \nset firewall family inet6 filter <name> term block-UDP-MGT-SRC then discard \nset firewall family inet6 filter <name> term block-TCP-MGT-SRC from next-header tcp\nset firewall family inet6 filter <name> term block-TCP-MGT-SRC from source-port [ ssh tacacs ]\nset firewall family inet6 filter <name> term block-TCP-MGT-SRC then syslog \nset firewall family inet6 filter <name> term block-TCP-MGT-SRC then discard \nset firewall family inet6 filter <name> term block-UDP-MGT-DST from next-header udp\nset firewall family inet6 filter <name> term block-UDP-MGT-DST from destination-port [ snmp snmptrap 2055 9995 9996 ]\nset firewall family inet6 filter <name> term block-UDP-MGT-DST then syslog \nset firewall family inet6 filter <name> term block-UDP-MGT-DST then discard \nset firewall family inet6 filter <name> term block-TCP-MGT-DST from next-header tcp\nset firewall family inet6 filter <name> term block-TCP-MGT-DST from destination-port [ ssh tacacs ]\nset firewall family inet6 filter <name> term block-TCP-MGT-DST then syslog \nset firewall family inet6 filter <name> term block-TCP-MGT-DST then discard \n<additional terms>\nset firewall family inet6 filter <name> term accept-others then accept \n\nset interfaces <external interface> unit <number> family inet filter output <name>\nset interfaces <external interface> unit <number> family inet address <IPv4 address>/<mask>\nset interfaces <external interface> unit <number> family inet6 filter output <name>\nset interfaces <external interface> unit <number> family inet6 address <IPv6 address>/<prefix>", "CCI": "CCI-001097"}, {"VulnID": "V-254050", "RuleID": "SV-254050r844262_rule", "StigID": "JUEX-RT-000780", "Severity": "low", "Cat": "CAT III", "Classification": "", "GroupTitle": "SRG-NET-000364-RTR-000114", "RuleTitle": "The Juniper multicast Designated Router (DR) must be configured to filter the IGMP and MLD Report messages to allow hosts to join only multicast groups that have been approved by the organization.", "Description": "<VulnDiscussion>Real-time multicast traffic can entail multiple large flows of data. Large unicast flows tend to be fairly isolated (i.e., someone downloading a file here or there), whereas multicast can have broader impact on bandwidth consumption, resulting in extreme network congestion. Hence, it is imperative that there is multicast admission control to restrict which multicast groups hosts are allowed to join via IGMP or MLD.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Real-time multicast traffic can entail multiple large flows of data. Large unicast flows tend to be fairly isolated (i.e., someone downloading a file here or there), whereas multicast can have broader impact on bandwidth consumption, resulting in extreme network congestion. Hence, it is imperative that there is multicast admission control to restrict which multicast groups hosts are allowed to join via IGMP or MLD.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the configuration of the DR to verify that it is filtering IGMP or MLD report messages, allowing hosts to join only those groups that have been approved.\n\nNote: This requirement is only applicable to Source Specific Multicast (SSM) implementation. This requirement is not applicable to Any Source Multicast (ASM) since the filtering is being performed by the Rendezvous Point router.\n\n[edit policy-options]\npolicy-statement <name> {\n    term unauth-groups {\n        from {\n            route-filter 224.0.1.2/32 exact;\n            route-filter 224.0.2.2/32 exact;\n        }\n        then reject;\n    }\n    term allow-others {\n        then accept;\n    }\n}\npolicy-statement <name IPv6> {\n    term unauth-groups {\n        from {\n            route-filter fec0:1:1:4::/64 exact;\n        }\n        then reject;\n    }\n    term allow-others {\n        then accept;\n    }\n}\n\n[edit protocols]\nigmp {\n    interface <name>.<logical unit> {\n        group-policy <policy name>;\n    }\n}\nmld {\n    interface <name>.<logical unit> {\n        group-policy <policy name IPv6>;\n    }\n}\n\nIf the DR is not filtering IGMP or MLD report messages, this is a finding.", "FixText": "Configure the DR to filter the IGMP and MLD report messages to allow hosts to join only those multicast groups that have been approved.\n\nset policy-options policy-statement <name> term unauth-groups from route-filter 224.0.1.2/32 exact\nset policy-options policy-statement <name> term unauth-groups from route-filter 224.0.2.2/32 exact\nset policy-options policy-statement <name> term unauth-groups then reject\nset policy-options policy-statement <name> term accept-others then accept\n\nset policy-options policy-statement <name IPv6> term unauth-groups from route-filter fec0:1:1:4::/64 exact\nset policy-options policy-statement <name IPv6> term unauth-groups then reject\nset policy-options policy-statement <name IPv6> term accept-others then accept\n\nset protocols igmp interface <name>.<logical unit> group-policy <policy name>\nset protocols mld interface <name>.<logical unit> group-policy <policy name IPv6>", "CCI": "CCI-002403"}, {"VulnID": "V-254051", "RuleID": "SV-254051r844263_rule", "StigID": "JUEX-RT-000790", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000364-RTR-000115", "RuleTitle": "The Juniper multicast Designated Router (DR) must be configured to filter the IGMP and MLD Report messages to allow hosts to join a multicast group only from sources that have been approved by the organization.", "Description": "<VulnDiscussion>Real-time multicast traffic can entail multiple large flows of data. Large unicast flows tend to be fairly isolated (i.e., someone downloading a file here or there), whereas multicast can have broader impact on bandwidth consumption, resulting in extreme network congestion. Hence, it is imperative that there is multicast admission control to restrict which multicast groups hosts are allowed to join via IGMP or MLD.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Real-time multicast traffic can entail multiple large flows of data. Large unicast flows tend to be fairly isolated (i.e., someone downloading a file here or there), whereas multicast can have broader impact on bandwidth consumption, resulting in extreme network congestion. Hence, it is imperative that there is multicast admission control to restrict which multicast groups hosts are allowed to join via IGMP or MLD.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the configuration of the DR to verify that it is filtering IGMP or MLD report messages, allowing hosts to only join multicast groups from sources that have been approved.\n\nNote: This requirement is only applicable to Source Specific Multicast (SSM) implementation.\n\n[edit policy-options]\npolicy-statement <name> {\n    term unauth-sources {\n        from {\n            source-address-filter <IPv4 address>/<mask> orlonger;\n        }\n        then reject;\n    }\n    term allow-others {\n        then accept;\n    }\n}\npolicy-statement <name IPv6> {\n    term unauth-sources {\n        from {\n            source-address-filter <IPv6 address>/<prefix> orlonger;\n        }\n        then reject;\n    }\n    term allow-others {\n        then accept;\n    }\n}\n\n[edit protocols]\nigmp {\n    interface <name>/<logical unit> {\n        group-policy <policy name>;\n    }\n}\nmld {\n    interface <name>/<logical unit> {\n        group-policy <policy name IPv6>;\n    }\n}\n\nIf the DR is not filtering IGMP or MLD report messages, this is a finding.", "FixText": "Configure the DR to filter the IGMP and MLD report messages to allow hosts to join only those multicast groups from sources that have been approved.\n\nset policy-options policy-statement <name> term unauth-sources from source-address-filter <IPv4 address>/<mask> orlonger\nset policy-options policy-statement <name> term unauth-sources then reject\nset policy-options policy-statement <name> term accept-others then accept\n\nset policy-options policy-statement <name IPv6> term unauth-sources from source-address-filter <IPv6 address>/<prefix> orlonger\nset policy-options policy-statement <name IPv6> term unauth-sources then reject\nset policy-options policy-statement <name IPv6> term accept-others then accept\n\nset protocols igmp interface <name>.<logical unit> group-policy <policy name>\nset protocols mld interface <name>.<logical unit> group-policy <policy name IPv6>", "CCI": "CCI-002403"}, {"VulnID": "V-254052", "RuleID": "SV-254052r844189_rule", "StigID": "JUEX-RT-000800", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000364-RTR-000116", "RuleTitle": "The Juniper Multicast Source Discovery Protocol (MSDP) router must be configured to only accept MSDP packets from known MSDP peers.", "Description": "<VulnDiscussion>MSDP peering with customer network routers presents additional risks to the DISN Core, whether from a rogue or misconfigured MSDP-enabled router. To guard against an attack from malicious MSDP traffic, the receive path or interface filter for all MSDP-enabled RP routers must be configured to only accept MSDP packets from known MSDP peers.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "MSDP peering with customer network routers presents additional risks to the DISN Core, whether from a rogue or misconfigured MSDP-enabled router. To guard against an attack from malicious MSDP traffic, the receive path or interface filter for all MSDP-enabled RP routers must be configured to only accept MSDP packets from known MSDP peers.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the router configuration to determine if there is a receive path or interface filter to only accept MSDP packets from known MSDP peers.\n\n[edit firewall]\nfamily inet {\n    filter <name> {\n        term 1 {\n            from {\n                source-prefix-list {\n                    msdp-peers; \n                }\n                protocol tcp;\n                destination-port msdp;\n            }\n            then accept;\n        }\n        term 2 {\n            from {\n                source-prefix-list {\n                    msdp-peers;\n                }\n                protocol tcp;\n                source-port msdp;\n            }\n            then accept;\n        }\n        <additional terms>\n        term default {\n            then {\n                syslog;\n                discard;\n            }\n        }\n    }\n}\nfamily inet6 {\n    filter <name> {\n        term 1 {\n            from {\n                source-prefix-list {\n                    msdp-peers-ipv6;\n                }\n                next-header tcp;\n                destination-port msdp;\n            }\n            then accept;\n        }\n        term 2 {\n            from {\n                source-prefix-list {\n                    msdp-peers-ipv6;\n                }\n                next-header tcp;\n                source-port msdp;\n            }\n            then accept;\n        }\n        <additional terms>\n        term default {\n            then {\n                syslog;\n                discard;\n            }\n        }\n    }\n}\n\nNote: Some platforms support the \"port\" keyword that filters on both source- and destination-port, which eliminates the need for separate terms. For instance:\nfilter <name> {\n    term 1 {\n        from {\n            source-prefix-list {\n                <prefix list name>;\n            }\n            [protocol|next-header] tcp;\n            port msdp;\n        }\n        then accept;\n    }\n    <additional terms>\n    term default {\n        then {\n            syslog;\n            discard;\n        }\n    }\n}\n\nVerify the filter is applied to external interfaces or loopback.\n[edit interfaces]\n<external interface> {\n    unit <number> {\n        family inet {\n            filter {\n                input <IPv4 filter name>;\n            }\n            address <IPv4 address>/<mask>;\n        }\n        family inet6 {\n            filter {\n                input <IPv6 filter name>;\n            }\n            address <IPv6 address>/<prefix>;\n        }\n    }\n}\nlo0 {\n    unit <number> {\n        family inet {\n            filter {\n                input <IPv4 filter name>;\n            }\n            address <IPv4 address>/32;\n        }\n        family inet6 {\n            filter {\n                input <IPv6 filter name>;\n            }\n            address <IPv6 address>/128;\n        }\n    }\n}\nNote: Some Juniper devices support both monolithic filters and filter lists. Filter lists separate each term, or set of terms, into a separate filter that is applied sequentially to an interface. If using filter lists, the keywords \"input\" or \"output\" change to \"input-list\" or \"output-list\". Verify the final list item is a deny-all filter. The deny-all filter is created once per family and can be reused across multiple lists. For example:\n\ninput-list [ permit_mgt permit_routing_protocols default-deny ];\n\nIf the router is not configured to only accept MSDP packets from known MSDP peers, this is a finding.", "FixText": "Ensure the receive path or interface filter for all MSDP routers only accepts MSDP packets from known MSDP peers.\n\nset firewall family inet filter <name> term 1 from source-prefix-list msdp-peers\nset firewall family inet filter <name> term 1 from protocol tcp\nset firewall family inet filter <name> term 1 from destination-port msdp\nset firewall family inet filter <name> term 1 then accept\nset firewall family inet filter <name> term 2 from source-prefix-list msdp-peers\nset firewall family inet filter <name> term 2 from protocol tcp\nset firewall family inet filter <name> term 2 from source-port msdp\nset firewall family inet filter <name> term 2 then accept\n<additional terms>\nset firewall family inet filter <name> term default then syslog\nset firewall family inet filter <name> term default then discard\n\nset firewall family inet6 filter <name> term 1 from source-prefix-list msdp-peers-ipv6\nset firewall family inet6 filter <name> term 1 from next-header tcp\nset firewall family inet6 filter <name> term 1 from destination-port msdp\nset firewall family inet6 filter <name> term 1 then accept\nset firewall family inet6 filter <name> term 2 from source-prefix-list msdp-peers-ipv6\nset firewall family inet6 filter <name> term 2 from next-header tcp\nset firewall family inet6 filter <name> term 2 from source-port msdp\nset firewall family inet6 filter <name> term 2 then accept\n<additional terms>\nset firewall family inet6 filter <name> term default then syslog\nset firewall family inet6 filter <name> term default then discard\n\nset interfaces <external interface> unit <number> family inet filter input <IPv4 filter name>\nset interfaces <external interface> unit <number> family inet address <IPv4 address>/<mask>\nset interfaces <external interface> unit <number> family inet6 filter input <IPv6 filter name>\nset interfaces <external interface> unit <number> family inet6 address <IPv6 address>/<prefix>\n\nset interfaces lo0 unit <number> family inet filter input <IPv4 filter name>\nset interfaces lo0 unit <number> family inet address <IPv4 address>/32\nset interfaces lo0 unit <number> family inet6 filter input <IPv6 filter name>\nset interfaces lo0 unit <number> family inet6 address <IPv6 address>/128", "CCI": "CCI-002403"}, {"VulnID": "V-254053", "RuleID": "SV-254053r844192_rule", "StigID": "JUEX-RT-000810", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000364-RTR-000200", "RuleTitle": "The Juniper perimeter router must be configured to drop fragmented IPv6 packets where the first fragment does not include the entire IPv6 header chain.", "Description": "<VulnDiscussion>One of the fragmentation weaknesses known in IPv6 is the \"undetermined transport\" packet, which is the first fragment where the entire IPv6 header chain is not included. Fragmenting IPv6 datagrams and not including the upper-layer header makes it difficult to identify the traffic. \n\nRFC7112 and RFC8200 require the entire IPv6 header chain be present in the first fragment and defines the header chain as:\n\"The IPv6 Header Chain contains an initial IPv6 header, zero or more IPv6 Extension Headers, and optionally, a single upper-layer header. If an upper-layer header is present, it terminates the header chain; otherwise, the \"No Next Header\" value (Next Header = 59) terminates it.\"\n\nBoth RFCs consider a second IPv6 header and an ESP header as \"upper-layer headers\" when determining where the IPv6 header chain terminates.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "One of the fragmentation weaknesses known in IPv6 is the \"undetermined transport\" packet, which is the first fragment where the entire IPv6 header chain is not included. Fragmenting IPv6 datagrams and not including the upper-layer header makes it difficult to identify the traffic. \n\nRFC7112 and RFC8200 require the entire IPv6 header chain be present in the first fragment and defines the header chain as:\n\"The IPv6 Header Chain contains an initial IPv6 header, zero or more IPv6 Extension Headers, and optionally, a single upper-layer header. If an upper-layer header is present, it terminates the header chain; otherwise, the \"No Next Header\" value (Next Header = 59) terminates it.\"\n\nBoth RFCs consider a second IPv6 header and an ESP header as \"upper-layer headers\" when determining where the IPv6 header chain terminates.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "This requirement is not applicable for the DODIN Backbone. \n\nThere is no check for dropping RFC 7112 nonconformant fragmented IPv6 packets because Juniper EX switches drop these packets without offering or requiring a configurable option in the CLI.\n\nReview the router configuration to determine if it is configured to drop fragmented transit IPv6 traffic.\n\n[edit firewall family inet6]\nfilter <filter name> {\n    term <name> {\n        from {\n            next-header fragment;\n        }\n        then {\n            syslog;\n            discard;\n        }\n    }\n}\n\nNote: Some platforms also support \"is-fragment\" or \"fragment-flags is-fragment\" in addition to \"next-header fragment\" as shown in the example.\n\nIf the router is not configured to drop first-fragment IPv6 packets without the entire header chain, this is a finding.", "FixText": "Configure the router to drop first-fragment IPv6 packets without the entire header chain.\n\nThere is no configurable CLI option to prevent EX devices from dropping nonconformant fragmented IPv6 packets destined to the device.\n\nConfigure the router to drop fragmented transit IPv6 packets.\n\nset firewall family inet6 filter <name> term <name> from next-header fragment\nset firewall family inet6 filter <name> term <name> then syslog\nset firewall family inet6 filter <name> term <name> then discard", "CCI": "CCI-002403"}, {"VulnID": "V-254054", "RuleID": "SV-254054r844195_rule", "StigID": "JUEX-RT-000820", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000364-RTR-000201", "RuleTitle": "The Juniper perimeter router must be configured drop IPv6 packets with a Routing Header type 0, 1, or 3255.", "Description": "<VulnDiscussion>The routing header can be used maliciously to send a packet through a path where less robust security is in place, rather than through the presumably preferred path of routing protocols. Use of the routing extension header has few legitimate uses other than as implemented by Mobile IPv6. \n\nThe Type 0 Routing Header (RFC 5095) is dangerous because it allows attackers to spoof source addresses and obtain traffic in response, rather than the real owner of the address. Secondly, a packet with an allowed destination address could be sent through a Firewall using the Routing Header functionality, only to bounce to a different node once inside. The Type 1 Routing Header is defined by a specification called \"Nimrod Routing\", a discontinued project funded by DARPA. Assuming that most implementations will not recognize the Type 1 Routing Header, it must be dropped. The Type 3\u2013255 Routing Header values in the routing type field are currently undefined and should be dropped inbound and outbound.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "The routing header can be used maliciously to send a packet through a path where less robust security is in place, rather than through the presumably preferred path of routing protocols. Use of the routing extension header has few legitimate uses other than as implemented by Mobile IPv6. \n\nThe Type 0 Routing Header (RFC 5095) is dangerous because it allows attackers to spoof source addresses and obtain traffic in response, rather than the real owner of the address. Secondly, a packet with an allowed destination address could be sent through a Firewall using the Routing Header functionality, only to bounce to a different node once inside. The Type 1 Routing Header is defined by a specification called \"Nimrod Routing\", a discontinued project funded by DARPA. Assuming that most implementations will not recognize the Type 1 Routing Header, it must be dropped. The Type 3\u2013255 Routing Header values in the routing type field are currently undefined and should be dropped inbound and outbound.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "This requirement is not applicable for the DODIN Backbone. \n\nReview the router configuration to determine if it is configured to drop IPv6 packets containing a Routing Header of type 0, 1, or 3\u2013255.\n\n[edit firewall family inet6]\nfilter <name> {\n    term 1 {\n        from {\n            next-header routing;\n        }\n        then {\n            log;\n            syslog;\n            discard;\n        }\n    }\n    <additional terms>\n    term default {\n        then {\n            log;\n            syslog;\n            discard;\n        }\n    }\n}\n\nNote: Juniper routers do not support configuring option types for Routing extension headers. Therefore, all packets with the Routing extension header are dropped.\n\nVerify the filter is applied to applicable interfaces.\n[edit interfaces]\n<interface name> {\n    unit <number> {\n        family inet6 {\n            filter {\n                input <filter name>;\n            }\n            address <IPv6 address>.<prefix>;\n        }\n    }\n}\nNote: Some Juniper devices support both monolithic filters and filter lists. Filter lists separate each term, or set of terms, into a separate filter that is applied sequentially to an interface. If using filter lists, the keywords \"input\" or \"output\" change to \"input-list\" or \"output-list\". Verify the final list item is a deny-all filter. The deny-all filter is created once per family and can be reused across multiple lists. For example:\n\ninput-list [ permit_mgt permit_routing_protocols default-deny ];\n\nIf the router is not configured to drop IPv6 packets containing a Routing Header of type 0, 1, or 3\u2013255, this is a finding.", "FixText": "Configure the router to drop IPv6 packets with Routing Header of type 0, 1, or 3\u2013255.\n\nset firewall family inet6 filter <name> term 1 from next-header routing\nset firewall family inet6 filter <name> term 1 then log\nset firewall family inet6 filter <name> term 1 then syslog\nset firewall family inet6 filter <name> term 1 then discard\n<additional terms>\nset firewall family inet6 filter <name> term default then log\nset firewall family inet6 filter <name> term default then syslog\nset firewall family inet6 filter <name> term default then discard\n\nset interfaces <interface name> unit <number> family inet6 filter input <filter name>\nset interfaces <interface name> unit <number> family inet6 address <IPv6 address>.<prefix>", "CCI": "CCI-002403"}, {"VulnID": "V-254055", "RuleID": "SV-254055r844198_rule", "StigID": "JUEX-RT-000830", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000364-RTR-000202", "RuleTitle": "The Juniper perimeter router must be configured to drop IPv6 packets containing a Hop-by-Hop header with invalid option type values.", "Description": "<VulnDiscussion>These options are intended to be for the Destination Options header only. The optional and extensible natures of the IPv6 extension headers require higher scrutiny since many implementations do not always drop packets with headers that it cannot recognize and hence could cause a denial-of-service on the target device. In addition, the type, length, value (TLV) formatting provides the ability for headers to be very large.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "These options are intended to be for the Destination Options header only. The optional and extensible natures of the IPv6 extension headers require higher scrutiny since many implementations do not always drop packets with headers that it cannot recognize and hence could cause a denial-of-service on the target device. In addition, the type, length, value (TLV) formatting provides the ability for headers to be very large.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "This requirement is not applicable for the DODIN Backbone. \n\nReview the router configuration to determine if filters are bound to the applicable interfaces to drop IPv6 packets containing a Hop-by-Hop header with option type values of 0x04 (Tunnel Encapsulation Limit), 0xC9 (Home Address Destination), or 0xC3 (NSAP Address). \n\n[edit firewall family inet6]\nfilter <name> {\n    term 1 {\n        from {\n            next-header [ hop-by-hop dstopts ];\n        }\n        then {\n            log;\n            syslog;\n            discard;\n        }\n    }\n    <additional terms>\n    term default {\n        then {\n            log;\n            syslog;\n            discard;\n        }\n    }\n}\n\nNote: Juniper routers do not support configuring option types for Hop-by-Hop or Destination Options extension headers. Therefore, all packets with the Hop-by-Hop or Destination Options extension header are dropped.\n\nVerify the filter is applied to applicable interfaces.\n[edit interfaces]\n<interface name> {\n    unit <number> {\n        family inet6 {\n            filter {\n                input <filter name>;\n            }\n            address <IPv6 address>.<prefix>;\n        }\n    }\n}\nNote: Some Juniper devices support both monolithic filters and filter lists. Filter lists separate each term, or set of terms, into a separate filter that is applied sequentially to an interface. If using filter lists, the keywords \"input\" or \"output\" change to \"input-list\" or \"output-list\". Verify the final list item is a deny-all filter. The deny-all filter is created once per family and can be reused across multiple lists. For example:\n\ninput-list [ permit_mgt permit_routing_protocols default-deny ];\n\nIf the router is not configured to drop IPv6 packets containing a Hop-by-Hop header with invalid option type values, this is a finding.", "FixText": "Configure the router to drop IPv6 packets containing a Hop-by-Hop header with option type values of 0x04 (Tunnel Encapsulation Limit), 0xC9 (Home Address Destination), or 0xC3 (NSAP Address).\n\nset firewall family inet6 filter <name> term 1 from next-header hop-by-hop\nset firewall family inet6 filter <name> term 1 from next-header dstopts\nset firewall family inet6 filter <name> term 1 then log\nset firewall family inet6 filter <name> term 1 then syslog\nset firewall family inet6 filter <name> term 1 then discard\n<additional terms>\nset firewall family inet6 filter <name> term default then log\nset firewall family inet6 filter <name> term default then syslog\nset firewall family inet6 filter <name> term default then discard\n\nset interfaces <interface name> unit <number> family inet6 filter input <filter name>\nset interfaces <interface name> unit <number> family inet6 address <IPv6 address>.<prefix>", "CCI": "CCI-002403"}, {"VulnID": "V-254056", "RuleID": "SV-254056r844201_rule", "StigID": "JUEX-RT-000840", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000364-RTR-000203", "RuleTitle": "The Juniper perimeter router must be configured to drop IPv6 packets containing a Destination Option header with invalid option type values.", "Description": "<VulnDiscussion>These options are intended to be for the Hop-by-Hop header only. The optional and extensible natures of the IPv6 extension headers require higher scrutiny since many implementations do not always drop packets with headers that it cannot recognize. Hence, this could cause a denial-of-service on the target device. In addition, the type, length, value (TLV) formatting provides the ability for headers to be very large.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "These options are intended to be for the Hop-by-Hop header only. The optional and extensible natures of the IPv6 extension headers require higher scrutiny since many implementations do not always drop packets with headers that it cannot recognize. Hence, this could cause a denial-of-service on the target device. In addition, the type, length, value (TLV) formatting provides the ability for headers to be very large.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "This requirement is not applicable for the DODIN Backbone. \n\nReview the router configuration and determine if filters are bound to the external interfaces to drop IPv6 packets containing a Destination Option header with option type values of 0x05 (Router Alert) or 0xC2 (Jumbo Payload). \n\n[edit firewall family inet6]\nfilter <name> {\n    term 1 {\n        from {\n            next-header [ hop-by-hop dstopts ];\n        }\n        then {\n            log;\n            syslog;\n            discard;\n        }\n    }\n    <additional terms>\n    term default {\n        then {\n            log;\n            syslog;\n            discard;\n        }\n    }\n}\n\nNote: Juniper routers do not support configuring option types for Hop-by-Hop or Destination Options extension headers. Therefore, all packets with the Hop-by-Hop or Destination Options extension header are dropped.\n\nVerify the filter is applied to applicable interfaces.\n[edit interfaces]\n<interface name> {\n    unit <number> {\n        family inet6 {\n            filter {\n                input <filter name>;\n            }\n            address <IPv6 address>.<prefix>;\n        }\n    }\n}\nNote: Some Juniper devices support both monolithic filters and filter lists. Filter lists separate each term, or set of terms, into a separate filter that is applied sequentially to an interface. If using filter lists, the keywords \"input\" or \"output\" change to \"input-list\" or \"output-list\". Verify the final list item is a deny-all filter. The deny-all filter is created once per family and can be reused across multiple lists. For example:\n\ninput-list [ permit_mgt permit_routing_protocols default-deny ];\n\nIf the router is not configured to drop IPv6 packets containing a Destination Option header with invalid option type values, this is a finding.", "FixText": "Configure the router to drop IPv6 packets containing a Destination Option header with option type values of 0x05 (Router Alert) or 0xC2 (Jumbo Payload).\n\nset firewall family inet6 filter <name> term 1 from next-header hop-by-hop\nset firewall family inet6 filter <name> term 1 from next-header dstopts\nset firewall family inet6 filter <name> term 1 then log\nset firewall family inet6 filter <name> term 1 then syslog\nset firewall family inet6 filter <name> term 1 then discard\n<additional terms>\nset firewall family inet6 filter <name> term default then log\nset firewall family inet6 filter <name> term default then syslog\nset firewall family inet6 filter <name> term default then discard\n\nset interfaces <interface name> unit <number> family inet6 filter input <filter name>\nset interfaces <interface name> unit <number> family inet6 address <IPv6 address>.<prefix>", "CCI": "CCI-002403"}, {"VulnID": "V-254057", "RuleID": "SV-254057r844204_rule", "StigID": "JUEX-RT-000850", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000364-RTR-000204", "RuleTitle": "The Juniper perimeter router must be configured to drop IPv6 packets containing an extension header with the Endpoint Identification option.", "Description": "<VulnDiscussion>The optional and extensible natures of the IPv6 extension headers require higher scrutiny since many implementations do not always drop packets with headers that it cannot recognize, and hence could cause a denial-of-service on the target device. In addition, the type, length, value (TLV) formatting provides the ability for headers to be very large. This option type is associated with the Nimrod Routing system and has no defining RFC document.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "The optional and extensible natures of the IPv6 extension headers require higher scrutiny since many implementations do not always drop packets with headers that it cannot recognize, and hence could cause a denial-of-service on the target device. In addition, the type, length, value (TLV) formatting provides the ability for headers to be very large. This option type is associated with the Nimrod Routing system and has no defining RFC document.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "This requirement is not applicable for the DODIN Backbone. \n\nReview the router switch configuration and determine if filters are bound to the applicable interfaces to drop IPv6 packets containing an option type values of 0x8A (Endpoint Identification) regardless of whether it appears in a Hop-by-Hop or Destination Option header. \n\n[edit firewall family inet6]\nfilter <name> {\n    term 1 {\n        from {\n            next-header [ hop-by-hop dstopts ];\n        }\n        then {\n            log;\n            syslog;\n            discard;\n        }\n    }\n    <additional terms>\n    term default {\n        then {\n            log;\n            syslog;\n            discard;\n        }\n    }\n}\n\nNote: Juniper routers do not support configuring option types for Hop-by-Hop or Destination Options extension headers. Therefore, all packets with the Hop-by-Hop or Destination Options extension header are dropped.\n\nVerify the filter is applied to applicable interfaces.\n[edit interfaces]\n<interface name> {\n    unit <number> {\n        family inet6 {\n            filter {\n                input <filter name>;\n            }\n            address <IPv6 address>.<prefix>;\n        }\n    }\n}\nNote: Some Juniper devices support both monolithic filters and filter lists. Filter lists separate each term, or set of terms, into a separate filter that is applied sequentially to an interface. If using filter lists, the keywords \"input\" or \"output\" change to \"input-list\" or \"output-list\". Verify the final list item is a deny-all filter. The deny-all filter is created once per family and can be reused across multiple lists. For example:\n\ninput-list [ permit_mgt permit_routing_protocols default-deny ];\n\nIf the router is not configured to drop IPv6 packets containing an extension header with the Endpoint Identification option, this is a finding.", "FixText": "Configure the router to drop IPv6 packets containing an option type values of 0x8A (Endpoint Identification) regardless of whether it appears in a Hop-by-Hop or Destination Option header.\n\nset firewall family inet6 filter <name> term 1 from next-header hop-by-hop\nset firewall family inet6 filter <name> term 1 from next-header dstopts\nset firewall family inet6 filter <name> term 1 then log\nset firewall family inet6 filter <name> term 1 then syslog\nset firewall family inet6 filter <name> term 1 then discard\n<additional terms>\nset firewall family inet6 filter <name> term default then log\nset firewall family inet6 filter <name> term default then syslog\nset firewall family inet6 filter <name> term default then discard\n\nset interfaces <interface name> unit <number> family inet6 filter input <filter name>\nset interfaces <interface name> unit <number> family inet6 address <IPv6 address>.<prefix>", "CCI": "CCI-002403"}, {"VulnID": "V-254058", "RuleID": "SV-254058r844207_rule", "StigID": "JUEX-RT-000860", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000364-RTR-000205", "RuleTitle": "The Juniper perimeter router must be configured to drop IPv6 packets containing the NSAP address option within Destination Option header.", "Description": "<VulnDiscussion>The optional and extensible natures of the IPv6 extension headers require higher scrutiny since many implementations do not always drop packets with headers that it cannot recognize, and hence could cause a denial-of-service on the target device. In addition, the type, length, value (TLV) formatting provides the ability for headers to be very large. This option type from RFC 1888 (OSI NSAPs and IPv6) has been deprecated by RFC 4048.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "The optional and extensible natures of the IPv6 extension headers require higher scrutiny since many implementations do not always drop packets with headers that it cannot recognize, and hence could cause a denial-of-service on the target device. In addition, the type, length, value (TLV) formatting provides the ability for headers to be very large. This option type from RFC 1888 (OSI NSAPs and IPv6) has been deprecated by RFC 4048.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "This requirement is not applicable for the DODIN Backbone. \n\nReview the router configuration and determine if filters are bound to the applicable interfaces to drop IPv6 packets containing a Destination Option header with option type value of 0xC3 (NSAP address). \n\nVerify the router drops all destination-options extension headers.\n[edit firewall family inet6]\nfilter <name> {\n    term 1 {\n        from {\n            next-header dstopts;\n        }\n        then {\n            log;\n            syslog;\n            discard;\n        }\n    }\n    <additional terms>\n    term default {\n        then {\n            log;\n            syslog;\n            discard;\n        }\n    }\n}\n\nNote: Juniper routers do not support configuring option types for Destination Options extension headers. Therefore, all packets with the Destination Options extension header are dropped.\n\nVerify the filter is applied to applicable interfaces.\n[edit interfaces]\n<interface name> {\n    unit <number> {\n        family inet6 {\n            filter {\n                input <filter name>;\n            }\n            address <IPv6 address>.<prefix>;\n        }\n    }\n}\nNote: Some Juniper devices support both monolithic filters and filter lists. Filter lists separate each term, or set of terms, into a separate filter that is applied sequentially to an interface. If using filter lists, the keywords \"input\" or \"output\" change to \"input-list\" or \"output-list\". Verify the final list item is a deny-all filter. The deny-all filter is created once per family and can be reused across multiple lists. For example:\n\ninput-list [ permit_mgt permit_routing_protocols default-deny ];\n\nIf the router is not configured to drop IPv6 packets containing the NSAP address option within Destination Option header, this is a finding.", "FixText": "Configure the router to drop IPv6 packets containing a Destination Option header with option type value of 0xC3 (NSAP address).\n\nset firewall family inet6 filter <name> term 1 from next-header dstopts\nset firewall family inet6 filter <name> term 1 then log\nset firewall family inet6 filter <name> term 1 then syslog\nset firewall family inet6 filter <name> term 1 then discard\n<additional terms>\nset firewall family inet6 filter <name> term default then log\nset firewall family inet6 filter <name> term default then syslog\nset firewall family inet6 filter <name> term default then discard\n\nset interfaces <interface name> unit <number> family inet6 filter input <filter name>\nset interfaces <interface name> unit <number> family inet6 address <IPv6 address>.<prefix>", "CCI": "CCI-002403"}, {"VulnID": "V-254059", "RuleID": "SV-254059r844210_rule", "StigID": "JUEX-RT-000870", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000364-RTR-000206", "RuleTitle": "The Juniper perimeter router must be configured to drop IPv6 packets containing a Hop-by-Hop or Destination Option extension header with an undefined option type.", "Description": "<VulnDiscussion>The optional and extensible natures of the IPv6 extension headers require higher scrutiny since many implementations do not always drop packets with headers that it cannot recognize, and hence could cause a denial-of-service on the target device. In addition, the type, length, value (TLV) formatting provides the ability for headers to be very large.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "The optional and extensible natures of the IPv6 extension headers require higher scrutiny since many implementations do not always drop packets with headers that it cannot recognize, and hence could cause a denial-of-service on the target device. In addition, the type, length, value (TLV) formatting provides the ability for headers to be very large.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "This requirement is not applicable for the DODIN Backbone. \n\nReview the router configuration and determine if filters are bound to the applicable interfaces to drop all inbound IPv6 packets containing an undefined option type value regardless of whether they appear in a Hop-by-Hop or Destination Option header. Undefined values are 0x02, 0x03, 0x06, 0x9 \u2013 0xE, 0x10 \u2013 0x22, 0x24, 0x25, 0x27 \u2013 0x2F, and 0x31 \u2013 0xFF.\n\nVerify the router drops all hop-by-hop and destination-options extension headers.\n[edit firewall family inet6]\nfilter <name> {\n    term 1 {\n        from {\n            next-header [ hop-by-hop dstopts ];\n        }\n        then {\n            log;\n            syslog;\n            discard;\n        }\n    }\n    <additional terms>\n    term default {\n        then {\n            log;\n            syslog;\n            discard;\n        }\n    }\n}\n\nNote: Juniper routers do not support configuring option types for either the Hop-by-Hop or Destination Options extension headers. Therefore, all packets with the Hop-by-Hop or Destination Options extension header are dropped.\n\nVerify the filter is applied to applicable interfaces.\n[edit interfaces]\n<interface name> {\n    unit <number> {\n        family inet6 {\n            filter {\n                input <filter name>;\n            }\n            address <IPv6 address>.<prefix>;\n        }\n    }\n}\nNote: Some Juniper devices support both monolithic filters and filter lists. Filter lists separate each term, or set of terms, into a separate filter that is applied sequentially to an interface. If using filter lists, the keywords \"input\" or \"output\" change to \"input-list\" or \"output-list\". Verify the final list item is a deny-all filter. The deny-all filter is created once per family and can be reused across multiple lists. For example:\n\ninput-list [ permit_mgt permit_routing_protocols default-deny ];\n\nIf the router is not configured to drop IPv6 packets containing a Hop-by-Hop or Destination Option extension header, this is a finding.", "FixText": "Configure the router to drop all inbound IPv6 packets containing an undefined option type value regardless of whether or not they appear in a Hop-by-Hop or Destination Option header.\n\nset firewall family inet6 filter <name> term 1 from next-header hop-by-hop\nset firewall family inet6 filter <name> term 1 from next-header dstopts\nset firewall family inet6 filter <name> term 1 then log\nset firewall family inet6 filter <name> term 1 then syslog\nset firewall family inet6 filter <name> term 1 then discard\n<additional terms>\nset firewall family inet6 filter <name> term default then log\nset firewall family inet6 filter <name> term default then syslog\nset firewall family inet6 filter <name> term default then discard\n\nset interfaces <interface name> unit <number> family inet6 filter input <filter name>\nset interfaces <interface name> unit <number> family inet6 address <IPv6 address>.<prefix>", "CCI": "CCI-002403"}, {"VulnID": "V-254060", "RuleID": "SV-254060r844213_rule", "StigID": "JUEX-RT-000880", "Severity": "low", "Cat": "CAT III", "Classification": "", "GroupTitle": "SRG-NET-000512-RTR-000001", "RuleTitle": "The Juniper BGP router must be configured to use its loopback address as the source address for iBGP peering sessions.", "Description": "<VulnDiscussion>Using a loopback address as the source address offers a multitude of uses for security, access, management, and scalability of the BGP routers. It is easier to construct appropriate ingress filters for router management plane traffic destined to the network management subnet since the source addresses will be from the range used for loopback interfaces instead of a larger range of addresses used for physical interfaces. Log information recorded by authentication and syslog servers will record the router\u2019s loopback address instead of the numerous physical interface addresses.\n\nWhen the loopback address is used as the source for eBGP peering, the BGP session will be harder to hijack since the source address to be used is not known globally\u2014making it more difficult for a hacker to spoof an eBGP neighbor. By using traceroute, a hacker can easily determine the addresses for an eBGP speaker when the IP address of an external interface is used as the source address. The routers within the iBGP domain should also use loopback addresses as the source address when establishing BGP sessions.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Using a loopback address as the source address offers a multitude of uses for security, access, management, and scalability of the BGP routers. It is easier to construct appropriate ingress filters for router management plane traffic destined to the network management subnet since the source addresses will be from the range used for loopback interfaces instead of a larger range of addresses used for physical interfaces. Log information recorded by authentication and syslog servers will record the router\u2019s loopback address instead of the numerous physical interface addresses.\n\nWhen the loopback address is used as the source for eBGP peering, the BGP session will be harder to hijack since the source address to be used is not known globally\u2014making it more difficult for a hacker to spoof an eBGP neighbor. By using traceroute, a hacker can easily determine the addresses for an eBGP speaker when the IP address of an external interface is used as the source address. The routers within the iBGP domain should also use loopback addresses as the source address when establishing BGP sessions.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the router configuration to verify that a loopback address has been configured.\n\nVerify that a loopback interface is used as the source address for all iBGP sessions.\nbgp {\n    group iBGP {\n        type internal;\n        local-interface lo0.0;\n        :\n    }\n}\n\nIf the router does not use its loopback address as the source address for all iBGP sessions, this is a finding.", "FixText": "Ensure that the router\u2019s loopback address is used as the source address when originating traffic.\n\nset protocols bgp group <group name> type internal\nset protocols bgp group <group name> local-interface lo0.0", "CCI": "CCI-000366"}, {"VulnID": "V-254061", "RuleID": "SV-254061r844216_rule", "StigID": "JUEX-RT-000890", "Severity": "low", "Cat": "CAT III", "Classification": "", "GroupTitle": "SRG-NET-000512-RTR-000002", "RuleTitle": "The Juniper MPLS router must be configured to use its loopback address as the source address for LDP peering sessions.", "Description": "<VulnDiscussion>Using a loopback address as the source address offers a multitude of uses for security, access, management, and scalability of backbone routers. It is easier to construct appropriate ingress filters for router management plane traffic destined to the network management subnet since the source addresses will be from the range used for loopback interfaces instead of from a larger range of addresses used for physical interfaces. Log information recorded by authentication and syslog servers will record the router's loopback address instead of the numerous physical interface addresses.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Using a loopback address as the source address offers a multitude of uses for security, access, management, and scalability of backbone routers. It is easier to construct appropriate ingress filters for router management plane traffic destined to the network management subnet since the source addresses will be from the range used for loopback interfaces instead of from a larger range of addresses used for physical interfaces. Log information recorded by authentication and syslog servers will record the router's loopback address instead of the numerous physical interface addresses.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the router configuration to determine if it uses its loopback address as the source address for LDP peering sessions.\n\nVerify that a loopback address has been configured as shown in the following example:\n[edit interfaces]\nlo0 {\n    unit 0 {\n        family inet {\n            address <IPv4 address>/32;\n        }\n        family inet6 {\n            address <IPv6 address>/128;\n        }\n    }\n}\n\nAn MPLS router will use the LDP router ID as the source address for LDP hellos and when establishing TCP sessions with LDP peers; hence, it is necessary to verify that the LDP router ID is the same as the loopback address. By default, routers will assign the LDP router ID using the highest IP address on the router, with preference given to loopback addresses. If the router-id command is specified that overrides this default behavior, verify that it is the IP address of the designated loopback interface.\n\n[edit routing-options]\nrouter-id <lo0 address>;\n\nIf the router is not configured do use its loopback address for LDP peering, this is a finding.", "FixText": "Configure MPLS routers to use their loopback address as the source address for LDP peering sessions.\n\nset interfaces lo0 unit 0 family inet <IPv4 address>/32\nset interfaces lo0 unit 0 family inet6 <IPv6 address>/128\n\nset routing-options router-id <lo0 address>", "CCI": "CCI-000366"}, {"VulnID": "V-254062", "RuleID": "SV-254062r844219_rule", "StigID": "JUEX-RT-000900", "Severity": "low", "Cat": "CAT III", "Classification": "", "GroupTitle": "SRG-NET-000512-RTR-000003", "RuleTitle": "The Juniper MPLS router must be configured to synchronize IGP and LDP to minimize packet loss when an IGP adjacency is established prior to LDP peers completing label exchange.", "Description": "<VulnDiscussion>Packet loss can occur when an IGP adjacency is established and the router begins forwarding packets using the new adjacency before the LDP label exchange completes between the peers on that link. Packet loss can also occur if an LDP session closes and the router continues to forward traffic using the link associated with the LDP peer rather than an alternate pathway with a fully synchronized LDP session. The MPLS LDP-IGP Synchronization feature provides a means to synchronize LDP with OSPF or IS-IS to minimize MPLS packet loss. When an IGP adjacency is established on a link but LDP-IGP synchronization is not yet achieved or is lost, the IGP will advertise the max-metric on that link.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Packet loss can occur when an IGP adjacency is established and the router begins forwarding packets using the new adjacency before the LDP label exchange completes between the peers on that link. Packet loss can also occur if an LDP session closes and the router continues to forward traffic using the link associated with the LDP peer rather than an alternate pathway with a fully synchronized LDP session. The MPLS LDP-IGP Synchronization feature provides a means to synchronize LDP with OSPF or IS-IS to minimize MPLS packet loss. When an IGP adjacency is established on a link but LDP-IGP synchronization is not yet achieved or is lost, the IGP will advertise the max-metric on that link.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the router OSPF or IS-IS configuration.\n\nVerify that LDP will synchronize with the link-state routing protocol.\n[edit protocols]\nospf {\n    area <number> {\n        interface <name>.<logical unit> {\n            authentication {\n                md5 <key number> key \"$8$aes256-gcm$hmac-sha2-256$100$LfJ7NdAYx/0$+4wGg1QJKLzkaAmVCGxBUQ$n0XxNofUtXE8aoJBhFNDDQ$uIDW/H+VY6U\"; ## SECRET-DATA\n            }\n            ldp-synchronization {\n                hold-time 10;\n            }\n        }\n        interface <name>.<logical unit> {\n            ipsec-sa <name>;\n            ldp-synchronization {\n                hold-time 10;\n            }\n        }\n    }\n}\nldp {\n    interface <name>.<logical unit>;\n}\n-OR-\nisis {\n    interface <name>.<logical unit> {\n        ldp-synchronization {\n            hold-time 10;\n        }\n    }\n    level 1 authentication-key-chain <name>;\n    level 2 authentication-key-chain <name>;\n}\nmpls {\n    interface <name>.<logical unit>;\n}\n\nIf the router is not configured to synchronize IGP and LDP, this is a finding.", "FixText": "Configure the MPLS router to synchronize IGP and LDP, minimizing packet loss when an IGP adjacency is established prior to LDP peers completing label exchange.\n\nset protocols ospf area <number> interface <name>.<logical unit> authentication md5 <key number> <PSK>\nset protocols ospf area <number> interface <name>.<logical unit> ldp-synchronize hold-time 10\nset protocols ldp interface <name>.<logical unit>\n\n-OR-\n\nset protocols isis level 1 authentication-key-chain <name>\nset protocols isis level 2 authentication-key-chain <name>\nset protocols isis interface <name>.<logical unit> ldp-synchronize hold-time 10\nset protocols mpls interface <name>.<logical unit>", "CCI": "CCI-000366"}, {"VulnID": "V-254063", "RuleID": "SV-254063r844222_rule", "StigID": "JUEX-RT-000910", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000512-RTR-000004", "RuleTitle": "The Juniper MPLS router must be configured to have TTL Propagation disabled.", "Description": "<VulnDiscussion>The head end of the label-switched path (LSP), the label edge router (LER) will decrement the IP packet's time-to-live (TTL) value by one and then copy the value to the MPLS TTL field. At each label-switched router (LSR) hop, the MPLS TTL value is decremented by one. The MPLS router that pops the label (either the penultimate LSR or the egress LER) will copy the packet's MPLS TTL value to the IP TTL field and decrement it by one.\n\nThis TTL propagation is the default behavior. Because the MPLS TTL is propagated from the IP TTL, a traceroute will list every hop in the path, be it routed or label switched, thereby exposing core nodes. With TTL propagation disabled, LER decrements the IP packet's TTL value by one and then places a value of 255 in the packet's MPLS TTL field, which is then decremented by one as the packet passes through each LSR in the MPLS core. Because the MPLS TTL never drops to zero, none of the LSP hops triggers an ICMP TTL exceeded message and consequently, these hops are not recorded in a traceroute. Hence, nodes within the MPLS core cannot be discovered by an attacker.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "The head end of the label-switched path (LSP), the label edge router (LER) will decrement the IP packet's time-to-live (TTL) value by one and then copy the value to the MPLS TTL field. At each label-switched router (LSR) hop, the MPLS TTL value is decremented by one. The MPLS router that pops the label (either the penultimate LSR or the egress LER) will copy the packet's MPLS TTL value to the IP TTL field and decrement it by one.\n\nThis TTL propagation is the default behavior. Because the MPLS TTL is propagated from the IP TTL, a traceroute will list every hop in the path, be it routed or label switched, thereby exposing core nodes. With TTL propagation disabled, LER decrements the IP packet's TTL value by one and then places a value of 255 in the packet's MPLS TTL field, which is then decremented by one as the packet passes through each LSR in the MPLS core. Because the MPLS TTL never drops to zero, none of the LSP hops triggers an ICMP TTL exceeded message and consequently, these hops are not recorded in a traceroute. Hence, nodes within the MPLS core cannot be discovered by an attacker.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the router configuration to verify that TTL propagation is disabled.\n[edit protocols mpls]\nno-propagate-ttl;\n\nIf the router is not configured to disable TTL propagation, this is a finding.", "FixText": "Configure LERs to disable TTL propagation.\n\nset protocols mpls no-propagate-ttl", "CCI": "CCI-000366"}, {"VulnID": "V-254064", "RuleID": "SV-254064r844225_rule", "StigID": "JUEX-RT-000920", "Severity": "high", "Cat": "CAT I", "Classification": "", "GroupTitle": "SRG-NET-000512-RTR-000005", "RuleTitle": "The Juniper PE router must be configured to have each Virtual Routing and Forwarding (VRF) instance bound to the appropriate physical or logical interfaces to maintain traffic separation between all MPLS L3VPNs.", "Description": "<VulnDiscussion>The primary security model for an MPLS L3VPN infrastructure is traffic separation. The service provider must guarantee the customer that traffic from one VPN does not leak into another VPN or into the core, and that core traffic must not leak into any VPN. Hence, it is imperative that each CE-facing interface can only be associated to one VRF\u2014that alone is the fundamental framework for traffic separation.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "The primary security model for an MPLS L3VPN infrastructure is traffic separation. The service provider must guarantee the customer that traffic from one VPN does not leak into another VPN or into the core, and that core traffic must not leak into any VPN. Hence, it is imperative that each CE-facing interface can only be associated to one VRF\u2014that alone is the fundamental framework for traffic separation.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the design plan for deploying L3VPN and VRF-lite. \n\nReview all CE-facing interfaces and verify that the proper VRF is defined.\n[edit interfaces]\n<ce-facing interface> {\n    description \"To customer 1\";\n    unit <number> {\n        family inet {\n            address <IPv4 address>/<mask>;\n        }\n        family inet6 {\n            address <IPv6 address>/<prefix>;\n        }\n    }\n}\n\n[edit routing-instances]\n<instance name> {\n    description \"To customer 1\";\n    instance-type vrf;\n    interface <ce-facing interface>.<logical unit>;\n    route-distinguisher <Number in (16 bit:32 bit) or (32 bit 'L':16 bit) or (IP address:16 bit) format>;\n    vrf-target <Target community to use in import and export>;\n    vrf-table-label;\n    protocols {\n        ospf {\n            area <number> {\n                interface <ce-facing interface>.<logical unit>;\n            }\n        }\n    }\n}\n\nNote: In L3 VPN, the CE router forms an adjacency with the PE router (OSPF in the example).\n\nIf any VRFs are not bound to the appropriate physical or logical interface, this is a finding.", "FixText": "Configure the PE router to have each VRF bound to the appropriate physical or logical interfaces to maintain traffic separation between all MPLS L3VPNs.\n\nset interfaces <ce facing interface> description <\"appropriate description\">\nset interfaces <ce facing interface> unit <number> family inet address <IPv4 address>/<mask>\nset interfaces <ce facing interface> unit <number> family inet6 address <IPv6 address>/<prefix>\n\nset routing-instances <name> description <\"appropriate description\">\nset routing-instances <name> instance-type vrf\nset routing-instances <name> interface <ce-facing interface>.<logical unit>\nset routing-instances <name> route-distinguisher <Number in (16 bit:32 bit) or (32 bit 'L':16 bit) or (IP address:16 bit) format>\nset routing-instances <name> vrf-target <Target community to use in import and export>\nset routing-instances <name> vrf-table-label\nset routing-instances <name> protocols ospf area <number> interface <ce-facing interface>.<logical unit>", "CCI": "CCI-000366"}, {"VulnID": "V-254065", "RuleID": "SV-254065r844228_rule", "StigID": "JUEX-RT-000930", "Severity": "high", "Cat": "CAT I", "Classification": "", "GroupTitle": "SRG-NET-000512-RTR-000006", "RuleTitle": "The Juniper PE router must be configured to have each Virtual Routing and Forwarding (VRF) instance with the appropriate Route Target (RT).", "Description": "<VulnDiscussion>The primary security model for an MPLS L3VPN as well as a VRF-lite infrastructure is traffic separation. Each interface can only be associated to one VRF, which is the fundamental framework for traffic separation. Forwarding decisions are made based on the routing table belonging to the VRF. Control of what routes are imported into or exported from a VRF is based on the RT. It is critical that traffic does not leak from one COI tenant or L3VPN to another; hence, it is imperative that the correct RT is configured for each VRF.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "The primary security model for an MPLS L3VPN as well as a VRF-lite infrastructure is traffic separation. Each interface can only be associated to one VRF, which is the fundamental framework for traffic separation. Forwarding decisions are made based on the routing table belonging to the VRF. Control of what routes are imported into or exported from a VRF is based on the RT. It is critical that traffic does not leak from one COI tenant or L3VPN to another; hence, it is imperative that the correct RT is configured for each VRF.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Verify that the correct RT is configured for each VRF.\n\nReview the design plan for MPLS/L3VPN and VRF-lite to determine what RTs have been assigned for each VRF.\n\nReview the route-distinguisher and vrf-target statements under each configured VRF and verify that the correct RTs have been defined for each VRF. Assuming the assigned RT for \"customer 1\" is \"cust1:33:33\", verify vrf-target matches.\n\n[edit routing-instances]\n<instance name> {\n    description \"To customer 1\";\n    instance-type vrf;\n    interface <ce-facing interface>.<logical unit>;\n    route-distinguisher 33:33; << Must match the design plan for \"customer 1\".\n    vrf-target cust1:33:33; << Must match the design plan for \"customer 1\".\n    vrf-table-label;\n    protocols {\n        ospf {\n            area <number> {\n                interface <ce-facing interface>.<logical unit>;\n            }\n        }\n    }\n}\n\nNote: In L3 VPN, the CE router forms an adjacency with the PE router (OSPF in the example).\n\nIf there are VRFs configured with the wrong RT, this is a finding.", "FixText": "Configure all J-PE routers to have the correct VRF defined with the appropriate RT.\n\nset routing-instances <name> description <\"appropriate description\">\nset routing-instances <name> instance-type vrf\nset routing-instances <name> interface <ce-facing interface>.<logical unit>\nset routing-instances <name> route-distinguisher 33:33 << Must match the design plan for \"customer 1\".\nset routing-instances <name> vrf-target cust1:33:33 << Must match the design plan for \"customer 1\".\nset routing-instances <name> vrf-table-label\nset routing-instances <name> protocols ospf area <number> interface <ce-facing interface>.<logical unit>", "CCI": "CCI-000366"}, {"VulnID": "V-254066", "RuleID": "SV-254066r844231_rule", "StigID": "JUEX-RT-000940", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000512-RTR-000007", "RuleTitle": "The Juniper PE router must be configured to have each VRF with the appropriate Route Distinguisher (RD).", "Description": "<VulnDiscussion>An RD provides uniqueness to the customer address spaces within the MPLS L3VPN infrastructure. The concept of the VPN-IPv4 and VPN-IPv6 address families consists of the RD prepended before the IP address. Hence, if the same IP prefix is used in several different L3VPNs, it is possible for BGP to carry several completely different routes for that prefix, one for each VPN.\n\nSince VPN-IPv4 addresses and IPv4 addresses are different address families, BGP never treats them as comparable addresses. The purpose of the RD is to create distinct routes for common IPv4 address prefixes. On any given PE router, a single RD can define a VRF in which the entire address space may be used independently, regardless of the makeup of other VPN address spaces. Hence, it is imperative that a unique RD is assigned to each L3VPN and that the proper RD is configured for each VRF.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "An RD provides uniqueness to the customer address spaces within the MPLS L3VPN infrastructure. The concept of the VPN-IPv4 and VPN-IPv6 address families consists of the RD prepended before the IP address. Hence, if the same IP prefix is used in several different L3VPNs, it is possible for BGP to carry several completely different routes for that prefix, one for each VPN.\n\nSince VPN-IPv4 addresses and IPv4 addresses are different address families, BGP never treats them as comparable addresses. The purpose of the RD is to create distinct routes for common IPv4 address prefixes. On any given PE router, a single RD can define a VRF in which the entire address space may be used independently, regardless of the makeup of other VPN address spaces. Hence, it is imperative that a unique RD is assigned to each L3VPN and that the proper RD is configured for each VRF.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the RDs that have been assigned for each VRF according to the plan provided by the ISSM.\n\nReview all VRFs configured on CE-facing interfaces and verify that the proper RD has been configured for each. Assuming the assigned RD for \"customer 1\" is \"33:33\", verify the route-distinguisher matches.\n\n[edit routing-instances]\n<instance name> {\n    description \"To customer 1\";\n    instance-type vrf;\n    interface <ce-facing interface>.<logical unit>;\n    route-distinguisher 33:33; << Must match the design plan for \"customer 1\".\n    vrf-target cust1:33:33; << Must match the design plan for \"customer 1\".\n    vrf-table-label;\n    protocols {\n        ospf {\n            area <number> {\n                interface <ce-facing interface>.<logical unit>;\n            }\n        }\n    }\n}\n\nNote: In L3 VPN, the CE router forms an adjacency with the PE router (OSPF in the example).\n\nIf the wrong RD has been configured for any VRF, this is a finding.", "FixText": "Configure the correct RD for each VRF.\n\nset routing-instances <name> description <\"appropriate description\">\nset routing-instances <name> instance-type vrf\nset routing-instances <name> interface <ce-facing interface>.<logical unit>\nset routing-instances <name> route-distinguisher 33:33 << Must match the design plan for \"customer 1\".\nset routing-instances <name> vrf-target cust1:33:33 << Must match the design plan for \"customer 1\".\nset routing-instances <name> vrf-table-label\nset routing-instances <name> protocols ospf area <number> interface <ce-facing interface>.<logical unit>", "CCI": "CCI-000366"}, {"VulnID": "V-254067", "RuleID": "SV-254067r844234_rule", "StigID": "JUEX-RT-000950", "Severity": "high", "Cat": "CAT I", "Classification": "", "GroupTitle": "SRG-NET-000512-RTR-000008", "RuleTitle": "The Juniper PE router providing MPLS Virtual Private Wire Service (VPWS) must be configured to have the appropriate virtual circuit identification (VC ID) for each attachment circuit.", "Description": "<VulnDiscussion>VPWS is an L2VPN technology that provides a virtual circuit between two PE routers to forward layer 2 frames between two customer-edge routers or switches through an MPLS-enabled IP core. The ingress PE router (virtual circuit head-end) encapsulates Ethernet frames inside MPLS packets using label stacking and forwards them across the MPLS network to the egress PE router (virtual circuit tail-end). During a virtual circuit setup, the PE routers exchange VC label bindings for the specified VC ID. The VC ID specifies a pseudowire associated with an ingress and egress PE router and the customer-facing attachment circuits.\n\nTo guarantee that all frames are forwarded onto the correct pseudowire and to the correct customer and attachment circuits, it is imperative that the correct VC ID is configured for each attachment circuit.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "VPWS is an L2VPN technology that provides a virtual circuit between two PE routers to forward layer 2 frames between two customer-edge routers or switches through an MPLS-enabled IP core. The ingress PE router (virtual circuit head-end) encapsulates Ethernet frames inside MPLS packets using label stacking and forwards them across the MPLS network to the egress PE router (virtual circuit tail-end). During a virtual circuit setup, the PE routers exchange VC label bindings for the specified VC ID. The VC ID specifies a pseudowire associated with an ingress and egress PE router and the customer-facing attachment circuits.\n\nTo guarantee that all frames are forwarded onto the correct pseudowire and to the correct customer and attachment circuits, it is imperative that the correct VC ID is configured for each attachment circuit.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the ingress and egress PE router configuration for each virtual circuit that has been provisioned.\n\nVerify that the correct and unique VCID has been configured for the appropriate attachment circuit.\n\n[edit interfaces]\n<interface name> {\n    encapsulation ethernet-ccc;\n    unit <number> {\n        <additional configuration>\n    }\n}\n\n[edit protocols]\nl2circuit {\n    neighbor 1.1.1.1 {\n        interface <interface name>.<logical unit> {\n            virtual-circuit-id <1..4294967295>;\n        }\n    }\n}\n\nIf the correct VC ID has not been configured on both routers, this is a finding.\n\nNote: Ethernet over MPLS in VLAN mode transports Ethernet traffic from a source 802.1Q VLAN to a destination 802.1Q VLAN over a core MPLS network. The VC ID must be unique and the same on each end as it is used to connect the endpoints of the VC.", "FixText": "Assign globally unique VC IDs for each virtual circuit and configure the attachment circuits with the appropriate VC ID.\n\nConfigure the same VC ID on both ends of the VC.\n\nset interfaces <interface name> unit <number> encapsulation vlan-ccc\nset protocols l2circuit neighbor <neighbor> interface <interface>.<logical unit> virtual-circuit-id <1..4294967295>", "CCI": "CCI-000366"}, {"VulnID": "V-254068", "RuleID": "SV-254068r844237_rule", "StigID": "JUEX-RT-000960", "Severity": "high", "Cat": "CAT I", "Classification": "", "GroupTitle": "SRG-NET-000512-RTR-000009", "RuleTitle": "The Juniper PE router providing Virtual Private LAN Services (VPLS) must be configured to have all attachment circuits defined to the virtual forwarding instance (VFI) with the globally unique VPN ID assigned for each customer VLAN.", "Description": "<VulnDiscussion>VPLS defines an architecture that delivers Ethernet multipoint services over an MPLS network. Customer layer 2 frames are forwarded across the MPLS core via pseudowires using IEEE 802.1q Ethernet bridging principles. A pseudowire is a virtual bidirectional connection between two attachment circuits (virtual connections between PE and CE routers). A pseudowire contains two unidirectional label-switched paths (LSP) between two PE routers. Each MAC virtual forwarding table instance (VFI) is interconnected using pseudowires provisioned for the bridge domain, thereby maintaining privacy and logical separation between each VPLS bridge domain.\n\nThe VFI specifies the pseudowires associated with connecting PE routers and the customer-facing attachment circuits belonging to a given VLAN. Resembling a layer 2 switch, the VFI is responsible for learning MAC addresses and providing loop-free forwarding of customer traffic to the appropriate end nodes. Each VPLS domain is identified by a globally unique VPN ID; hence, VFIs of the same VPLS domain must be configured with the same VPN ID on all participating PE routers. To guarantee traffic separation for all customer VLANs and that all packets are forwarded to the correct destination, it is imperative that the correct attachment circuits are associated with the appropriate VFI and that each VFI is associated to the unique VPN ID assigned to the customer VLAN.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "VPLS defines an architecture that delivers Ethernet multipoint services over an MPLS network. Customer layer 2 frames are forwarded across the MPLS core via pseudowires using IEEE 802.1q Ethernet bridging principles. A pseudowire is a virtual bidirectional connection between two attachment circuits (virtual connections between PE and CE routers). A pseudowire contains two unidirectional label-switched paths (LSP) between two PE routers. Each MAC virtual forwarding table instance (VFI) is interconnected using pseudowires provisioned for the bridge domain, thereby maintaining privacy and logical separation between each VPLS bridge domain.\n\nThe VFI specifies the pseudowires associated with connecting PE routers and the customer-facing attachment circuits belonging to a given VLAN. Resembling a layer 2 switch, the VFI is responsible for learning MAC addresses and providing loop-free forwarding of customer traffic to the appropriate end nodes. Each VPLS domain is identified by a globally unique VPN ID; hence, VFIs of the same VPLS domain must be configured with the same VPN ID on all participating PE routers. To guarantee traffic separation for all customer VLANs and that all packets are forwarded to the correct destination, it is imperative that the correct attachment circuits are associated with the appropriate VFI and that each VFI is associated to the unique VPN ID assigned to the customer VLAN.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the implementation plan and the VPN IDs assigned to customer VLANs for the VPLS deployment.\n\nReview the PE router configuration to verify that customer attachment circuits (i.e., VLANs) are associated to the appropriate VPLS ID.\n\nReview the implementation plan and the VPLS IDs assigned to customer VLANs for the VPLS deployment.\n\nReview the PE router configuration to verify that customer attachment circuits are associated to the appropriate routing instance configured for the customers VPLS ID.\n\n[edit]\nrouting-instances {\n    <instance name> {\n        interface <interface name>.<logical unit>;\n        protocols {\n            vpls {\n                vpls-id <VPLS ID>;\n                    neighbor <neighbor address>;\n                }\n            }\n        }\n    }\n}\n\nNote: Only EX9200-series devices currently support VPLS.\n\nIf the attachment circuits have not been bound to the appropriate routing-instance with the assigned VPN ID for each associated VLAN, this is a finding.", "FixText": "Assign globally unique VPN IDs for each customer VLAN using VPLS for carrier Ethernet services between multiple sites, and configure the attachment circuits to the appropriate VFI.\n\nset routing-instances <instance name> protocols vpls vpls-id <VPLS ID> neighbor <neighbor address>", "CCI": "CCI-000366"}, {"VulnID": "V-254069", "RuleID": "SV-254069r844240_rule", "StigID": "JUEX-RT-000970", "Severity": "low", "Cat": "CAT III", "Classification": "", "GroupTitle": "SRG-NET-000512-RTR-000010", "RuleTitle": "The Juniper PE router must be configured to enforce the split-horizon rule for all pseudowires within a Virtual Private LAN Services (VPLS) bridge domain.", "Description": "<VulnDiscussion>A virtual forwarding instance (VFI) must be created on each participating PE router for each customer VLAN using VPLS for carrier Ethernet services. The VFI specifies the VPN ID of a VPLS domain, the addresses of other PE routers in the domain, and the type of tunnel signaling and encapsulation mechanism for each peer PE router. The set of VFIs formed by the interconnection of the emulated VCs is called a VPLS instance, which forms the logic bridge over the MPLS core network.\n\nThe PE routers use the VFI with a unique VPN ID to establish a full mesh of emulated virtual circuits or pseudowires to all the other PE routers in the VPLS instance. The full-mesh configuration allows the PE router to maintain a single broadcast domain. With a full-mesh configuration, signaling and packet replication requirements for each provisioned virtual circuit on a PE can be high. To avoid the problem of a packet looping in the provider core, thereby adding more overhead, the PE devices must enforce a split-horizon principle for the emulated virtual circuits; that is, if a packet is received on an emulated virtual circuit, it is not forwarded on any other virtual circuit.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "A virtual forwarding instance (VFI) must be created on each participating PE router for each customer VLAN using VPLS for carrier Ethernet services. The VFI specifies the VPN ID of a VPLS domain, the addresses of other PE routers in the domain, and the type of tunnel signaling and encapsulation mechanism for each peer PE router. The set of VFIs formed by the interconnection of the emulated VCs is called a VPLS instance, which forms the logic bridge over the MPLS core network.\n\nThe PE routers use the VFI with a unique VPN ID to establish a full mesh of emulated virtual circuits or pseudowires to all the other PE routers in the VPLS instance. The full-mesh configuration allows the PE router to maintain a single broadcast domain. With a full-mesh configuration, signaling and packet replication requirements for each provisioned virtual circuit on a PE can be high. To avoid the problem of a packet looping in the provider core, thereby adding more overhead, the PE devices must enforce a split-horizon principle for the emulated virtual circuits; that is, if a packet is received on an emulated virtual circuit, it is not forwarded on any other virtual circuit.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the PE router configuration to verify that split horizon is enabled. By default, Juniper devices configured as PE routers and VPLS enforce split horizon operation. Except for H-VPLS, Juniper devices do not support disabling split horizon operation.\n\nLDP signaled VPLS requires a full mesh topology, which can lead to scaling issues. Hierarchical VPLS (H-VPLS) partitions the VPLS domains into mesh groups, reducing the required number of pseudo wires. However, the inner VPLS domain may require split horizon be disabled. Juniper devices support these scenarios with the \"local-switching\" command. Ensure mesh groups supporting H-VPLS do not have the \"local-switching\" directive enabled, unless required, as shown in the following example. Generally, only inner mesh groups (that is, a group \"nested\" within another) may require split horizon be disabled.\n\n[edit routing-instances <name> protocols vpls]\nmesh-group <name> {\n    :\n    local-switching;\n    :\n}\n\nNote: Only EX9200-series devices currently support VPLS.\n\nIf split horizon is disabled but not required to be, this is a finding.\n\nNote: In a ring VPLS, split horizon is disabled so that a PE router can forward a packet received from one pseudowire to another pseudowire. To prevent the consequential loop, at least one span in the ring would not have a pseudowire for any given VPLS instance.", "FixText": "Enable split horizon on all PE routers deploying VPLS in a full-mesh configuration.\nThere is no fix for full mesh VPLS because Juniper PE devices with VPLS do not support or require a CLI command to enable/disabled split horizon. Split horizon operation cannot be disabled.\n\nFor H-VPLS, delete the \"local-switching\" directive for all inner mesh groups that do not require split horizon be disabled.\ndelete routing-instances <name> protocols vpls mesh-group <name> local-switching", "CCI": "CCI-000366"}, {"VulnID": "V-254070", "RuleID": "SV-254070r844243_rule", "StigID": "JUEX-RT-000980", "Severity": "low", "Cat": "CAT III", "Classification": "", "GroupTitle": "SRG-NET-000512-RTR-000011", "RuleTitle": "The Juniper Multicast Source Discovery Protocol (MSDP) router must be configured to use its loopback address as the source address when originating MSDP traffic.", "Description": "<VulnDiscussion>Using a loopback address as the source address offers a multitude of uses for security, access, management, and scalability of MSDP routers. It is easier to construct appropriate ingress filters for router management plane traffic destined to the network management subnet since the source addresses will be from the range used for loopback interfaces instead of a larger range of addresses used for physical interfaces. Log information recorded by authentication and syslog servers will record the router\u2019s loopback address instead of the numerous physical interface addresses.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Using a loopback address as the source address offers a multitude of uses for security, access, management, and scalability of MSDP routers. It is easier to construct appropriate ingress filters for router management plane traffic destined to the network management subnet since the source addresses will be from the range used for loopback interfaces instead of a larger range of addresses used for physical interfaces. Log information recorded by authentication and syslog servers will record the router\u2019s loopback address instead of the numerous physical interface addresses.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the router configuration to verify that a loopback address has been configured.\n\nVerify that a loopback interface is used as the source address for all MSDP packets generated by the router.\n\n[edit protocols]\nmsdp {\n    active-source-limit {\n        maximum <1..1000000>;\n        threshold <1..1000000>;\n        log-warning <percent to log warning>;\n    }\n    local-address <lo0 address>;\n    <additional configuration>\n    peer <address> {\n        active-source-limit {\n            maximum <1..1000000>;\n            threshold <1..1000000>;\n            log-warning <percent to log warning>;\n        }\n        authentication-key \"hashed PSK\"; ## SECRET-DATA\n    }\n}\n\nNote: Both the global, and the peer limit, are applied to every MSDP peer, and Junos applies the most restrictive limit. The maximum value sets the upper limit for source-active messages and the threshold value determines when Junos begins Random Early Detection (RED) dropping to alleviate congestion. The log-warning value is a percent where Junos begins generating syslog messages.\n\nIf the router does not use its loopback address as the source address when originating MSDP traffic, this is a finding.", "FixText": "Ensure that the router\u2019s loopback address is used as the source address when originating traffic.\n\nset protocols msdp active-source-limit maximum <1..1000000>\nset protocols msdp active-source-limit threshold <1..1000000>\nset protocols msdp active-source-limit log-warning <percent to log warning>\nset protocols msdp local-address <lo0 address>\n<additional configuration>\nset protocols msdp peer <address> active-source-limit maximum <1..1000000>\nset protocols msdp peer <address> active-source-limit threshold <1..1000000>\nset protocols msdp peer <address> active-source-limit log-warning <percent to log warning>\nset protocols msdp peer <address> authentication-key <PSK>", "CCI": "CCI-000366"}, {"VulnID": "V-254071", "RuleID": "SV-254071r844246_rule", "StigID": "JUEX-RT-000990", "Severity": "low", "Cat": "CAT III", "Classification": "", "GroupTitle": "SRG-NET-000512-RTR-000012", "RuleTitle": "The Juniper router must be configured to advertise a hop limit of at least 32 in Router Advertisement messages for IPv6 stateless auto-configuration deployments.", "Description": "<VulnDiscussion>The Neighbor Discovery protocol allows a hop limit value to be advertised by routers in a Router Advertisement message being used by hosts instead of the standardized default value. If a very small value was configured and advertised to hosts on the LAN segment, communications would fail due to the hop limit reaching zero before the packets sent by a host reached its destination.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "The Neighbor Discovery protocol allows a hop limit value to be advertised by routers in a Router Advertisement message being used by hosts instead of the standardized default value. If a very small value was configured and advertised to hosts on the LAN segment, communications would fail due to the hop limit reaching zero before the packets sent by a host reached its destination.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "This requirement is not applicable for the DODIN Backbone. \n\nReview the router configuration to determine if the hop limit has been configured for Router Advertisement messages. Verify each interface configured for router advertisements contains a hop limit of at least 32.\n\n[edit protocols]\nrouter-advertisement {\n    interface ge-0/0/0.0 {\n        :\n        current-hop-limit 32; <<< Supported values: 0 - 255 \n        :\n    }\n}\n\nIf it has been configured and has not been set to at least 32, it is a finding.", "FixText": "Configure the router to advertise a hop limit of at least 32 in Router Advertisement messages.\n\nset protocols router-advertisement interface <internal interface> current-hop-limit <32 or greater>", "CCI": "CCI-000366"}, {"VulnID": "V-254072", "RuleID": "SV-254072r844249_rule", "StigID": "JUEX-RT-001000", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000512-RTR-000013", "RuleTitle": "The Juniper router must not be configured to use IPv6 Site Local Unicast addresses.", "Description": "<VulnDiscussion>As currently defined, site local addresses are ambiguous and can be present in multiple sites. The address itself does not contain any indication of the site to which it belongs. The use of site-local addresses has the potential to adversely affect network security through leaks, ambiguity, and potential misrouting as documented in section 2 of RFC3879. RFC3879 formally deprecates the IPv6 site-local unicast prefix FEC0::/10 as defined in RFC3513.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "As currently defined, site local addresses are ambiguous and can be present in multiple sites. The address itself does not contain any indication of the site to which it belongs. The use of site-local addresses has the potential to adversely affect network security through leaks, ambiguity, and potential misrouting as documented in section 2 of RFC3879. RFC3879 formally deprecates the IPv6 site-local unicast prefix FEC0::/10 as defined in RFC3513.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the router configuration to ensure FEC0::/10 IP addresses are not defined. \n\nShow the interface configuration using \"show configuration interfaces\" (from operational mode) or \"show interfaces\" (configuration mode at the top of the hierarchy).\n\nWhen showing the configuration, piping (|) to match or find (similar to *nix 'grep') will limit the search.\n\nFor example, to limit the search to lines that include \"FEC0\":\n(operational mode) show configuration interfaces | match fec0\n  Returns the lines with 'fec0' but no surrounding context\n  There should be no returned lines\n\n(operational mode) show configuration interfaces | find fec0\n  Returns the configuration with the first line containing 'fec0'\n  Returns context (meaning can scroll up / down in the configuration)\n  There should be no returned configuration\n\nIf IPv6 Site Local Unicast addresses are defined, this is a finding.", "FixText": "Configure the router using authorized IPv6 addresses.\n\nDelete unauthorized addresses:\ndelete interfaces <interface name> unit <logical unit number> family inet6 address <unauth address>/<prefix>\n\nConfigure authorized addresses:\nset interfaces <interface name> unit <logical unit number> family inet6 address <auth address>/<prefix>", "CCI": "CCI-000366"}, {"VulnID": "V-254073", "RuleID": "SV-254073r844252_rule", "StigID": "JUEX-RT-001010", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000512-RTR-000014", "RuleTitle": "The Juniper perimeter router must be configured to suppress Router Advertisements on all external IPv6-enabled interfaces.", "Description": "<VulnDiscussion>Many of the known attacks in stateless autoconfiguration are defined in RFC 3756 were present in IPv4 ARP attacks. To mitigate these vulnerabilities, links that have no hosts connected such as the interface connecting to external gateways must be configured to suppress router advertisements.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Many of the known attacks in stateless autoconfiguration are defined in RFC 3756 were present in IPv4 ARP attacks. To mitigate these vulnerabilities, links that have no hosts connected such as the interface connecting to external gateways must be configured to suppress router advertisements.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "This requirement is not applicable for the DODIN Backbone. \n\nReview the router configuration to verify Router Advertisements are suppressed on all external IPv6-enabled interfaces. By default, IPv6 router advertisements are disabled. Verify all configured interfaces are not external facing.\n[edit protocols]\nrouter-advertisement {\n    interface <internal interface>.<logical unit> {\n        managed-configuration;\n        :\n        :\n        prefix <internal IPv6 prefix>;\n    }\n}\n\nIf the router is not configured to suppress Router Advertisements on all external IPv6-enabled interfaces, this is a finding.", "FixText": "Configure the router to suppress Router Advertisements on all external IPv6-enabled interfaces.\nIf IPv6 router advertisements are not used, even for internal interfaces, delete or deactivate the [edit protocols router-advertisement] stanza.\n\n[delete|deactivate] protocols router-advertisement\n\nDelete or deactivate router advertisements on external interfaces.\n\n[delete|deactivate] protocols router-advertisement interface <external interface>", "CCI": "CCI-000366"}, {"VulnID": "V-254074", "RuleID": "SV-254074r844255_rule", "StigID": "JUEX-RT-001020", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000512-RTR-000100", "RuleTitle": "The Juniper router must be configured in accordance with the security configuration settings based on DoD security configuration or implementation guidance, including STIGs, NSA configuration guides, CTOs, and DTMs.", "Description": "<VulnDiscussion>Configuring the network device to implement organization-wide security implementation guides and security checklists ensures compliance with federal standards and establishes a common security baseline across DoD that reflects the most restrictive security posture consistent with operational requirements.\n\nConfiguration settings are the set of parameters that can be changed that affect the security posture and/or functionality of the network device. Security-related parameters are those parameters impacting the security state of the network device, including the parameters required to satisfy other security control requirements.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Configuring the network device to implement organization-wide security implementation guides and security checklists ensures compliance with federal standards and establishes a common security baseline across DoD that reflects the most restrictive security posture consistent with operational requirements.\n\nConfiguration settings are the set of parameters that can be changed that affect the security posture and/or functionality of the network device. Security-related parameters are those parameters impacting the security state of the network device, including the parameters required to satisfy other security control requirements.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Determine if the router is configured in accordance with the security configuration settings based on DoD security configuration or implementation guidance, including STIGs, NSA configuration guides, CTOs, and DTMs.\n\nIf it is not configured in accordance with the designated security configuration settings, this is a finding.", "FixText": "Configure the router to be configured in accordance with the security configuration settings based on DoD security configuration or implementation guidance, including STIGs, NSA configuration guides, CTOs, and DTMs.", "CCI": "CCI-000366"}]}