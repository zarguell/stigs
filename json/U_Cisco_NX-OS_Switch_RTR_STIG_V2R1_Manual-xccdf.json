{"Title": "Cisco NX-OS Switch RTR Security Technical Implementation Guide", "Description": "This Security Technical Implementation Guide is published as a tool to improve the security of Department of Defense (DoD) information systems. The requirements are derived from the National Institute of Standards and Technology (NIST) 800-53 and related documents. Comments or proposed revisions to this document should be sent via email to the following address: disa.stig_spt@mail.mil.", "Version": "2", "Release": "1 ", "BenchmarkDate": "23 Apr 2021", "ReleaseInfo": "Release: 1 Benchmark Date: 23 Apr 2021", "Source": "STIG.DOD.MIL", "Notice": "terms-of-use", "Rules": [{"VulnID": "V-221071", "RuleID": "SV-221071r622190_rule", "StigID": "CISC-RT-000010", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000018-RTR-000001", "RuleTitle": "The Cisco switch must be configured to enforce approved authorizations for controlling the flow of information within the network based on organization-defined information flow control policies.", "Description": "<VulnDiscussion>Information flow control regulates where information is allowed to travel within a network and between interconnected networks. The flow of all network traffic must be monitored and controlled so it does not introduce any unacceptable risk to the network infrastructure or data. Information flow control policies and enforcement mechanisms are commonly employed by organizations to control the flow of information between designated sources and destinations (e.g., networks, individuals, and devices) within information systems.\n\nEnforcement occurs, for example, in boundary protection devices (e.g., gateways, switches, guards, encrypted tunnels, and firewalls) that employ rule sets or establish configuration settings that restrict information system services, provide a packet-filtering capability based on header information, or provide a message-filtering capability based on message content (e.g., implementing key word searches or using document characteristics).</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Information flow control regulates where information is allowed to travel within a network and between interconnected networks. The flow of all network traffic must be monitored and controlled so it does not introduce any unacceptable risk to the network infrastructure or data. Information flow control policies and enforcement mechanisms are commonly employed by organizations to control the flow of information between designated sources and destinations (e.g., networks, individuals, and devices) within information systems.\n\nEnforcement occurs, for example, in boundary protection devices (e.g., gateways, switches, guards, encrypted tunnels, and firewalls) that employ rule sets or establish configuration settings that restrict information system services, provide a packet-filtering capability based on header information, or provide a message-filtering capability based on message content (e.g., implementing key word searches or using document characteristics).", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the switch configuration to verify that ACLs are configured to allow or deny traffic for specific source and destination addresses as well as ports and protocols. For example, the configuration below will allow only printer traffic into subnet 10.1.12.0/24 and SQL traffic into subnet 10.1.13.0/24. ICMP is allowed for troubleshooting and OSPF is the routing protocol used within the network.\n\ninterface Ethernet2/3\n no switchport\n ip access-group FILTER_SERVER_TRAFFIC in\n ip address 10.1.23.2/24\n no shutdown \n\u2026\n\u2026\n\u2026\nip access-list FILTER_SERVER_TRAFFIC\n 10 permit tcp any 10.1.12.0/24 eq lpd \n 20 permit tcp any 10.1.12.0/24 eq 631 \n 30 permit tcp any 10.1.12.0/24 eq 9100 \n 40 permit tcp any 10.1.13.0/24 eq 1433 \n 50 permit tcp any 10.1.13.0/24 eq 1434 \n 60 permit tcp any 10.1.13.0/24 eq 4022 \n 70 permit icmp any any \n 80 permit ospf any any \n 90 deny ip any any\n\nAlternate: Inter-VLAN routing\n\ninterface Vlan12\n ip address 10.1.12.1 255.255.255.0\n ip access-group FILTER_PRINTER_VLAN out\n!\ninterface Vlan13\n ip address 10.1.13.1 255.255.255.0\n ip access-group FILTER_SQL_VLAN out\n\u2026\n\u2026\n\u2026\nip access-list FILTER_PRINTER_VLAN\n 10 permit tcp any any eq lpd \n 20 permit tcp any any eq 631 \n 30 permit tcp any any eq 9100 \n 40 permit icmp any any \n 50 deny ip any any\nip access-list FILTER_SQL_VLAN\n 10 permit tcp any any eq 1433 \n 20 permit tcp any any eq 1434 \n 30 permit tcp any any eq 4033 \n 40 permit icmp any any \n 50 deny ip any any\n\nIf the switch is not configured to enforce approved authorizations for controlling the flow of information within the network based on organization-defined information flow control policies, this is a finding.", "FixText": "Configure ACLs to allow or deny traffic for specific source and destination addresses as well as ports and protocols between various subnets as required. The commands used below were used to create the configuration as shown in the check content.\n\nSW1(config)# ip access-list FILTER_SERVER_TRAFFIC\nSW1(config-acl)# permit tcp any 10.1.12.0 0.0.0.255 eq lpd \nSW1(config-acl)# permit tcp any 10.1.12.0 0.0.0.255 eq 631\nSW1(config-acl)# permit tcp any 10.1.12.0 0.0.0.255 eq 9100\nSW1(config-acl)# permit tcp any 10.1.13.0 0.0.0.255 eq 1433\nSW1(config-acl)# permit tcp any 10.1.13.0 0.0.0.255 eq 1434\nSW1(config-acl)# permit tcp any 10.1.13.0 0.0.0.255 eq 4022\nSW1(config-acl)# permit icmp any any\nSW1(config-acl)# permit ospf any any\nSW1(config-acl)# deny ip any any\nSW1(config-acl)# exit\nSW1(config)# int e2/3\nSW1(config-if)# ip access-group FILTER_SERVER_TRAFFIC in\nSW1(config-if)# end\n\nAlternate: Inter-VLAN routing\n\nSW1(config)# ip access-list FILTER_PRINTER_VLAN\nSW1(config-acl)# permit tcp any any eq lpd \nSW1(config-acl)# permit tcp any any eq 631\nSW1(config-acl)# permit tcp any any eq 9100\nSW1(config-acl)# permit icmp any any\nSW1(config-acl)# deny ip any any\nSW1(config-acl)# exit\nSW1(config)# ip access-list FILTER_SQL_VLAN\nSW1(config-acl)# permit tcp any any eq 1433\nSW1(config-acl)# permit tcp any any eq 1434\nSW1(config-acl)# permit tcp any any eq 4033\nSW1(config-acl)# permit icmp any any\nSW1(config-acl)# deny ip any any\nSW1(config-acl)# exit\nSW1(config)# int vlan 12\nSW1(config-if)# ip access-group FILTER_PRINTER_VLAN out\nSW1(config-if)# exit\nSW1(config)# int vlan 13\nSW1(config-if)# ip access-group FILTER_SQL_VLAN out\nSW1(config-if)# end", "CCI": "SV-110961,V-101857,CCI-001368"}, {"VulnID": "V-221072", "RuleID": "SV-221072r622190_rule", "StigID": "CISC-RT-000020", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000230-RTR-000001", "RuleTitle": "The Cisco switch must be configured to implement message authentication for all control plane protocols.", "Description": "<VulnDiscussion>A rogue switch could send a fictitious routing update to convince a site's perimeter switch to send traffic to an incorrect or even a rogue destination. This diverted traffic could be analyzed to learn confidential information about the site's network, or used to disrupt the network's ability to communicate with other networks. This is known as a \"traffic attraction attack\" and is prevented by configuring neighbor switch authentication for routing updates.\n\nThis requirement applies to all IPv4 and IPv6 protocols that are used to exchange routing or packet forwarding information; this includes all Interior Gateway Protocols (such as OSPF, EIGRP, and IS-IS) and Exterior Gateway Protocols (such as BGP), MPLS-related protocols (such as LDP), and multicast-related protocols.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "A rogue switch could send a fictitious routing update to convince a site's perimeter switch to send traffic to an incorrect or even a rogue destination. This diverted traffic could be analyzed to learn confidential information about the site's network, or used to disrupt the network's ability to communicate with other networks. This is known as a \"traffic attraction attack\" and is prevented by configuring neighbor switch authentication for routing updates.\n\nThis requirement applies to all IPv4 and IPv6 protocols that are used to exchange routing or packet forwarding information; this includes all Interior Gateway Protocols (such as OSPF, EIGRP, and IS-IS) and Exterior Gateway Protocols (such as BGP), MPLS-related protocols (such as LDP), and multicast-related protocols.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the switch configuration. Verify that neighbor switch authentication is enabled for all routing protocols. The configuration examples below depicts BGP, EIGRP, IS-IS and OSPF authentication.\n\nBGP Example\n\nrouter bgp 1\n router-id 1.1.1.1\n address-family ipv4 unicast\n neighbor 10.1.12.2 remote-as 2\n password 3 3ec66c90c104ad13\n\nEIGRP Example\n\nkey chain EIGRP_KEY\n key 1\n key-string xxxxxxx\n\u2026\n\u2026\n\u2026\ninterface Ethernet2/21\n no switchport\n ip router eigrp 1\n ip authentication mode eigrp 1 md5\n ip authentication key-chain eigrp 1 EIGRP_KEY\n\nor\n\nrouter eigrp 1\n authentication mode md5\n authentication key-chain EIGRP_KEY\n\nNote: Interface authentication overrides process authentication.\n\nIS-IS Example\n\ninterface Ethernet2/20\n no switchport\n isis authentication-type md5 level-1\n isis authentication key-chain xxxxx level-1\n ip router isis 1\n\nOSPF Example\n\ninterface Ethernet2/2\n no switchport\n ip ospf authentication\n ip ospf authentication key-chain OSPF_KEY\n ip router ospf 1 area 0.0.0.0\n\nRIP Example\n\ninterface Ethernet2/8\n no switchport\n ip rip authentication mode md5\n ip rip authentication key-chain RIP_KEY\n\nIf authentication is not enabled on all routing protocols, this is a finding.", "FixText": "Configure authentication to be enabled for every protocol that affects the routing or forwarding tables.\n\nThe example configuration commands below enable OSPF, EIGRP, IS-IS, and BGP authentication.\n\nBGP Example\n\nSW1(config)# switch bgp nn\nSW1(config-router)# neighbor 10.1.12.2\nSW1(config-router-neighbor)# password xxxxxxxx\nSW1(config-router-neighbor)# end\n\nEIGRP Example\n\nStep 1: Configure the key chain. \n\nSW1(config)# key chain EIGRP_KEY \nSW1(config-keychain)# key 1 \nSW1(config-keychain-key)# key-string xxxxxx\nSW1(config-keychain-key)# exit\nSW1(config-keychain)# exit\n\nStep 2: Apply the key chain to the EIGRP process or each neighbor.\n\nAuthentication for the EIGRP process\n\nSW1(config)# router eigrp 1\nSW1(config-router)# authentication mode md5\nSW1(config-router)# authentication key-chain XXXXXX\nSW1(config-router)# end\n\nor\n\nAuthentication for the EIGRP neighbor\n\nSW1(config)# int e2/21\nSW1(config-if)# ip authentication mode eigrp 1 md5 \nSW1(config-if)# ip authentication key-chain eigrp 1 xxxxx\nSW1(config-if)# end\n\nNote: Interface authentication overrides process authentication.\n\nIS-IS Example\n\nStep 1: Configure the key chain.\n\nSW1(config)# key chain ISIS_KEY \nSW1(config-keychain)# key 1 \nSW1(config-keychain-key)# key-string xxxxxx\nSW1(config-keychain-key)# exit\nSW1(config-keychain)# exit\n\nStep 2: Apply the key chain to each ISIS neighbor.\n\nSW1(config)# int e2/20\nSW1(config-if)# isis authentication-type md5 level-1\nSW1(config-if)# isis authentication key-chain xxxxx level-1 \n\nOSPF Example\n\nStep 1: Configure the key chain. \n\nSW1(config)# key chain OSPF_KEY \nSW1(config-keychain)# key 1 \nSW1(config-keychain-key)# key-string xxxxxx\nSW1(config-keychain-key)# exit\nSW1(config-keychain)# exit\n\nStep 2: Apply the key chain to each OSPF neighbor.\n\nSW1(config)# int e2/2\nSW1(config-if)# ip ospf authentication\nSW1(config-if)# ip ospf authentication key-chain OSPF_KEY\n\nRIP Example\n\nStep 1: Configure the key chain. \n\nSW1(config)# key chain RIP_KEY \nSW1(config-keychain)# key 1 \nSW1(config-keychain-key)# key-string xxxxxx\nSW1(config-keychain-key)# exit\nSW1(config-keychain)# exit\n\nStep 2: Apply the key chain to each RIP neighbor.\n\nSW1(config)# int e2/8\nSW1(config-if)# ip rip authentication mode md5 \nSW1(config-if)# ip rip authentication key-chain RIP_KEY", "CCI": "SV-110963,V-101859,CCI-000366,CCI-002205"}, {"VulnID": "V-221073", "RuleID": "SV-221073r622190_rule", "StigID": "CISC-RT-000030", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000230-RTR-000003", "RuleTitle": "The Cisco switch must be configured to use keys with a duration not exceeding 180 days for authenticating routing protocol messages.", "Description": "<VulnDiscussion>If the keys used for routing protocol authentication are guessed, the malicious user could create havoc within the network by advertising incorrect routes and redirecting traffic. Some routing protocols allow the use of key chains for authentication. A key chain is a set of keys that is used in succession, with each having a lifetime of no more than 180 days. Changing the keys frequently reduces the risk of them eventually being guessed.\n\nKeys cannot be used during time periods for which they are not activated. If a time period occurs during which no key is activated, neighbor authentication cannot occur, and therefore routing updates will fail. Therefore, ensure that for a given key chain, key activation times overlap to avoid any period of time during which no key is activated.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "If the keys used for routing protocol authentication are guessed, the malicious user could create havoc within the network by advertising incorrect routes and redirecting traffic. Some routing protocols allow the use of key chains for authentication. A key chain is a set of keys that is used in succession, with each having a lifetime of no more than 180 days. Changing the keys frequently reduces the risk of them eventually being guessed.\n\nKeys cannot be used during time periods for which they are not activated. If a time period occurs during which no key is activated, neighbor authentication cannot occur, and therefore routing updates will fail. Therefore, ensure that for a given key chain, key activation times overlap to avoid any period of time during which no key is activated.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the start times for each key within the configured key chains used for routing protocol authentication as shown in the example below:\n\nkey chain OSPF_KEY\n key 1\n key-string 7 070d2e4e4c10\n accept-lifetime 00:00:00 Oct 01 2019 01:05:00 Jan 01 2020\n send-lifetime 00:00:00 Oct 01 2019 23:59:59 Dec 31 2019\n key 2\n key-string 7 0704205e4b07\n accept-lifetime 23:55:00 Dec 31 2019 01:05:00 Apr 01 2020\n send-lifetime 00:00:00 Jan 01 2020 23:59:59 Mar 31 2020\n\nNote: Key chains must be configured to authenticate routing protocol messages as it is the only way to set an expiration.\n\nIf any key has a lifetime of more than 180 days, this is a finding.", "FixText": "Configure each key used for routing protocol authentication to have a lifetime of no more than 180 days as shown in the example below:\n\nSW1(config)# key chain OSPF_KEY\nSW1(config-keychain)# key 1\nSW1(config-keychain-key)# key-string xxxxxxxxxxxx\nSW1(config-keychain-key)# send-lifetime 00:00:00 Oct 1 2019 23:59:59 Dec 31 2019\nSW1(config-keychain-key)# accept-lifetime 00:00:00 Oct 1 2019 01:05:00 Jan 1 2020\nSW1(config-keychain-key)# key 2\nSW1(config-keychain-key)# key-string kxxxxxxxxxxxxx\nSW1(config-keychain-key)# send-lifetime 00:00:00 Jan 1 2020 23:59:59 Mar 31 2020 \nSW1(config-keychain-key)# accept-lifetime 23:55:00 Dec 31 2019 01:05:00 Apr 1 2020\nSW1(config-keychain-key)# end", "CCI": "SV-110965,V-101861,CCI-000366,CCI-002205"}, {"VulnID": "V-221074", "RuleID": "SV-221074r622190_rule", "StigID": "CISC-RT-000040", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000168-RTR-000077", "RuleTitle": "The Cisco switch must be configured to use encryption for routing protocol authentication.", "Description": "<VulnDiscussion>A rogue switch could send a fictitious routing update to convince a site's perimeter switch to send traffic to an incorrect or even a rogue destination. This diverted traffic could be analyzed to learn confidential information about the site's network or used to disrupt the network's ability to communicate with other networks. This is known as a \"traffic attraction attack\" and is prevented by configuring neighbor switch authentication for routing updates. However, using clear-text authentication provides little benefit since an attacker can intercept traffic and view the authentication key. This would allow the attacker to use the authentication key in an attack.\n\nThis requirement applies to all IPv4 and IPv6 protocols that are used to exchange routing or packet forwarding information; this includes all Interior Gateway Protocols (such as OSPF, EIGRP, and IS-IS) and Exterior Gateway Protocols (such as BGP), MPLS-related protocols (such as LDP), and multicast-related protocols.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "A rogue switch could send a fictitious routing update to convince a site's perimeter switch to send traffic to an incorrect or even a rogue destination. This diverted traffic could be analyzed to learn confidential information about the site's network or used to disrupt the network's ability to communicate with other networks. This is known as a \"traffic attraction attack\" and is prevented by configuring neighbor switch authentication for routing updates. However, using clear-text authentication provides little benefit since an attacker can intercept traffic and view the authentication key. This would allow the attacker to use the authentication key in an attack.\n\nThis requirement applies to all IPv4 and IPv6 protocols that are used to exchange routing or packet forwarding information; this includes all Interior Gateway Protocols (such as OSPF, EIGRP, and IS-IS) and Exterior Gateway Protocols (such as BGP), MPLS-related protocols (such as LDP), and multicast-related protocols.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the switch configuration. For every routing protocol that affects the routing or forwarding tables, verify that neighbor switch authentication is encrypting the authentication key as shown in the examples below:\n\nBGP Example\n\nrouter bgp 1\n router-id 1.1.1.1\n address-family ipv4 unicast\n neighbor 10.1.12.2 remote-as 2\n password 3 3ec66c90c104ad13\n\nNote: BGP authentication uses MD5. \n\nEIGRP Example\n\ninterface Ethernet2/21\n no switchport\n ip router eigrp 1\n ip authentication mode eigrp 1 md5\n\nor\n\nrouter eigrp 1\n authentication mode md5\n\nNote: Interface authentication overrides process authentication.\n\nIS-IS Example\n\ninterface Ethernet2/20\n no switchport\n isis authentication-type md5 level-1\n\nOSPF Example\n\ninterface Ethernet2/2\n no switchport\n mac-address 0000.0000.002f\n ip ospf authentication message-digest\n ip ospf message-digest-key 1 md5 3 3ec66c90c104ad13\n\nRIP Example\n\ninterface Ethernet2/8\n no switchport\n ip rip authentication mode md5\n\nIf the routing protocol is not encrypting the authentication key, this is a finding.", "FixText": "Configure all routing protocol authentications to encrypt the authentication key.\n\nBGP Example\n\nSW1(config)#switch bgp nn\nSW1(config-switch)#neighbor x.x.x.x password xxxxxx\n\nEIGRP Example\n\nSW1(config)# router eigrp 1\nSW1(config-router)# authentication mode md5\nSW1(config-router)# end\n\nor\n\nAuthentication for the EIGRP neighbor\n\nSW1(config)# int e2/21\nSW1(config-if)# ip authentication mode eigrp 1 md5 \nSW1(config-if)# end\n\nNote: Interface authentication overrides process authentication.\n\nIS-IS Example\n\nSW1(config)# int e2/20\nSW1(config-if)# isis authentication-type md5 level-1\n\nOSPF Example\n\nSW1(config)# int e2/2\nSW1(config-if)# ip ospf authentication message-digest \nSW1(config-if)# ip ospf message-digest-key 1 md5 xxxxxxxxxxx\n\nRIP Example\n\nSW1(config)# int e2/8\nSW1(config-if)# ip rip authentication mode md5", "CCI": "SV-110967,V-101863,CCI-000803"}, {"VulnID": "V-221075", "RuleID": "SV-221075r622190_rule", "StigID": "CISC-RT-000050", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000168-RTR-000078", "RuleTitle": "The Cisco switch must be configured to authenticate all routing protocol messages using NIST-validated FIPS 198-1 message authentication code algorithm.", "Description": "<VulnDiscussion>A rogue switch could send a fictitious routing update to convince a site's perimeter switch to send traffic to an incorrect or even a rogue destination. This diverted traffic could be analyzed to learn confidential information about the site's network or used to disrupt the network's ability to communicate with other networks. This is known as a \"traffic attraction attack\" and is prevented by configuring neighbor switch authentication for routing updates. However, using clear-text authentication provides little benefit since an attacker can intercept traffic and view the authentication key. This would allow the attacker to use the authentication key in an attack.\n\nSince MD5 is vulnerable to \"birthday\" attacks and may be compromised, routing protocol authentication must use FIPS 140-2 validated algorithms and modules to encrypt the authentication key. This requirement applies to all IPv4 and IPv6 protocols that are used to exchange routing or packet forwarding information; this includes all Interior Gateway Protocols (such as OSPF, EIGRP, and IS-IS) and Exterior Gateway Protocols (such as BGP), MPLS-related protocols (such as LDP), and multicast-related protocols.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "A rogue switch could send a fictitious routing update to convince a site's perimeter switch to send traffic to an incorrect or even a rogue destination. This diverted traffic could be analyzed to learn confidential information about the site's network or used to disrupt the network's ability to communicate with other networks. This is known as a \"traffic attraction attack\" and is prevented by configuring neighbor switch authentication for routing updates. However, using clear-text authentication provides little benefit since an attacker can intercept traffic and view the authentication key. This would allow the attacker to use the authentication key in an attack.\n\nSince MD5 is vulnerable to \"birthday\" attacks and may be compromised, routing protocol authentication must use FIPS 140-2 validated algorithms and modules to encrypt the authentication key. This requirement applies to all IPv4 and IPv6 protocols that are used to exchange routing or packet forwarding information; this includes all Interior Gateway Protocols (such as OSPF, EIGRP, and IS-IS) and Exterior Gateway Protocols (such as BGP), MPLS-related protocols (such as LDP), and multicast-related protocols.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the switch configuration to verify it is using a NIST-validated FIPS 198-1 message authentication code algorithm to authenticate routing protocol messages.\n\nOSPF Example\n\nkey chain OSPF_KEY\n key 1\n key-string 7 070d2e4e4c10\n accept-lifetime 00:00:00 Oct 01 2019 01:05:00 Jan 01 2020\n send-lifetime 00:00:00 Oct 01 2019 23:59:59 Dec 31 2019\n cryptographic-algorithm hmac-sha-256\n key 2\n key-string 7 0704205e4b07\n accept-lifetime 23:55:00 Dec 31 2019 01:05:00 Apr 01 2020\n send-lifetime 00:00:00 Jan 01 2020 23:59:59 Mar 31 2020\n cryptographic-algorithm hmac-sha-256\n\u2026\n\u2026\n\u2026\ninterface Ethernet2/2\n no switchport\n ip ospf authentication key-chain OSPF_KEY\n\nNote: BGP, RIP, EIGRP, IS-IS do not support any FIPS 198-1 HMAC algorithms.\n\nIf a NIST-validated FIPS 198-1 message authentication code algorithm is not being used to authenticate routing protocol messages, this is a finding.", "FixText": "Configure routing protocol authentication to use a NIST-validated FIPS 198-1 message authentication code algorithm as shown in the example below:\n\nSW1(config)# key chain OSPF_KEY\nSW1(config-keychain)# key 1\nSW1(config-keychain-key)# key-string xxxxxxxxxxxx\nSW1(config-keychain-key)# send-lifetime 00:00:00 Oct 1 2019 23:59:59 Dec 31 2019\nSW1(config-keychain-key)# accept-lifetime 00:00:00 Oct 1 2019 01:05:00 Jan 1 2020\nSW1(config-keychain-key)# cryptographic-algorithm hmac-sha-256\nSW1(config-keychain-key)# key 2\nSW1(config-keychain-key)# key-string kxxxxxxxxxxxxx\nSW1(config-keychain-key)# send-lifetime 00:00:00 Jan 1 2020 23:59:59 Mar 31 2020 \nSW1(config-keychain-key)# accept-lifetime 23:55:00 Dec 31 2019 01:05:00 Apr 1 2020\nSW1(config-keychain-key)# cryptographic-algorithm hmac-sha-256\nSW1(config-keychain-key)# end\nSW1(config)# int e2/2\nSW2(config-if)# ip ospf authentication key-chain OSPF_KEY", "CCI": "SV-110969,V-101865,CCI-000803"}, {"VulnID": "V-221076", "RuleID": "SV-221076r622190_rule", "StigID": "CISC-RT-000060", "Severity": "low", "Cat": "CAT III", "Classification": "", "GroupTitle": "SRG-NET-000019-RTR-000007", "RuleTitle": "The Cisco switch must be configured to have all inactive layer 3 interfaces disabled.", "Description": "<VulnDiscussion>An inactive interface is rarely monitored or controlled and may expose a network to an undetected attack on that interface. Unauthorized personnel with access to the communication facility could gain access to a switch by connecting to a configured interface that is not in use.\n\nIf an interface is no longer used, the configuration must be deleted and the interface disabled. For sub-interfaces, delete sub-interfaces that are on inactive interfaces and delete sub-interfaces that are themselves inactive. If the sub-interface is no longer necessary for authorized communications, it must be deleted.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "An inactive interface is rarely monitored or controlled and may expose a network to an undetected attack on that interface. Unauthorized personnel with access to the communication facility could gain access to a switch by connecting to a configured interface that is not in use.\n\nIf an interface is no longer used, the configuration must be deleted and the interface disabled. For sub-interfaces, delete sub-interfaces that are on inactive interfaces and delete sub-interfaces that are themselves inactive. If the sub-interface is no longer necessary for authorized communications, it must be deleted.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the switch configuration and verify that inactive interfaces have been disabled as shown below:\n\ninterface Ethernet4/12\n shutdown\n no switchport\n\ninterface Ethernet4/13\n shutdown\n no switchport\n\u2026\n\u2026\n\u2026\ninterface Ethernet4/48\n shutdown\n no switchport\n\nIf an interface is not being used but is configured or enabled, this is a finding.", "FixText": "Disable all inactive interfaces as shown below:\n\nSW1(config)# int e4/1 - 11\nSW1(config-if-range)# shutdown\nSW1(config-if-range)# end", "CCI": "SV-110971,V-101867,CCI-001414"}, {"VulnID": "V-221077", "RuleID": "SV-221077r622190_rule", "StigID": "CISC-RT-000070", "Severity": "low", "Cat": "CAT III", "Classification": "", "GroupTitle": "SRG-NET-000131-RTR-000035", "RuleTitle": "The Cisco switch must be configured to have all non-essential capabilities disabled.", "Description": "<VulnDiscussion>A compromised switch introduces risk to the entire network infrastructure, as well as data resources that are accessible via the network. The perimeter defense has no oversight or control of attacks by malicious users within the network. Preventing network breaches from within is dependent on implementing a comprehensive defense-in-depth strategy, including securing each device connected to the network. This is accomplished by following and implementing all security guidance applicable for each node type. A fundamental step in securing each switch is to enable only the capabilities required for operation.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "A compromised switch introduces risk to the entire network infrastructure, as well as data resources that are accessible via the network. The perimeter defense has no oversight or control of attacks by malicious users within the network. Preventing network breaches from within is dependent on implementing a comprehensive defense-in-depth strategy, including securing each device connected to the network. This is accomplished by following and implementing all security guidance applicable for each node type. A fundamental step in securing each switch is to enable only the capabilities required for operation.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Verify that the switch does not have any unnecessary or non-secure ports, protocols and services enabled. For example, the following features such as telnet should never be enabled, while other features should only be enabled if required for operations.\n\nfeature telnet\nfeature dhcp\nfeature wccp\nfeature nxapi\nfeature imp\n\nIf any unnecessary or non-secure ports, protocols, or services are enabled, this is a finding.", "FixText": "Disable features that should not be enabled unless required for operations.\n\nSW2(config)# no feature telnet\nSW2(config)# no feature dhcp\nSW2(config)# no feature wccp\nSW2(config)# no feature nxapi\nSW2(config)# no feature imp\n\nNote: Telnet must always be disabled.", "CCI": "SV-110973,V-101869,CCI-000381"}, {"VulnID": "V-221078", "RuleID": "SV-221078r622190_rule", "StigID": "CISC-RT-000080", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000131-RTR-000083", "RuleTitle": "The Cisco switch must not be configured to have any feature enabled that calls home to the vendor.", "Description": "<VulnDiscussion>Call home services will routinely send data such as configuration and diagnostic information to the vendor for routine or emergency analysis and troubleshooting. There is a risk that transmission of sensitive data sent to unauthorized persons could result in data loss or downtime due to an attack.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Call home services will routinely send data such as configuration and diagnostic information to the vendor for routine or emergency analysis and troubleshooting. There is a risk that transmission of sensitive data sent to unauthorized persons could result in data loss or downtime due to an attack.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the switch configuration to determine if the call home service is enabled as shown in the example below:\n\ncallhome\n contract-id CompanyXYZ\n customer-id CompanyXYZ\n email-contact netadmin@CompanyXYZ.com\n phone-contact +1-800-555-4567\n enable\n\nIf the call home feature is configured to call home to the vendor, this is a finding.", "FixText": "Disable the call home feature as shown below:\n\nSW1(config)# callhome\nSW1(config-callhome)# no enable \nSW1(config-callhome)# end", "CCI": "SV-110975,V-101871,CCI-002403"}, {"VulnID": "V-221079", "RuleID": "SV-221079r622190_rule", "StigID": "CISC-RT-000120", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000362-RTR-000110", "RuleTitle": "The Cisco switch must be configured to protect against or limit the effects of denial-of-service (DoS) attacks by employing control plane protection.", "Description": "<VulnDiscussion>The Route Processor (RP) is critical to all network operations because it is the component used to build all forwarding paths for the data plane via control plane processes. It is also instrumental with ongoing network management functions that keep the switches and links available for providing network services. Any disruption to the RP or the control and management planes can result in mission-critical network outages.\n\nA DoS attack targeting the RP can result in excessive CPU and memory utilization. To maintain network stability and RP security, the switch must be able to handle specific control plane and management plane traffic that is destined to the RP. In the past, one method of filtering was to use ingress filters on forwarding interfaces to filter both forwarding path and receiving path traffic. However, this method does not scale well as the number of interfaces grows and the size of the ingress filters grows. Control plane policing increases the security of switches and multilayer switches by protecting the RP from unnecessary or malicious traffic. Filtering and rate limiting the traffic flow of control plane packets can be implemented to protect switches against reconnaissance and DoS attacks, allowing the control plane to maintain packet forwarding and protocol states despite an attack or heavy load on the switch or multilayer switch.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "The Route Processor (RP) is critical to all network operations because it is the component used to build all forwarding paths for the data plane via control plane processes. It is also instrumental with ongoing network management functions that keep the switches and links available for providing network services. Any disruption to the RP or the control and management planes can result in mission-critical network outages.\n\nA DoS attack targeting the RP can result in excessive CPU and memory utilization. To maintain network stability and RP security, the switch must be able to handle specific control plane and management plane traffic that is destined to the RP. In the past, one method of filtering was to use ingress filters on forwarding interfaces to filter both forwarding path and receiving path traffic. However, this method does not scale well as the number of interfaces grows and the size of the ingress filters grows. Control plane policing increases the security of switches and multilayer switches by protecting the RP from unnecessary or malicious traffic. Filtering and rate limiting the traffic flow of control plane packets can be implemented to protect switches against reconnaissance and DoS attacks, allowing the control plane to maintain packet forwarding and protocol states despite an attack or heavy load on the switch or multilayer switch.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the Cisco switch configuration to verify that it is compliant with this requirement. \n\nStep 1: Verify traffic types have been classified based on importance levels. The following is an example configuration: \n\nclass-map match-all CoPP_CRITICAL \nmatch access-group name CoPP_CRITICAL \nclass-map match-any CoPP_IMPORTANT \nmatch access-group name CoPP_IMPORTANT \nmatch protocol arp \nclass-map match-all CoPP_NORMAL \nmatch access-group name CoPP_NORMAL \nclass-map match-any CoPP_UNDESIRABLE \nmatch access-group name CoPP_UNDESIRABLE \nclass-map match-all CoPP_DEFAULT \nmatch access-group name CoPP_DEFAULT \n\nStep 2: Review the ACLs referenced by the class maps to determine if the traffic is being classified appropriately. The following is an example configuration: \n\nip access-list CoPP_CRITICAL \nremark our control plane adjacencies are critical \npermit ospf host [OSPF neighbor A] any \npermit ospf host [OSPF neighbor B] any \npermit pim host [PIM neighbor A] any \npermit pim host [PIM neighbor B] any \npermit pim host [RP addr] any \npermit igmp any 224.0.0.0 15.255.255.255 \npermit tcp host [BGP neighbor] eq bgp host [local BGP addr] \npermit tcp host [BGP neighbor] host [local BGP addr] eq bgp \ndeny ip any any \n\nip access-list CoPP_IMPORTANT \npermit tcp host [TACACS server] eq tacacs any \npermit tcp [management subnet] 0.0.0.255 any eq 22 \npermit udp host [SNMP manager] any eq snmp \npermit udp host [NTP server] eq ntp any \ndeny ip any any \n\nip access-list CoPP_NORMAL \nremark we will want to rate limit ICMP traffic \npermit icmp any any echo \npermit icmp any any echo-reply \npermit icmp any any time-exceeded \npermit icmp any any unreachable \ndeny ip any any \n\nip access-list CoPP_UNDESIRABLE \nremark other management plane traffic that should not be received \npermit udp any any eq ntp \npermit udp any any eq snmp\npermit tcp any any eq 22 \npermit tcp any any eq 23 \nremark other control plane traffic not configured on switch \npermit eigrp any any \npermit udp any any eq rip \ndeny ip any any \n\nip access-list CoPP_DEFAULT \npermit ip any any \n\nNote: Explicitly defining undesirable traffic with ACL entries enables the network operator to collect statistics. Excessive ARP packets can potentially monopolize Route Processor resources, starving other important processes. Currently, ARP is the only Layer 2 protocol that can be specifically classified using the match protocol command. \n\nStep 3: Review the policy-map to determine if the traffic is being policed appropriately for each classification. The following is an example configuration: \n\npolicy-map CONTROL_PLANE_POLICY \nclass CoPP_CRITICAL \npolice 512000 8000 conform-action transmit exceed-action transmit \nclass CoPP_IMPORTANT \npolice 256000 4000 conform-action transmit exceed-action drop \nclass CoPP_NORMAL \npolice 128000 2000 conform-action transmit exceed-action drop \nclass CoPP_UNDESIRABLE \npolice 8000 1000 conform-action drop exceed-action drop \nclass CoPP_DEFAULT\npolice 64000 1000 conform-action transmit exceed-action drop \n\nStep 4: Verify that the CoPP policy is enabled. The following is an example configuration: \n\ncontrol-plane \nservice-policy input CONTROL_PLANE_POLICY \n\nIf the Cisco switch is not configured to protect against known types of DoS attacks by employing organization-defined security safeguards, this is a finding.", "FixText": "Configure the Cisco switch protect against known types of DoS attacks on the route processor. Implementing a CoPP policy as shown in the example below is a best practice method.\n\nStep 1: Configure ACLs specific traffic types.\n\nSW1(config)# ip access-list CoPP_CRITICAL\nSW1(config-acl)# remark our control plane adjacencies are critical \nSW1(config-acl)# permit ospf host 10.1.12.1 any\nSW1(config-acl)# permit ospf host 10.1.22.1 any\nSW1(config-acl)# permit pim host 10.1.12.1 any\nSW1(config-acl)# permit pim host 10.1.22.1 any\nSW1(config-acl)# permit pim host 10.1.33.4 any\nSW1(config-acl)# permit igmp any 224.0.0.0 15.255.255.255\nSW1(config-acl)# permit tcp host 10.2.33.3 eq bgp host 10.2.33.4\nSW1(config-acl)# permit tcp host 10.2.33.3 host 10.2.33.4 eq bgp\nSW1(config-acl)# deny ip any any\nSW1(config-acl)# exit\n\nSW1(config)# ip access-list CoPP_IMPORTANT\nSW1(config-acl)# permit tcp host 10.1.33.5 eq tacacs any\nSW1(config-acl)# permit tcp 10.1.33.0 0.0.0.255 any eq 22\nSW1(config-acl)# permit udp host 10.1.33.7 any eq snmp\nSW1(config-acl)# permit udp host 10.1.33.9 eq ntp any\nSW1(config-acl)# deny ip any any\nSW1(config-acl)# exit\n\nSW1(config)# ip access-list CoPP_NORMAL\nSW1(config-acl)# remark we will want to rate limit ICMP traffic\nSW1(config-acl)# permit icmp any any echo \nSW1(config-acl)# permit icmp any any echo-reply \nSW1(config-acl)# permit icmp any any time-exceeded \nSW1(config-acl)# permit icmp any any unreachable \nSW1(config-acl)# deny ip any any \nSW1(config-acl)# exit\n\nSW1(config)# ip access-list CoPP_UNDESIRABLE \nSW1(config-acl)# remark other management plane traffic that should not be received \nSW1(config-acl)# permit udp any any eq ntp \nSW1(config-acl)# permit udp any any eq snmp\nSW1(config-acl)# permit tcp any any eq 22 \nSW1(config-acl)# permit tcp any any eq 23 \nSW1(config-acl)# remark other control plane traffic not configured on switch \nSW1(config-acl)# permit eigrp any any \nSW1(config-acl)# permit udp any any eq rip \nSW1(config-acl)# deny ip any any \nSW1(config-acl)# exit\n\nSW1(config)# ip access-list CoPP_DEFAULT \nSW1(config-acl)# permit ip any any\nSW1(config-acl)# exit\n\nStep 2: Configure class maps referencing each of the ACLs.\n\nSW1(config)# class-map match-all CoPP_CRITICAL\nSW1(config-cmap)# match access-group name CoPP_CRITICAL\nSW1(config-cmap)# class-map match-any CoPP_IMPORTANT\nSW1(config-cmap)# match access-group name CoPP_IMPORTANT\nSW1(config-cmap)# match protocol arp\nSW1(config-cmap)# class-map match-all CoPP_NORMAL\nSW1(config-cmap)# match access-group name CoPP_NORMAL\nSW1(config-cmap)# class-map match-any CoPP_UNDESIRABLE\nSW1(config-cmap)# match access-group name CoPP_UNDESIRABLE\nSW1(config-cmap)# class-map match-all CoPP_DEFAULT\nSW1(config-cmap)# match access-group name CoPP_DEFAULT\nSW1(config-cmap)# exit\n\nStep 3: Configure a policy map referencing the configured class maps and apply appropriate bandwidth allowance and policing attributes.\n\nSW1(config)# policy-map CONTROL_PLANE_POLICY\nSW1(config-pmap)# class CoPP_CRITICAL\nSW1(config-pmap-c)# police 512000 8000 conform-action transmit exceed-action transmit\nSW1(config-pmap-c-police)# class CoPP_IMPORTANT\nSW1(config-pmap-c)# police 256000 4000 conform-action transmit exceed-action drop\nSW1(config-pmap-c-police)# class CoPP_NORMAL\nSW1(config-pmap-c)# police 128000 2000 conform-action transmit exceed-action drop\nSW1(config-pmap-c-police)# class CoPP_UNDESIRABLE\nSW1(config-pmap-c)# police 8000 1000 conform-action drop exceed-action drop\nSW1(config-pmap-c-police)# class CoPP_DEFAULT\nSW1(config-pmap-c)# police 64000 1000 conform-action transmit exceed-action drop\nSW1(config-pmap-c-police)# exit\nSW1(config-pmap-c)# exit\nSW1(config-pmap)# exit\n\nStep 4: Apply the policy map to the control plane.\n\nSW1(config)# control-plane\nSW1(config-cp)# service-policy input CONTROL_PLANE_POLICY\nSW1(config-cp)# end", "CCI": "SV-110977,V-101873,CCI-002385"}, {"VulnID": "V-221080", "RuleID": "SV-221080r622190_rule", "StigID": "CISC-RT-000130", "Severity": "high", "Cat": "CAT I", "Classification": "", "GroupTitle": "SRG-NET-000205-RTR-000001", "RuleTitle": "The Cisco switch must be configured to restrict traffic destined to itself.", "Description": "<VulnDiscussion>The route processor handles traffic destined to the switch\u2014the key component used to build forwarding paths and is instrumental with all network management functions. Hence, any disruption or DoS attack to the route processor can result in mission critical network outages.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "The route processor handles traffic destined to the switch\u2014the key component used to build forwarding paths and is instrumental with all network management functions. Hence, any disruption or DoS attack to the route processor can result in mission critical network outages.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the external and internal ACLs to verify that the switch is configured to only allow specific management and control plane traffic from specific sources destined to itself.\n\nStep 1: Verify ACLs has been configured as shown in the example below that matches expected control plane and management plane traffic. With the exception of ICMP, all other traffic destined to the switch should be dropped.\n\nip access-list EXTERNAL_ACL\n 10 permit tcp x.11.1.1/32 eq bgp x.11.1.2/32 \n 20 permit tcp x.11.1.1/32 x.11.1.2/32 eq bgp \n 30 permit icmp x.11.1.1/32 x.11.1.2/32 echo \n 40 permit icmp x.11.1.1/32 x.11.1.2/32 echo-reply \n 50 deny ip any x.11.1.1/32 log \n 60 permit \u2026 \n \u2026\n \u2026\n \u2026\n90 deny ip any any log \n\nip access-list INTERNAL_ACL\n 10 permit icmp any any \n 20 permit ospf 10.1.12.1/32 10.1.12.2/32 \n 30 permit tcp 10.2.1.0/24 10.1.12.2/32 eq 22 \n 40 permit tcp 10.2.1.0/24 10.1.12.2/32 eq tacacs \n 50 permit udp 10.2.1.0/24 10.1.12.2/32 eq snmp \n 60 permit udp 10.2.1.0/24 10.1.12.2/32 eq ntp \n 70 deny ip any 10.1.12.2/32 log \n 80 permit \u2026.\n90 deny ip any any log\n\nNote: For the internal ACL example, all switches within the hypothetical network (10.1.0.0/16) have been configured to use the loopback address to source all management traffic (not shown); hence, the loopbacks are the only allowable destination address for management traffic. In addition, all management traffic destined to the switch must originate from the management network (10.2.1.0/24). With the exception of link-local control plane traffic and ICMP, all other traffic destined to any physical interface address will be dropped.\n\nStep 2: Verify that the ACL has been applied to the appropriate interface as shown in the example below:\n\ninterface Ethernet1/2\n no switchport\n ip access-group EXTERNAL_ACL in\n ip address x.11.1.2 255.255.255.254\ninterface Ethernet1/3\n no switchport\n ip access-group INTERNAL_ACL in\n ip address 10.1.12.2 255.255.255.0\n\nIf the switch is not configured to restrict traffic destined to itself, this is a finding.", "FixText": "Step 1: Configure the ACL for any external interfaces as shown in the example below:\n\nSW1(config)# ip access-list EXTERNAL_ACL\nSW1(config-acl)# permit tcp host x.11.1.1 eq bgp host x.11.1.2 \nSW1(config-acl)# permit tcp host x.11.1.1 host x.11.1.2 eq bgp\nSW1(config-acl)# permit icmp host x.11.1.1 host x.11.1.2 echo\nSW1(config-acl)# permit icmp host x.11.1.1 host x.11.1.2 echo-reply\nSW1(config-acl)# deny ip any host x.11.1.1 log\nSW1(config-acl)# permit \u2026\n\u2026\n\u2026\n\u2026\nSW1(config-acl)# deny ip any any log\n\nConfigure the ACL for any external interfaces as shown in the example below:\n\nSW1(config)# ip access-list INTERNAL_ACL\nSW1(config-acl)# permit ospf host 10.1.12.1 host 10.1.12.2\nSW1(config-acl)# permit tcp 10.2.1.0 0.0.0.255 host 10.1.12.2 eq 22\nSW1(config-acl)# permit tcp 10.2.1.0 0.0.0.255 host 10.1.12.2 eq tacacs\nSW1(config-acl)# permit udp 10.2.1.0 0.0.0.255 host 10.1.12.2 eq snmp\nSW1(config-acl)# permit udp 10.2.1.0 0.0.0.255 host 10.1.12.2 eq ntp\nSW1(config-acl)# deny ip any host 10.1.12.2 log\nSW1(config-acl)# permit \u2026\n\u2026\n\u2026\n\u2026\nSW1(config-acl)# permit ip any any log\nSW1(config-acl)# exit\n\nNote: best practice is to configure the ACL statements relative to traffic destined to the switch first followed by ACL statements for transit traffic.\n\nStep 2: Apply the ACLs to the appropriate interface as shown in the example below:\n\nSW1(config)# int e1/2\nSW1(config-if)# ip access-group EXTERNAL_ACL in\nSW1(config)# int e1/3\nSW1(config-if)# ip access-group INTERNAL_ACL in", "CCI": "SV-110979,V-101875,CCI-001097"}, {"VulnID": "V-221081", "RuleID": "SV-221081r622190_rule", "StigID": "CISC-RT-000140", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000205-RTR-000002", "RuleTitle": "The Cisco switch must be configured to drop all fragmented Internet Control Message Protocol (ICMP) packets destined to itself.", "Description": "<VulnDiscussion>Fragmented ICMP packets can be generated by hackers for DoS attacks such as Ping O' Death and Teardrop. It is imperative that all fragmented ICMP packets are dropped.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Fragmented ICMP packets can be generated by hackers for DoS attacks such as Ping O' Death and Teardrop. It is imperative that all fragmented ICMP packets are dropped.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the external and internal ACLs to verify that the switch is configured drop all fragmented ICMP packets destined to itself.\n\nip access-list EXTERNAL_ACL\n 10 permit tcp x.11.1.1/32 eq bgp x.11.1.2/32 \n 20 permit tcp x.11.1.1/32 x.11.1.2/32 eq bgp \n 30 deny icmp any x.11.1.2/32 fragments log\n 40 permit icmp x.11.1.1/32 x.11.1.2/32 echo \n\u2026\n\u2026\n\u2026\n90 deny ip any any log\n\nip access-list INTERNAL_ACL\n 10 deny icmp any host 10.1.12.2/32 fragments\n 20 permit icmp any any\n\nNote: Ensure the statement to deny ICMP fragments is before any permit statements for ICMP.\n\nIf the switch is not configured to drop all fragmented ICMP packets destined to itself, this is a finding.", "FixText": "Configure the external and internal ACLs to drop all fragmented ICMP packets destined to itself as shown in the example below:\n\nSW1(config)# ip access-list EXTERNAL_ACL\nSW1(config-acl)# 35 deny icmp any host x.11.1.2 fragments log\nSW1(config-acl)# exit\n\nSW1(config)# ip access-list INTERNAL_ACL\nSW1(config-acl)# 25 deny icmp any host 10.1.12.2 fragments log\nSW1(config-acl)# end\n\nNote: Ensure the above statement is before any permit statements for ICMP.", "CCI": "SV-110981,V-101877,CCI-001097"}, {"VulnID": "V-221082", "RuleID": "SV-221082r622190_rule", "StigID": "CISC-RT-000150", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000362-RTR-000111", "RuleTitle": "The Cisco switch must be configured to have Gratuitous ARP disabled on all external interfaces.", "Description": "<VulnDiscussion>A gratuitous ARP is an ARP broadcast in which the source and destination MAC addresses are the same. It is used to inform the network about a host IP address. A spoofed gratuitous ARP message can cause network mapping information to be stored incorrectly, causing network malfunction.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "A gratuitous ARP is an ARP broadcast in which the source and destination MAC addresses are the same. It is used to inform the network about a host IP address. A spoofed gratuitous ARP message can cause network mapping information to be stored incorrectly, causing network malfunction.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the configuration to determine if gratuitous ARP is disabled on all external interfaces as shown in the example below:\n\ninterface Ethernet2/7\n no switchport\n ip address x.22.4.2/30\n no ip arp gratuitous request\n\nNote: Gratuitous ARP is enabled on all interfaces by default.\n\nIf gratuitous ARP is enabled on any external interface, this is a finding.", "FixText": "Disable Gratuitous ARP as shown in the example below:\n\nSW1(config)# int e2/7\nSW1(config-if)# no ip arp gratuitous request\nSW1(config-if)# end", "CCI": "SV-110983,V-101879,CCI-002385"}, {"VulnID": "V-221083", "RuleID": "SV-221083r622190_rule", "StigID": "CISC-RT-000160", "Severity": "low", "Cat": "CAT III", "Classification": "", "GroupTitle": "SRG-NET-000362-RTR-000112", "RuleTitle": "The Cisco switch must be configured to have IP directed broadcast disabled on all interfaces.", "Description": "<VulnDiscussion>An IP directed broadcast is a datagram sent to the broadcast address of a subnet that is not directly attached to the sending machine. The directed broadcast is routed through the network as a unicast packet until it arrives at the target subnet, where it is converted into a link-layer broadcast. Because of the nature of the IP addressing architecture, only the last switch in the chain, which is connected directly to the target subnet, can conclusively identify a directed broadcast.\n\nIP directed broadcasts are used in the extremely common and popular smurf, or denial-of-service (DoS), attacks. In a smurf attack, the attacker sends Internet Control Message Protocol (ICMP) echo requests from a falsified source address to a directed broadcast address, causing all the hosts on the target subnet to send replies to the falsified source. By sending a continuous stream of such requests, the attacker can create a much larger stream of replies, which can completely inundate the host whose address is being falsified. This service should be disabled on all interfaces when not needed to prevent smurf and DoS attacks.\n\nDirected broadcast can be enabled on internal facing interfaces to support services such as Wake-On-LAN. Case scenario may also include support for legacy applications where the content server and the clients do not support multicast. The content servers send streaming data using UDP broadcast. Used in conjunction with the IP multicast helper-map feature, broadcast data can be sent across a multicast topology. The broadcast streams are converted to multicast and vice versa at the first-hop switches and last-hop switches before entering and leaving the multicast transit area respectively. The last-hop switch must convert the multicast to broadcast. Hence, this interface must be configured to forward a broadcast packet (i.e., a directed broadcast address is converted to the all nodes broadcast address).</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "An IP directed broadcast is a datagram sent to the broadcast address of a subnet that is not directly attached to the sending machine. The directed broadcast is routed through the network as a unicast packet until it arrives at the target subnet, where it is converted into a link-layer broadcast. Because of the nature of the IP addressing architecture, only the last switch in the chain, which is connected directly to the target subnet, can conclusively identify a directed broadcast.\n\nIP directed broadcasts are used in the extremely common and popular smurf, or denial-of-service (DoS), attacks. In a smurf attack, the attacker sends Internet Control Message Protocol (ICMP) echo requests from a falsified source address to a directed broadcast address, causing all the hosts on the target subnet to send replies to the falsified source. By sending a continuous stream of such requests, the attacker can create a much larger stream of replies, which can completely inundate the host whose address is being falsified. This service should be disabled on all interfaces when not needed to prevent smurf and DoS attacks.\n\nDirected broadcast can be enabled on internal facing interfaces to support services such as Wake-On-LAN. Case scenario may also include support for legacy applications where the content server and the clients do not support multicast. The content servers send streaming data using UDP broadcast. Used in conjunction with the IP multicast helper-map feature, broadcast data can be sent across a multicast topology. The broadcast streams are converted to multicast and vice versa at the first-hop switches and last-hop switches before entering and leaving the multicast transit area respectively. The last-hop switch must convert the multicast to broadcast. Hence, this interface must be configured to forward a broadcast packet (i.e., a directed broadcast address is converted to the all nodes broadcast address).", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the switch configuration to determine if it is compliant with this requirement. IP directed broadcast command must not be found on any interface as shown in the example below:\n\ninterface Ethernet2/2\n no switchport\n ip address 10.1.12.1/24\n ip directed-broadcast\n\nIf IP directed broadcast is not disabled on all interfaces, this is a finding.", "FixText": "Disable IP directed broadcast on all interfaces as shown in the example below:\n\nSW1(config)# int e2/2\nSW1(config-if)# no ip directed-broadcast \nSW1(config-if)# end", "CCI": "SV-110985,V-101881,CCI-002385"}, {"VulnID": "V-221084", "RuleID": "SV-221084r622190_rule", "StigID": "CISC-RT-000170", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000362-RTR-000113", "RuleTitle": "The Cisco switch must be configured to have Internet Control Message Protocol (ICMP) unreachable messages disabled on all external interfaces.", "Description": "<VulnDiscussion>The ICMP supports IP traffic by relaying information about paths, routes, and network conditions. Switches automatically send ICMP messages under a wide variety of conditions. Host unreachable ICMP messages are commonly used by attackers for network mapping and diagnosis.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "The ICMP supports IP traffic by relaying information about paths, routes, and network conditions. Switches automatically send ICMP messages under a wide variety of conditions. Host unreachable ICMP messages are commonly used by attackers for network mapping and diagnosis.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the switch configuration to determine if it is compliant with this requirement. The ip unreachables command must not be found on any interface as shown in the example below:\n\ninterface Ethernet2/7\n no switchport\n ip address x.22.4.2/30\n ip unreachables\n\nIf ICMP unreachable notifications are sent from any external interfaces, this is a finding.", "FixText": "Disable ip unreachables on all external interfaces as shown below:\n\nSW1(config)# int e2/7\nSW1(config-if)# no ip unreachables\nSW1(config-if)# end", "CCI": "SV-110987,V-101883,CCI-002385"}, {"VulnID": "V-221085", "RuleID": "SV-221085r622190_rule", "StigID": "CISC-RT-000190", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000362-RTR-000115", "RuleTitle": "The Cisco switch must be configured to have Internet Control Message Protocol (ICMP) redirect messages disabled on all external interfaces.", "Description": "<VulnDiscussion>The ICMP supports IP traffic by relaying information about paths, routes, and network conditions. Switches automatically send ICMP messages under a wide variety of conditions. Redirect ICMP messages are commonly used by attackers for network mapping and diagnosis.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "The ICMP supports IP traffic by relaying information about paths, routes, and network conditions. Switches automatically send ICMP messages under a wide variety of conditions. Redirect ICMP messages are commonly used by attackers for network mapping and diagnosis.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the switch configuration to verify that the no ip redirects command has been configured on all external interfaces as shown in the example below:\n\ninterface Ethernet2/7\n no switchport\n ip address x.22.4.2/30\n no ip redirects\n\nIf ICMP Redirect messages are enabled on any external interfaces, this is a finding.", "FixText": "Disable ICMP redirects on all external interfaces as shown in the example below:\n\nSW1(config)# int e2/7\nSW1(config-if)# no ip redirects", "CCI": "SV-110989,V-101885,CCI-002385"}, {"VulnID": "V-221086", "RuleID": "SV-221086r622190_rule", "StigID": "CISC-RT-000200", "Severity": "low", "Cat": "CAT III", "Classification": "", "GroupTitle": "SRG-NET-000078-RTR-000001", "RuleTitle": "The Cisco switch must be configured to log all packets that have been dropped at interfaces via an ACL.", "Description": "<VulnDiscussion>Auditing and logging are key components of any security architecture. It is essential for security personnel to know what is being done or attempted to be done, and by whom, to compile an accurate risk assessment. Auditing the actions on network devices provides a means to recreate an attack or identify a configuration mistake on the device.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Auditing and logging are key components of any security architecture. It is essential for security personnel to know what is being done or attempted to be done, and by whom, to compile an accurate risk assessment. Auditing the actions on network devices provides a means to recreate an attack or identify a configuration mistake on the device.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review all ACLs used to filter traffic and verify that packets being dropped are logged as shown in the configuration below:\n\nip access-list EXTERNAL_ACL\n 10 permit tcp x.11.1.1/32 eq bgp x.11.1.2/32 \n 20 permit tcp x.11.1.1/32 x.11.1.2/32 eq bgp \n 30 permit icmp x.11.1.1/32 x.11.1.2/32 echo \n\u2026\n \u2026\n \u2026\n90 deny ip any any log\n\nIf packets being dropped at an interface are not logged, this is a finding.", "FixText": "Configure ACLs to log packets that are dropped as shown in the example below:\n\nSW1(config)# ip access-list EXTERNAL_ACL\nSW1(config-acl)# 90 deny ip any any log\nSW1(config-acl)# end", "CCI": "SV-110991,V-101887,CCI-000134"}, {"VulnID": "V-221087", "RuleID": "SV-221087r622190_rule", "StigID": "CISC-RT-000240", "Severity": "high", "Cat": "CAT I", "Classification": "", "GroupTitle": "SRG-NET-000202-RTR-000001", "RuleTitle": "The Cisco perimeter switch must be configured to deny network traffic by default and allow network traffic by exception.", "Description": "<VulnDiscussion>A deny-all, permit-by-exception network communications traffic policy ensures that only connections that are essential and approved are allowed.\n\nThis requirement applies to both inbound and outbound network communications traffic. All inbound and outbound traffic must be denied by default. Firewalls and perimeter switches should only allow traffic through that is explicitly permitted. The initial defense for the internal network is to block any traffic at the perimeter that is attempting to make a connection to a host residing on the internal network. In addition, allowing unknown or undesirable outbound traffic by the firewall or switch will establish a state that will permit the return of this undesirable traffic inbound.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "A deny-all, permit-by-exception network communications traffic policy ensures that only connections that are essential and approved are allowed.\n\nThis requirement applies to both inbound and outbound network communications traffic. All inbound and outbound traffic must be denied by default. Firewalls and perimeter switches should only allow traffic through that is explicitly permitted. The initial defense for the internal network is to block any traffic at the perimeter that is attempting to make a connection to a host residing on the internal network. In addition, allowing unknown or undesirable outbound traffic by the firewall or switch will establish a state that will permit the return of this undesirable traffic inbound.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the switch configuration to verify that the inbound ACL applied to all external interfaces is configured to allow specific ports and protocols and deny all other traffic.\n\nStep 1: Verify that an inbound ACL is applied to all external interfaces as shown in the example below:\n\ninterface Ethernet1/2\n no switchport\n ip access-group EXTERNAL_ACL in\n ip address x.11.1.2 255.255.255.254\n\nStep 2: Review inbound ACL to verify that it is configured to deny all other traffic that is not explicitly allowed.\n\nip access-list EXTERNAL_ACL\n 10 permit tcp x.11.1.1/32 eq bgp x.11.1.2/32 \n 20 permit tcp x.11.1.1/32 x.11.1.2/32 eq bgp \n 30 permit icmp x.11.1.1/32 x.11.1.2/32 echo \n 40 permit icmp x.11.1.1/32 x.11.1.2/32 echo-reply \n 50 permit tcp any x.11.2.3/32 eq www \n 60 permit \u2026 \n \u2026\n \u2026\n \u2026\n90 deny ip any any log\n\nIf the ACL is not configured to allow specific ports and protocols and deny all other traffic, this is a finding. If the ACL is not configured inbound on all external interfaces, this is a finding.", "FixText": "Step 1: Configure an inbound ACL to deny all other traffic by default as shown in the example below:\n\nSW1(config)# ip access-list EXTERNAL_ACL\nSW1(config-acl)# permit tcp host x.11.1.1 eq bgp host x.11.1.2 \nSW1(config-acl)# permit tcp host x.11.1.1 host x.11.1.2 eq bgp\nSW1(config-acl)# permit icmp host x.11.1.1 host x.11.1.2 echo\nSW1(config-acl)# permit icmp host x.11.1.1 host x.11.1.2 echo-reply\nSW1(config-acl)# permit tcp any x.11.2.3/32 eq www\nSW1(config-acl)# permit \u2026\n\u2026\n\u2026\n\u2026\nSW1(config-acl)# deny ip any any log\n\nStep 2: Apply the ingress filter to all external interfaces.\n\nSW1(config)#int e1/2\nSW1(config-if)#ip access-group EXTERNAL_ACL in", "CCI": "SV-110993,V-101889,CCI-001109"}, {"VulnID": "V-221088", "RuleID": "SV-221088r622190_rule", "StigID": "CISC-RT-000250", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000019-RTR-000002", "RuleTitle": "The Cisco perimeter switch must be configured to enforce approved authorizations for controlling the flow of information between interconnected networks in accordance with applicable policy.", "Description": "<VulnDiscussion>Information flow control regulates authorized information to travel within a network and between interconnected networks. Controlling the flow of network traffic is critical so it does not introduce any unacceptable risk to the network infrastructure or data. An example of a flow control restriction is blocking outside traffic claiming to be from within the organization. For most switches, internal information flow control is a product of system design.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Information flow control regulates authorized information to travel within a network and between interconnected networks. Controlling the flow of network traffic is critical so it does not introduce any unacceptable risk to the network infrastructure or data. An example of a flow control restriction is blocking outside traffic claiming to be from within the organization. For most switches, internal information flow control is a product of system design.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the switch configuration to verify that ACLs are configured to allow or deny traffic for specific destination addresses as well as ports and protocols. In the example below, the switch is peering BGP with DISN. ICMP echo and echo-reply packets are allowed for troubleshooting connectivity. WWW traffic is permitted inbound to the NIPRNet host-facing web server (x.11.2.3).\n\nStep 1: Verify that an inbound ACL is applied to all external interfaces as shown in the example below:\n\ninterface Ethernet2/2\n description link to DISN\n no switchport\n ip access-group EXTERNAL_ACL in\n ip address x.11.1.2 255.255.255.254\n\nStep 2: Review inbound ACL to verify that it is configured to deny all other traffic that is not explicitly allowed.\n\nip access-list EXTERNAL_ACL\n 10 permit tcp any any established \n 20 permit tcp x.11.1.1/32 eq bgp x.11.1.2/32 \n 30 permit tcp x.11.1.1/32 x.11.1.2/32 eq bgp \n 40 permit icmp x.11.1.1/32 x.11.1.2/32 echo \n 50 permit icmp x.11.1.1/32 x.11.1.2/32 echo-reply \n 60 permit tcp any x.11.2.3/32 eq www \n 70 permit \u2026\n \u2026\n \u2026\n \u2026\n90 deny ip any any log\n\nIf the switch is not configured to enforce approved authorizations for controlling the flow of information between interconnected networks, this is a finding.", "FixText": "Step 1: Configure an ACL to allow or deny traffic as shown in the example below:\n\nSW2(config)# ip access-list EXTERNAL_ACL\nSW2(config-acl)# permit tcp any any established\nSW2(config-acl)# permit tcp x.11.1.1/32 eq bgp x.11.1.2/32 \nSW2(config-acl)# permit tcp x.11.1.1/32 x.11.1.2/32 eq bgp \nSW2(config-acl)# permit icmp x.11.1.1/32 x.11.1.2/32 echo \nSW2(config-acl)# permit icmp x.11.1.1/32 x.11.1.2/32 echo-reply \nSW2(config-acl)# permit tcp any x.11.2.3/32 eq www \nSW2(config-acl)# deny ip any any log\nSW2(config-acl)# exit\n\nStep 2: Apply the ACL inbound on all applicable interfaces.\n\nSW1(config)#int e2/2\nSW1(config-if)# ip access-group EXTERNAL_ACL in", "CCI": "SV-110995,V-101891,CCI-001414"}, {"VulnID": "V-221089", "RuleID": "SV-221089r622190_rule", "StigID": "CISC-RT-000260", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000364-RTR-000109", "RuleTitle": "The Cisco perimeter switch must be configured to only allow incoming communications from authorized sources to be routed to authorized destinations.", "Description": "<VulnDiscussion>Unrestricted traffic may contain malicious traffic that poses a threat to an enclave or to other connected networks. Additionally, unrestricted traffic may transit a network, which uses bandwidth and other resources.\n\nTraffic can be restricted directly by an access control list (ACL), which is a firewall function, or by Policy Routing. Policy Routing is a technique used to make routing decisions based on a number of different criteria other than just the destination network, including source or destination network, source or destination address, source or destination port, protocol, packet size, and packet classification. This overrides the switch's normal routing procedures used to control the specific paths of network traffic. It is normally used for traffic engineering but can also be used to meet security requirements; for example, traffic that is not allowed can be routed to the Null0 or discard interface. Policy Routing can also be used to control which prefixes appear in the routing table.\n\nThis requirement is intended to allow network administrators the flexibility to use whatever technique is most effective.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Unrestricted traffic may contain malicious traffic that poses a threat to an enclave or to other connected networks. Additionally, unrestricted traffic may transit a network, which uses bandwidth and other resources.\n\nTraffic can be restricted directly by an access control list (ACL), which is a firewall function, or by Policy Routing. Policy Routing is a technique used to make routing decisions based on a number of different criteria other than just the destination network, including source or destination network, source or destination address, source or destination port, protocol, packet size, and packet classification. This overrides the switch's normal routing procedures used to control the specific paths of network traffic. It is normally used for traffic engineering but can also be used to meet security requirements; for example, traffic that is not allowed can be routed to the Null0 or discard interface. Policy Routing can also be used to control which prefixes appear in the routing table.\n\nThis requirement is intended to allow network administrators the flexibility to use whatever technique is most effective.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the switch configuration to determine if the switch allows only incoming communications from authorized sources to be routed to authorized destinations. The hypothetical example below allows inbound NTP from server x.1.12.9 only to host x.12.1.21.\n\nip access-list EXTERNAL_ACL\n 10 permit tcp any any established \n 20 permit tcp x.11.1.1/32 eq bgp x.11.1.2/32 \n 30 permit tcp x.11.1.1/32 x.11.1.2/32 eq bgp \n 40 permit icmp x.11.1.1/32 x.11.1.2/32 echo \n 50 permit icmp x.11.1.1/32 x.11.1.2/32 echo-reply \n 60 permit tcp any x.11.2.3/32 eq www \n 70 permit udp x.12.1.9/32 x.12.1.21/32 eq ntp \n\u2026\n \u2026\n \u2026\n90 deny ip any any log\n\nIf the switch does not restrict incoming communications to allow only authorized sources and destinations, this is a finding.", "FixText": "Configure the switch to allow only incoming communications from authorized sources to be routed to authorized destinations. \n\nSW2(config)# ip access-list EXTERNAL_ACL\nSW2(config-acl)# permit tcp any any established\n\u2026\n\u2026\n\u2026\nSW2(config-acl)# permit udp host x.12.1.9 host x.12.1.21 eq ntp\nSW2(config-acl)# deny ip any any log\nSW2(config-acl)# end", "CCI": "SV-110997,V-101893,CCI-002403"}, {"VulnID": "V-221090", "RuleID": "SV-221090r622190_rule", "StigID": "CISC-RT-000270", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000364-RTR-000110", "RuleTitle": "The Cisco perimeter switch must be configured to block inbound packets with source Bogon IP address prefixes.", "Description": "<VulnDiscussion>Packets with Bogon IP source addresses should never be allowed to traverse the IP core. Bogon IP networks are RFC1918 addresses or address blocks that have never been assigned by the IANA or have been reserved.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Packets with Bogon IP source addresses should never be allowed to traverse the IP core. Bogon IP networks are RFC1918 addresses or address blocks that have never been assigned by the IANA or have been reserved.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the switch configuration to verify that an ingress ACL applied to all external interfaces is blocking packets with Bogon source addresses.\n\nStep 1: Verify an ACL has been configured containing the current Bogon prefixes as shown in the example below:\n\nip access-list EXTERNAL_ACL\n 10 deny ip 0.0.0.0/8 any log \n 20 deny ip 10.0.0.0/8 any log \n 30 deny ip 100.64.0.0/10 any log \n 40 deny ip 127.0.0.0/8 any log \n 50 deny ip 169.254.0.0/16 any log \n 60 deny ip 172.16.0.0/12 any log \n 70 deny ip 192.0.0.0/24 any log \n 80 deny ip 192.0.2.0/24 any log \n 90 deny ip 192.168.0.0/16 any log \n 100 deny ip 198.18.0.0/15 any log \n 110 deny ip 198.51.100.0/24 any log \n 120 deny ip 203.0.113.0/24 any log \n 130 deny ip 224.0.0.0/3 any log \n 140 permit tcp any any established \n 150 permit \u2026\n \u2026\n \u2026\n \u2026\n210 deny ip any any log\n\nStep 2: Verify that the inbound ACL applied to all external interfaces will block all traffic from Bogon source addresses.\n\ninterface Ethernet2/2\n description link to DISN\n no switchport\n ip access-group EXTERNAL_ACL in\n\nIf the switch is not configured to block inbound packets with source Bogon IP address prefixes, this is a finding.", "FixText": "Configure the perimeter to block inbound packets with Bogon source addresses.\n\nStep 1: Configure an ACL containing the current Bogon prefixes as shown below:\n\nSW1(config)# ip access-list EXTERNAL_ACL\nSW1(config-acl)# deny ip 0.0.0.0 0.255.255.255 any log\nSW1(config-acl)# deny ip 10.0.0.0 0.255.255.255 any log\nSW1(config-acl)# deny ip 100.64.0.0 0.63.255.255 any log\nSW1(config-acl)# deny ip 127.0.0.0 0.255.255.255 any log\nSW1(config-acl)# deny ip 169.254.0.0 0.0.255.255 any log\nSW1(config-acl)# deny ip 172.16.0.0 0.15.255.255 any log\nSW1(config-acl)# deny ip 192.0.0.0 0.0.0.255 any log\nSW1(config-acl)# deny ip 192.0.2.0 0.0.0.255 any log\nSW1(config-acl)# deny ip 192.168.0.0 0.0.255.255 any log\nSW1(config-acl)# deny ip 198.18.0.0 0.1.255.255 any log\nSW1(config-acl)# deny ip 198.51.100.0 0.0.0.255 any log\nSW1(config-acl)# deny ip 203.0.113.0 0.0.0.255 any log\nSW1(config-acl)# deny ip 224.0.0.0 31.255.255.255 any log\nSW1(config-acl)# deny ip 240.0.0.0 31.255.255.255 any log\nSW1(config-acl)# permit tcp any any established\nSW1(config-acl)# permit \u2026\n\u2026\n\u2026\n\u2026\nSW1(config-acl)# deny ip any any log\nSW1(config-acl)# end\n\nStep 2: Apply the ACL inbound on all external interfaces.\n\nSW1(config)#int e2/2\nSW1(config-if)# ip access-group EXTERNAL_ACL in\nSW1(config-if)# end", "CCI": "SV-110999,V-101895,CCI-002403"}, {"VulnID": "V-221091", "RuleID": "SV-221091r622190_rule", "StigID": "CISC-RT-000310", "Severity": "high", "Cat": "CAT I", "Classification": "", "GroupTitle": "SRG-NET-000205-RTR-000014", "RuleTitle": "The Cisco perimeter switch must be configured to restrict it from accepting outbound IP packets that contain an illegitimate address in the source address field via egress filter or by enabling Unicast Reverse Path Forwarding (uRPF).", "Description": "<VulnDiscussion>A compromised host in an enclave can be used by a malicious platform to launch cyberattacks on third parties. This is a common practice in \"botnets\", which are a collection of compromised computers using malware to attack other computers or networks. DDoS attacks frequently leverage IP source address spoofing to send packets to multiple hosts that in turn will then send return traffic to the hosts with the IP addresses that were forged. This can generate significant amounts of traffic. Therefore, protection measures to counteract IP source address spoofing must be taken. When uRPF is enabled in strict mode, the packet must be received on the interface that the device would use to forward the return packet, thereby mitigating IP source address spoofing.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "A compromised host in an enclave can be used by a malicious platform to launch cyberattacks on third parties. This is a common practice in \"botnets\", which are a collection of compromised computers using malware to attack other computers or networks. DDoS attacks frequently leverage IP source address spoofing to send packets to multiple hosts that in turn will then send return traffic to the hosts with the IP addresses that were forged. This can generate significant amounts of traffic. Therefore, protection measures to counteract IP source address spoofing must be taken. When uRPF is enabled in strict mode, the packet must be received on the interface that the device would use to forward the return packet, thereby mitigating IP source address spoofing.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the switch configuration to verify uRPF or an egress ACL has been configured on all internal interfaces to restrict the switch from accepting outbound IP packets that contain an illegitimate address in the source address field.\n\nuRPF example\n\ninterface Ethernet2/4\n description downstream link to LAN\n no switchport\n ip address 10.1.12.1/24\n ip verify unicast source reachable-via rx\n\nEgress ACL example\n\nip access-list EGRESS_FILTER\n 10 permit udp 10.1.15.0/24 any eq domain \n 20 permit tcp 10.1.15.0/24 any eq ftp \n 30 permit tcp 10.1.15.0/24 any eq ftp-data \n 40 permit tcp 10.1.15.0/24 any eq www \n 50 permit icmp 10.1.15.0/24 any \n 60 permit icmp 10.1.15.0/24 any echo \n 70 deny ip any any\n\u2026\n\u2026\n\u2026\ninterface Ethernet2/4\n description downstream link to LAN\n no switchport\n ip access-group EGRESS_FILTER in\n ip address 10.1.12.1/24\n\nIf uRPF or an egress ACL to restrict the switch from accepting outbound IP packets that contain an illegitimate address in the source address field has not been configured on all internal interfaces in an enclave, this is a finding.", "FixText": "Configure the switch to ensure that an egress ACL or uRPF is configured on internal interfaces to restrict the switch from accepting any outbound IP packet that contains an illegitimate address in the source field. The example below enables uRPF.\n\nSW1(config)# int e2/4\nSW1(config-if)# ip verify unicast source reachable-via rx\nSW1(config-if)# end", "CCI": "SV-111001,V-101897,CCI-001094"}, {"VulnID": "V-221092", "RuleID": "SV-221092r622190_rule", "StigID": "CISC-RT-000320", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000205-RTR-000003", "RuleTitle": "The Cisco perimeter switch must be configured to filter traffic destined to the enclave in accordance with the guidelines contained in DoD Instruction 8551.1.", "Description": "<VulnDiscussion>Vulnerability assessments must be reviewed by the System Administrator, and protocols must be approved by the Information Assurance (IA) staff before entering the enclave.\n\nACLs are the first line of defense in a layered security approach. They permit authorized packets and deny unauthorized packets based on port or service type. They enhance the posture of the network by not allowing packets to reach a potential target within the security domain. The lists provided are highly susceptible ports and services that should be blocked or limited as much as possible without adversely affecting customer requirements. Auditing packets attempting to penetrate the network that are stopped by an ACL will allow network administrators to broaden their protective ring and more tightly define the scope of operation.\n\nIf the perimeter is in a Deny-by-Default posture and what is allowed through the filter is in accordance with DoD Instruction 8551.1, and if the permit rule is explicitly defined with explicit ports and protocols allowed, then all requirements related to PPS being blocked would be satisfied.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Vulnerability assessments must be reviewed by the System Administrator, and protocols must be approved by the Information Assurance (IA) staff before entering the enclave.\n\nACLs are the first line of defense in a layered security approach. They permit authorized packets and deny unauthorized packets based on port or service type. They enhance the posture of the network by not allowing packets to reach a potential target within the security domain. The lists provided are highly susceptible ports and services that should be blocked or limited as much as possible without adversely affecting customer requirements. Auditing packets attempting to penetrate the network that are stopped by an ACL will allow network administrators to broaden their protective ring and more tightly define the scope of operation.\n\nIf the perimeter is in a Deny-by-Default posture and what is allowed through the filter is in accordance with DoD Instruction 8551.1, and if the permit rule is explicitly defined with explicit ports and protocols allowed, then all requirements related to PPS being blocked would be satisfied.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the switch configuration to verify that the ingress ACL is in accordance with DoD 8551.1.\n\nStep 1: Verify that an inbound ACL is configured on all external interfaces.\n\ninterface Ethernet2/2\n description link to DISN\n no switchport\n ip access-group EXTERNAL_ACL in\n\nStep 2. Review the inbound ACL to verify that it is filtering traffic in accordance with DoD 8551.1.\n\nip access-list EXTERNAL_ACL\n 10 permit tcp any any established \n 20 permit tcp x.11.1.1/32 eq bgp x.11.1.2/32 \n 30 permit tcp x.11.1.1/32 x.11.1.2/32 eq bgp \n 40 permit icmp x.11.1.1/32 x.11.1.2/32 echo \n 50 permit icmp x.11.1.1/32 x.11.1.2/32 echo-reply \n 60 permit tcp any x.11.2.3/32 eq www \n 70 permit udp x.12.1.9/32 x.12.1.21/32 eq ntp\n\u2026\n \u2026 < must be in accordance with DoD Instruction 8551.1>\n\u2026\n140 deny ip any any log\n\nIf the switch does not filter traffic in accordance with the guidelines contained in DoD 8551, this is a finding.", "FixText": "Configure the switch to use an inbound ACL on all external interfaces as shown in the example below to restrict traffic in accordance with the guidelines contained in DOD Instruction 8551.1.\n\nSW2(config)# ip access-list EXTERNAL_ACL\nSW2(config-acl)# permit tcp any any established\nSW2(config-acl)# permit tcp x.11.1.1/32 eq bgp x.11.1.2/32 \nSW2(config-acl)# permit tcp x.11.1.1/32 x.11.1.2/32 eq bgp \nSW2(config-acl)# permit icmp x.11.1.1/32 x.11.1.2/32 echo \nSW2(config-acl)# permit icmp x.11.1.1/32 x.11.1.2/32 echo-reply \nSW2(config-acl)# permit tcp any x.11.2.3/32 eq www \n\u2026\n\u2026 < must be in accordance with DoD Instruction 8551.1>\n\u2026\nSW2(config-acl)# deny ip any any log\nSW2(config-acl)# exit\nSW1(config)#int e2/2\nSW1(config-if)# ip access-group EXTERNAL_ACL in\nSW1(config-if)# end", "CCI": "SV-111003,V-101899,CCI-001097"}, {"VulnID": "V-221093", "RuleID": "SV-221093r622190_rule", "StigID": "CISC-RT-000330", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000205-RTR-000004", "RuleTitle": "The Cisco perimeter switch must be configured to filter ingress traffic at the external interface on an inbound direction.", "Description": "<VulnDiscussion>Access lists are used to separate data traffic into that which it will route (permitted packets) and that which it will not route (denied packets). Secure configuration of switches makes use of access lists for restricting access to services on the switch itself as well as for filtering traffic passing through the switch. \n\nInbound versus Outbound: It should be noted that some operating systems default access lists are applied to the outbound queue. The more secure solution is to apply the access list to the inbound queue for three reasons:\n\n- The switch can protect itself before damage is inflicted.\n- The input port is still known and can be filtered upon.\n- It is more efficient to filter packets before routing them.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Access lists are used to separate data traffic into that which it will route (permitted packets) and that which it will not route (denied packets). Secure configuration of switches makes use of access lists for restricting access to services on the switch itself as well as for filtering traffic passing through the switch. \n\nInbound versus Outbound: It should be noted that some operating systems default access lists are applied to the outbound queue. The more secure solution is to apply the access list to the inbound queue for three reasons:\n\n- The switch can protect itself before damage is inflicted.\n- The input port is still known and can be filtered upon.\n- It is more efficient to filter packets before routing them.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the switch configuration to verify that an inbound ACL is configured on all external interfaces as shown in the example below:\n\ninterface Ethernet2/2\n description link to DISN\n no switchport\n ip access-group EXTERNAL_ACL in\n\nIf the switch is not configured to filter traffic entering the network at all external interfaces in an inbound direction, this is a finding.", "FixText": "Configure the switch to use an inbound ACL on all external interfaces as shown in the example below:\n\nSW1(config)#int e2/2\nSW1(config-if)# ip access-group EXTERNAL_ACL in\nSW1(config-if)# end", "CCI": "SV-111005,V-101901,CCI-001097"}, {"VulnID": "V-221094", "RuleID": "SV-221094r622190_rule", "StigID": "CISC-RT-000340", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000205-RTR-000005", "RuleTitle": "The Cisco perimeter switch must be configured to filter egress traffic at the internal interface on an inbound direction.", "Description": "<VulnDiscussion>Access lists are used to separate data traffic into that which it will route (permitted packets) and that which it will not route (denied packets). Secure configuration of switches makes use of access lists for restricting access to services on the switch itself as well as for filtering traffic passing through the switch. \n\nInbound versus Outbound: It should be noted that some operating systems default access lists are applied to the outbound queue. The more secure solution is to apply the access list to the inbound queue for three reasons:\n\n- The switch can protect itself before damage is inflicted.\n- The input port is still known and can be filtered upon.\n- It is more efficient to filter packets before routing them.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Access lists are used to separate data traffic into that which it will route (permitted packets) and that which it will not route (denied packets). Secure configuration of switches makes use of access lists for restricting access to services on the switch itself as well as for filtering traffic passing through the switch. \n\nInbound versus Outbound: It should be noted that some operating systems default access lists are applied to the outbound queue. The more secure solution is to apply the access list to the inbound queue for three reasons:\n\n- The switch can protect itself before damage is inflicted.\n- The input port is still known and can be filtered upon.\n- It is more efficient to filter packets before routing them.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the switch configuration to verify that the egress ACL is bound to the internal interface in an inbound direction.\n\ninterface Ethernet2/4\n description downstream link to LAN\n no switchport\n ip access-group EGRESS_FILTER in\n ip address 10.1.12.1/24\n\nIf the switch is not configured to filter traffic leaving the network at the internal interface in an inbound direction, this is a finding.", "FixText": "Configure the switch to use an inbound ACL on all internal interfaces as shown in the example below:\n\nSW1(config)# int e2/4\nSW1(config-if)# ip access-group EGRESS_FILTER in\nSW1(config-if)# end", "CCI": "SV-111007,V-101903,CCI-001097"}, {"VulnID": "V-221095", "RuleID": "SV-221095r622190_rule", "StigID": "CISC-RT-000350", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000205-RTR-000015", "RuleTitle": "The Cisco perimeter switch must be configured to block all packets with any IP options.", "Description": "<VulnDiscussion>Packets with IP options are not fast switched and henceforth must be punted to the switch processor. Hackers who initiate denial-of-service (DoS) attacks on switches commonly send large streams of packets with IP options. Dropping the packets with IP options reduces the load of IP options packets on the switch. The end result is a reduction in the effects of the DoS attack on the switch and on downstream switches.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Packets with IP options are not fast switched and henceforth must be punted to the switch processor. Hackers who initiate denial-of-service (DoS) attacks on switches commonly send large streams of packets with IP options. Dropping the packets with IP options reduces the load of IP options packets on the switch. The end result is a reduction in the effects of the DoS attack on the switch and on downstream switches.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "In Cisco NX-OS, all packets with any header option other than the \u201csource-route\u201d header option are dropped. By default, ipv4 source routing is enabled. Verify that source routing is disabled via the following command: \n\nno ip source-route\n\nIf the switch is not configured to drop all packets with IP option source routing, this is a finding.", "FixText": "Configure the switch to drop all packets with IP option source routing.\n\nSW1(config)# no ip source-route \nSW1(config)# end", "CCI": "SV-111009,V-101905,CCI-002403"}, {"VulnID": "V-221096", "RuleID": "SV-221096r622190_rule", "StigID": "CISC-RT-000360", "Severity": "low", "Cat": "CAT III", "Classification": "", "GroupTitle": "SRG-NET-000364-RTR-000111", "RuleTitle": "The Cisco perimeter switch must be configured to have Link Layer Discovery Protocol (LLDP) disabled on all external interfaces.", "Description": "<VulnDiscussion>LLDP is a neighbor discovery protocol used to advertise device capabilities, configuration information, and device identity. LLDP is media-and-protocol-independent as it runs over layer 2; therefore, two network nodes that support different layer 3 protocols can still learn about each other. Allowing LLDP messages to reach external network nodes provides an attacker a method to obtain information of the network infrastructure that can be useful to plan an attack.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "LLDP is a neighbor discovery protocol used to advertise device capabilities, configuration information, and device identity. LLDP is media-and-protocol-independent as it runs over layer 2; therefore, two network nodes that support different layer 3 protocols can still learn about each other. Allowing LLDP messages to reach external network nodes provides an attacker a method to obtain information of the network infrastructure that can be useful to plan an attack.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Step 1: Verify LLDP is not enabled globally via the command feature lldp.\n\nBy default the LLDP feature is not enabled. If LLDP is enabled, proceed to Step 2.\n\nStep 2: Verify LLDP is not enabled on any external interface as shown in the example below:\n\ninterface Ethernet2/2\n description link to DISN\n no switchport\n no lldp transmit\n\nNote: LLDP is enabled by default on all interfaces once it is enabled globally; hence the command lldp transmit will not be visible on the interface configuration.\n\nIf LLDP transmit is enabled on any external interface, this is a finding.", "FixText": "Disable LLDP transmit on all external interfaces as shown in the example below:\n\nSW2(config)# int e2/2\nSW2(config-if)# no lldp transmit \nSW2(config-if)# end", "CCI": "SV-111011,V-101907,CCI-002403"}, {"VulnID": "V-221097", "RuleID": "SV-221097r622190_rule", "StigID": "CISC-RT-000370", "Severity": "low", "Cat": "CAT III", "Classification": "", "GroupTitle": "SRG-NET-000364-RTR-000111", "RuleTitle": "The Cisco perimeter switch must be configured to have Cisco Discovery Protocol (CDP) disabled on all external interfaces.", "Description": "<VulnDiscussion>CDP is a Cisco proprietary neighbor discovery protocol used to advertise device capabilities, configuration information, and device identity. CDP is media-and-protocol-independent as it runs over layer 2; therefore, two network nodes that support different layer 3 protocols can still learn about each other. Allowing CDP messages to reach external network nodes provides an attacker a method to obtain information of the network infrastructure that can be useful to plan an attack.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "CDP is a Cisco proprietary neighbor discovery protocol used to advertise device capabilities, configuration information, and device identity. CDP is media-and-protocol-independent as it runs over layer 2; therefore, two network nodes that support different layer 3 protocols can still learn about each other. Allowing CDP messages to reach external network nodes provides an attacker a method to obtain information of the network infrastructure that can be useful to plan an attack.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Step 1: Verify CDP is not enabled globally via the command no cdp enable\n\nBy default CDP is enabled globally; hence, the command cdp enable will not be shown in the configuration. If CDP is enabled, proceed to Step 2.\n\nStep 2: Verify CDP is not enabled on any external interface as shown in the example below:\n\ninterface Ethernet2/2\n description link to DISN\n no switchport\n no cdp enable\n\nNote: By default CDP is enabled on all interfaces if CDP is enabled globally.\n\nIf CDP is enabled on any external interface, this is a finding.", "FixText": "Disable CDP on all external interfaces via no cdp enable interface command or disable CDP globally via no cdp enable command.", "CCI": "SV-111013,V-101909,CCI-002403"}, {"VulnID": "V-221098", "RuleID": "SV-221098r622190_rule", "StigID": "CISC-RT-000380", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000364-RTR-000112", "RuleTitle": "The Cisco perimeter switch must be configured to have Proxy ARP disabled on all external interfaces.", "Description": "<VulnDiscussion>When Proxy ARP is enabled on a switch, it allows that switch to extend the network (at Layer 2) across multiple interfaces (LAN segments). Because proxy ARP allows hosts from different LAN segments to look like they are on the same segment, proxy ARP is only safe when used between trusted LAN segments. Attackers can leverage the trusting nature of proxy ARP by spoofing a trusted host and then intercepting packets. Proxy ARP should always be disabled on switch interfaces that do not require it, unless the switch is being used as a LAN bridge.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "When Proxy ARP is enabled on a switch, it allows that switch to extend the network (at Layer 2) across multiple interfaces (LAN segments). Because proxy ARP allows hosts from different LAN segments to look like they are on the same segment, proxy ARP is only safe when used between trusted LAN segments. Attackers can leverage the trusting nature of proxy ARP by spoofing a trusted host and then intercepting packets. Proxy ARP should always be disabled on switch interfaces that do not require it, unless the switch is being used as a LAN bridge.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the switch configuration to determine if IP Proxy ARP is enabled on any external interface as shown in the example below:\n\ninterface Ethernet2/2\n description link to DISN\n no switchport\n ip address x.1.12.2/24\n ip proxy-arp\n no shutdown\n\nNote: By default Proxy ARP is disabled on all interfaces.\n\nIf IP Proxy ARP is enabled on any external interface, this is a finding.", "FixText": "Disable Proxy ARP on all external interfaces as shown in the example below:\n\nSW1(config)#int e2/2 \nSW1(config-if)# no ip proxy-arp\nSW1(config-if)# end", "CCI": "SV-111015,V-101911,CCI-002403"}, {"VulnID": "V-221099", "RuleID": "SV-221099r622190_rule", "StigID": "CISC-RT-000390", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000364-RTR-000113", "RuleTitle": "The Cisco perimeter switch must be configured to block all outbound management traffic.", "Description": "<VulnDiscussion>For in-band management, the management network must have its own subnet in order to enforce control and access boundaries provided by Layer 3 network nodes, such as switches and firewalls. Management traffic between the managed network elements and the management network is routed via the same links and nodes as that used for production or operational traffic. Safeguards must be implemented to ensure that the management traffic does not leak past the perimeter of the managed network.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "For in-band management, the management network must have its own subnet in order to enforce control and access boundaries provided by Layer 3 network nodes, such as switches and firewalls. Management traffic between the managed network elements and the management network is routed via the same links and nodes as that used for production or operational traffic. Safeguards must be implemented to ensure that the management traffic does not leak past the perimeter of the managed network.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "The perimeter switch of the managed network must be configured with an outbound ACL on the egress interface to block all management traffic as shown in the example below:\n\nStep 1: Verify that all external interfaces has been configured with an outbound ACL as shown in the example below:\n\ninterface Ethernet2/2\n description link to DISN\n no switchport\n ip access-group EXTERNAL_ACL_OUTBOUND out\n ip address x.11.1.2 255.255.255.254\n\nStep 2: Verify that the outbound ACL discards management traffic as shown in the example below:\n\nip access-list EXTERNAL_ACL_OUTBOUND\n 10 deny tcp any any eq tacacs log \n 20 deny tcp any any eq 22 log \n 30 deny udp any any eq snmp log \n 40 deny udp any any eq snmptrap log \n 50 deny udp any any eq syslog log \n 60 permit tcp any any eq www log \n 70 deny ip any any log\n\nIf management traffic is not blocked at the perimeter, this is a finding.", "FixText": "Configure the perimeter switch of the managed network with an outbound ACL on the egress interface to block all management traffic.\n\nStep 1: Configure an ACL to block egress management traffic.\n\nSW1(config)# ip access-list EXTERNAL_ACL_OUTBOUND\nSW1(config-acl)# deny tcp any any eq tacacs log\nSW1(config-acl)# deny tcp any any eq 22 log\nSW1(config-acl)# deny udp any any eq snmp log\nSW1(config-acl)# deny udp any any eq snmptrap log\nSW1(config-acl)# deny udp any any eq syslog log\nSW1(config-acl)# permit tcp any any eq www\nSW1(config-acl)# deny ip any any log\nSW1(config-acl)# exit\n\nNote: Permit commands would be configured to allow applicable outbound traffic. The example above is allowing web traffic.\n\nStep 2: Configure the external interfaces with the outbound ACL.\n\nSW1(config)#int e2/2\nSW1(config-if)# ip access-group EXTERNAL_ACL_OUTBOUND out", "CCI": "SV-111017,V-101913,CCI-001097"}, {"VulnID": "V-221100", "RuleID": "SV-221100r622190_rule", "StigID": "CISC-RT-000450", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000205-RTR-000012", "RuleTitle": "The Cisco switch must be configured to only permit management traffic that ingresses and egresses the out-of-band management (OOBM) interface.", "Description": "<VulnDiscussion>The OOBM access switch will connect to the management interface of the managed network elements. The management interface can be a true OOBM interface or a standard interface functioning as the management interface. In either case, the management interface of the managed network element will be directly connected to the OOBM network.\n\nAn OOBM interface does not forward transit traffic, thereby providing complete separation of production and management traffic. Since all management traffic is immediately forwarded into the management network, it is not exposed to possible tampering. The separation also ensures that congestion or failures in the managed network do not affect the management of the device. If the device does not have an OOBM port, the interface functioning as the management interface must be configured so that management traffic does not leak into the managed network and that production traffic does not leak into the management network.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "The OOBM access switch will connect to the management interface of the managed network elements. The management interface can be a true OOBM interface or a standard interface functioning as the management interface. In either case, the management interface of the managed network element will be directly connected to the OOBM network.\n\nAn OOBM interface does not forward transit traffic, thereby providing complete separation of production and management traffic. Since all management traffic is immediately forwarded into the management network, it is not exposed to possible tampering. The separation also ensures that congestion or failures in the managed network do not affect the management of the device. If the device does not have an OOBM port, the interface functioning as the management interface must be configured so that management traffic does not leak into the managed network and that production traffic does not leak into the management network.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "This requirement is only applicable where management access to the switch is via an OOBM interface which is not a true OOBM interface.\n\nStep 1: Verify that the managed interface has an inbound and outbound ACL configured. \n\ninterface Ethernet2/7\n description link to OOBM access switch\n no switchport\n ip address 10.11.1.22 255.255.255.0\n ip access-group INGRESS_MANAGEMENT_ACL in\n ip access-group EGRESS_MANAGEMENT_ACL in\n\nStep 2: Verify that the ingress ACL only allows management and ICMP traffic. \n\nip access-list INGRESS_MANAGEMENT_ACL\n 10 permit tcp any 10.11.1.22/32 eq tacacs \n 20 permit tcp any 10.11.1.22/32 eq 22 \n 30 permit udp any 10.11.1.22/32 eq snmp \n 40 permit udp any 10.11.1.22/32 eq snmptrap \n 50 permit udp any 10.11.1.22/32 eq ntp \n 60 permit icmp any 10.11.1.22/32 \n 70 deny ip any any log \n\nStep 3: Verify that the egress ACL blocks any transit traffic.\n\nip access-list MGMT_TRAFFIC_ACL\n 10 deny ip any any log \n\nNote: On Cisco switches, local generated packets are not inspected by outgoing interface access-lists. Hence, the above configuration would simply drop any packets not generated by the switch; hence, blocking any transit traffic.\n\nIf the switch does not restrict traffic that ingresses and egresses the management interface, this is a finding.", "FixText": "If the management interface is not a dedicated OOBM interface, it must be configured with both an ingress and egress ACL.\n\nStep 1: Configure an ingress ACL a shown in the example below:\n\nSW1(config)#ip access-list INGRESS_MANAGEMENT_ACL\nSW1(config-acl)# permit tcp any host 10.11.1.22 eq tacacs\nSW1(config-acl)# permit tcp any host 10.11.1.22 eq 22\nSW1(config-acl)# permit udp any host 10.11.1.22 eq snmp\nSW1(config-acl)# permit udp any host 10.11.1.22 eq snmptrap\nSW1(config-acl)# permit udp any host 10.11.1.22 eq ntp\nSW1(config-acl)# permit icmp any host 10.11.1.22\nSW1(config-acl)# deny ip any any log\nSW1(config-acl)# exit\n\nStep 2: Configure an egress ACL a shown in the example below:\n\nSW1(config)# ip access-list EGRESS_MANAGEMENT_ACL\nSW1(config-acl)# deny ip any any log\nSW1(config-acl)# exit\n\nStep 3: Apply the ACLs to the OOBM interfaces.\n\nSW1(config)#int e2/7\nSW1(config-if) ip access-group INGRESS_MANAGEMENT_ACL in\nSW1(config-if) ip access-group EGRESS_MANAGEMENT_ACL out", "CCI": "SV-111019,V-101915,CCI-001097"}, {"VulnID": "V-221101", "RuleID": "SV-221101r622190_rule", "StigID": "CISC-RT-000470", "Severity": "low", "Cat": "CAT III", "Classification": "", "GroupTitle": "SRG-NET-000362-RTR-000124", "RuleTitle": "The Cisco BGP switch must be configured to check whether a single-hop eBGP peer is directly connected.", "Description": "<VulnDiscussion>As described in RFC 3682, GTSM is designed to protect a switch's IP-based control plane from DoS attacks. Many attacks focused on CPU load and line-card overload can be prevented by implementing GTSM on all Exterior Border Gateway Protocol-speaking switches. \n\nGTSM is based on the fact that the vast majority of control plane peering is established between adjacent switches; that is, the Exterior Border Gateway Protocol peers are either between connecting interfaces or between loopback interfaces. Since TTL spoofing is considered nearly impossible, a mechanism based on an expected TTL value provides a simple and reasonably robust defense from infrastructure attacks based on forged control plane traffic.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "As described in RFC 3682, GTSM is designed to protect a switch's IP-based control plane from DoS attacks. Many attacks focused on CPU load and line-card overload can be prevented by implementing GTSM on all Exterior Border Gateway Protocol-speaking switches. \n\nGTSM is based on the fact that the vast majority of control plane peering is established between adjacent switches; that is, the Exterior Border Gateway Protocol peers are either between connecting interfaces or between loopback interfaces. Since TTL spoofing is considered nearly impossible, a mechanism based on an expected TTL value provides a simple and reasonably robust defense from infrastructure attacks based on forged control plane traffic.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the BGP configuration to verify that checking whether a single-hop eBGP peer is directly connected. The example below disables this mechanism.\n\nrouter bgp xx\n router-id 10.1.1.1\n neighbor x.1.12.2 remote-as xx\n disable-connected-check\n address-family ipv4 unicast\n\nNote: BGP triggers a connection check automatically for all eBGP peers that are known to be a single hop away, unless this check is disabled with the disable-connected-check command. BGP does not bring up sessions if the check fails.\n\nIf the switch is configured to disable checking whether a single-hop eBGP peer is directly connected, this is a finding.", "FixText": "Remove the command that disables checking whether a single-hop eBGP peer is directly connected for all external BGP neighbors as shown in the example below:\n\nSW1(config)# router bgp xx\nSW1(config-router)# neighbor x.1.12.2\nSW1(config-router-neighbor)# no disable-connected-check \nSW1(config-router-neighbor)# end", "CCI": "SV-111021,V-101917,CCI-002385"}, {"VulnID": "V-221102", "RuleID": "SV-221102r622190_rule", "StigID": "CISC-RT-000480", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000230-RTR-000002", "RuleTitle": "The Cisco BGP switch must be configured to use a unique key for each autonomous system (AS) that it peers with.", "Description": "<VulnDiscussion>If the same keys are used between eBGP neighbors, the chance of a hacker compromising any of the BGP sessions increases. It is possible that a malicious user exists in one autonomous system who would know the key used for the eBGP session. This user would then be able to hijack BGP sessions with other trusted neighbors.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "If the same keys are used between eBGP neighbors, the chance of a hacker compromising any of the BGP sessions increases. It is possible that a malicious user exists in one autonomous system who would know the key used for the eBGP session. This user would then be able to hijack BGP sessions with other trusted neighbors.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the BGP configuration to determine if it is peering with multiple autonomous systems. Interview the ISSM and switch administrator to determine if unique keys are being used. \n\nrouter bgp xx\n router-id 10.1.1.1\n neighbor x.1.12.2 remote-as 2\n password 3 7b07d1b3023056a9\n address-family ipv4 unicast\n neighbor x.2.44.4 remote-as xx\n password 3 f07a10cb41db8bb6f8f0a340049a9b02\n address-family ipv4 unicast\n\nIf unique keys are not being used, this is a finding.", "FixText": "Configure the switch to use unique keys for each AS that it peers with as shown in the example below:\n\nSW1(config)# router bgp xx\nSW1(config-router)# neighbor x.1.12.2\nSW1(config-router-neighbor)# password yyyyyyyyy\nSW1(config-router-neighbor)# exit\nSW1(config-router)# neighbor x.2.44.4\nSW1(config-router-neighbor)# password zzzzzzzzzz\nSW1(config-router-neighbor)# end", "CCI": "SV-111023,V-101919,CCI-002205,CCI-000366"}, {"VulnID": "V-221103", "RuleID": "SV-221103r622190_rule", "StigID": "CISC-RT-000490", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000018-RTR-000002", "RuleTitle": "The Cisco BGP switch must be configured to reject inbound route advertisements for any Bogon prefixes.", "Description": "<VulnDiscussion>Accepting route advertisements for Bogon prefixes can result in the local autonomous system (AS) becoming a transit for malicious traffic as it will in turn advertise these prefixes to neighbor autonomous systems.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Accepting route advertisements for Bogon prefixes can result in the local autonomous system (AS) becoming a transit for malicious traffic as it will in turn advertise these prefixes to neighbor autonomous systems.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the switch configuration to verify that it will reject BGP routes for any Bogon prefixes.\n\nStep 1: Verify a prefix list has been configured containing the current Bogon prefixes as shown in the example below:\n\nip prefix-list PREFIX_FILTER seq 5 deny 0.0.0.0/8 le 32 \nip prefix-list PREFIX_FILTER seq 10 deny 10.0.0.0/8 le 32 \nip prefix-list PREFIX_FILTER seq 15 deny 100.64.0.0/10 le 32 \nip prefix-list PREFIX_FILTER seq 20 deny 127.0.0.0/8 le 32 \nip prefix-list PREFIX_FILTER seq 25 deny 169.254.0.0/16 le 32 \nip prefix-list PREFIX_FILTER seq 30 deny 172.16.0.0/12 le 32 \nip prefix-list PREFIX_FILTER seq 35 deny 192.0.2.0/24 le 32 \nip prefix-list PREFIX_FILTER seq 40 deny 192.88.99.0/24 le 32 \nip prefix-list PREFIX_FILTER seq 45 deny 192.168.0.0/16 le 32 \nip prefix-list PREFIX_FILTER seq 50 deny 198.18.0.0/15 le 32 \nip prefix-list PREFIX_FILTER seq 55 deny 198.51.100.0/24 le 32 \nip prefix-list PREFIX_FILTER seq 60 deny 203.0.113.0/24 le 32 \nip prefix-list PREFIX_FILTER seq 65 deny 224.0.0.0/4 le 32 \nip prefix-list PREFIX_FILTER seq 70 deny 240.0.0.0/4 le 32 \nip prefix-list PREFIX_FILTER seq 75 permit 0.0.0.0/0 ge 8\n\nStep 2: Verify that the prefix list has been applied to all external BGP peers as shown in the example below:\n\nrouter bgp xx\n router-id 10.1.1.1\n neighbor x.1.12.2 remote-as xx\n password 3 7b07d1b3023056a9\n address-family ipv4 unicast\n prefix-list PREFIX_FILTER in\n neighbor x.2.44.4 remote-as xx\n password 3 f07a10cb41db8bb6f8f0a340049a9b02\n address-family ipv4 unicast\n prefix-list PREFIX_FILTER in\n\nRoute Map Alternative \n\nVerify that the route map applied to the external neighbors references the configured Bogon prefix list shown above.\n\nroute-map FILTER_PREFIX_MAP permit 10\n match ip address prefix-list PREFIX_FILTER\n\u2026\n\u2026\n\u2026\nrouter bgp xx\n router-id 10.1.1.1\n neighbor x.1.12.2 remote-as xx\n password 3 7b07d1b3023056a9\n address-family ipv4 unicast\n route-map FILTER_PREFIX_MAP in\n neighbor x.2.44.4 remote-as xx\n password 3 f07a10cb41db8bb6f8f0a340049a9b02\n address-family ipv4 unicast\n route-map FILTER_PREFIX_MAP in\n\nIf the switch is not configured to reject inbound route advertisements for any Bogon prefixes, this is a finding.", "FixText": "Configure the switch to reject inbound route advertisements for any Bogon prefixes.\n\nStep 1: Configure a prefix list containing the current Bogon prefixes as shown below:\n\nSW1(config)# ip prefix-list PREFIX_FILTER seq 5 deny 0.0.0.0/8 le 32\nSW1(config)# ip prefix-list PREFIX_FILTER seq 10 deny 10.0.0.0/8 le 32\nSW1(config)# ip prefix-list PREFIX_FILTER seq 15 deny 100.64.0.0/10 le 32\nSW1(config)# ip prefix-list PREFIX_FILTER seq 20 deny 127.0.0.0/8 le 32\nSW1(config)# ip prefix-list PREFIX_FILTER seq 25 deny 169.254.0.0/16 le 32\nSW1(config)# ip prefix-list PREFIX_FILTER seq 30 deny 172.16.0.0/12 le 32\nSW1(config)# ip prefix-list PREFIX_FILTER seq 35 deny 192.0.2.0/24 le 32\nSW1(config)# ip prefix-list PREFIX_FILTER seq 40 deny 192.88.99.0/24 le 32\nSW1(config)# ip prefix-list PREFIX_FILTER seq 45 deny 192.168.0.0/16 le 32\nSW1(config)# ip prefix-list PREFIX_FILTER seq 50 deny 198.18.0.0/15 le 32\nSW1(config)# ip prefix-list PREFIX_FILTER seq 55 deny 198.51.100.0/24 le 32\nSW1(config)# ip prefix-list PREFIX_FILTER seq 60 deny 203.0.113.0/24 le 32\nSW1(config)# ip prefix-list PREFIX_FILTER seq 65 deny 224.0.0.0/4 le 32\nSW1(config)# ip prefix-list PREFIX_FILTER seq 70 deny 240.0.0.0/4 le 32\nSW1(config)# ip prefix-list PREFIX_FILTER seq 75 permit 0.0.0.0/0 ge 8\n\nStep 2: Apply the prefix list filter inbound to each external BGP neighbor as shown in the example below:\n\nSW1(config)# router bgp xx\nSW1(config-router)# neighbor x.1.12.2\nSW1(config-router-neighbor)# address-family ipv4 unicast\nSW1(config-router-neighbor-af)# prefix-list PREFIX_FILTER in\nSW1(config-router-neighbor-af)# exit\nSW1(config-router-neighbor)# exit\nSW1(config-router)# neighbor x.2.44.4\nSW1(config-router-neighbor)# address-family ipv4 unicast\nSW1(config-router-neighbor-af)# prefix-list PREFIX_FILTER in\nSW1(config-router-neighbor-af)# end\n\nRoute Map Alternative \n\nStep 1: Configure the route map referencing the configured prefix list above.\n\nSW1(config)# route-map FILTER_PREFIX_MAP permit 10\nSW1(config-route-map)# match ip address prefix-list PREFIX_FILTER\nSW1(config-route-map)# exit\n\nStep 2: Apply the route-map inbound to each external BGP neighbor as shown in the example below:\n\nSW1(config)# router bgp xx\nSW1(config-router)# neighbor x.1.12.2\nSW1(config-router-neighbor)# address-family ipv4 unicast\nSW1(config-router-neighbor-af)# route-map FILTER_PREFIX_MAP in\nSW1(config-router-neighbor-af)# exit\nSW1(config-router-neighbor)# exit\nSW1(config-router)# neighbor x.2.44.4\nSW1(config-router-neighbor)# address-family ipv4 unicast\nSW1(config-router-neighbor-af)# route-map FILTER_PREFIX_MAP in\nSW1(config-router-neighbor-af)# end", "CCI": "SV-111025,V-101921,CCI-001368"}, {"VulnID": "V-221104", "RuleID": "SV-221104r622190_rule", "StigID": "CISC-RT-000500", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000018-RTR-000003", "RuleTitle": "The Cisco BGP switch must be configured to reject inbound route advertisements for any prefixes belonging to the local autonomous system (AS).", "Description": "<VulnDiscussion>Accepting route advertisements belonging to the local AS can result in traffic looping or being black-holed, or at a minimum, using a non-optimized path.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Accepting route advertisements belonging to the local AS can result in traffic looping or being black-holed, or at a minimum, using a non-optimized path.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the switch configuration to verify that it will reject routes belonging to the local AS.\n\nStep 1: Verify a prefix list has been configured containing prefixes belonging to the local AS. In the example below x.13.1.0/24 is the global address space allocated to the local AS.\n\nip prefix-list PREFIX_FILTER seq 5 deny 0.0.0.0/8 le 32\n\u2026\n\u2026\n\u2026\nip prefix-list PREFIX_FILTER seq 74 deny x.13.1.0/24 le 32\nip prefix-list PREFIX_FILTER seq 75 permit 0.0.0.0/0 ge 8\n\nStep 2: Verify that the prefix list has been applied to all external BGP peers as shown in the example below:\n\nrouter bgp xx\n router-id 10.1.1.1\n neighbor x.1.12.2 remote-as xx\n password 3 7b07d1b3023056a9\n address-family ipv4 unicast\n prefix-list PREFIX_FILTER in\n neighbor x.2.44.4 remote-as xx\n password 3 f07a10cb41db8bb6f8f0a340049a9b02\n address-family ipv4 unicast\n prefix-list PREFIX_FILTER in\n\nIf the switch is not configured to reject inbound route advertisements belonging to the local AS, this is a finding.", "FixText": "Configure the switch to reject inbound route advertisements for any prefixes belonging to the local AS.\n\nStep 1: Add to the prefix filter list those prefixes belonging to the local autonomous system.\n\nSW1(config)# ip prefix-list PREFIX_FILTER seq 74 deny x.13.1.0/24 le 32\n\nStep 2: If not already completed to be compliant with previous requirement, apply the prefix list filter inbound to each external BGP neighbor as shown in the example below:\n\nSW1(config)# router bgp xx\nSW1(config-router)# neighbor x.1.12.2\nSW1(config-router-neighbor)# address-family ipv4 unicast\nSW1(config-router-neighbor-af)# prefix-list PREFIX_FILTER in\nSW1(config-router-neighbor-af)# exit\nSW1(config-router-neighbor)# exit\nSW1(config-router)# neighbor x.2.44.4\nSW1(config-router-neighbor)# address-family ipv4 unicast\nSW1(config-router-neighbor-af)# prefix-list PREFIX_FILTER in\nSW1(config-router-neighbor-af)# end", "CCI": "SV-111027,V-101923,CCI-001368"}, {"VulnID": "V-221105", "RuleID": "SV-221105r622190_rule", "StigID": "CISC-RT-000510", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000018-RTR-000004", "RuleTitle": "The Cisco BGP switch must be configured to reject inbound route advertisements from a customer edge (CE) switch for prefixes that are not allocated to that customer.", "Description": "<VulnDiscussion>As a best practice, a service provider should only accept customer prefixes that have been assigned to that customer and any peering autonomous systems. A multi-homed customer with BGP speaking switches connected to the Internet or other external networks could be breached and used to launch a prefix de-aggregation attack. Without ingress route filtering of customers, the effectiveness of such an attack could impact the entire IP core and its customers.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "As a best practice, a service provider should only accept customer prefixes that have been assigned to that customer and any peering autonomous systems. A multi-homed customer with BGP speaking switches connected to the Internet or other external networks could be breached and used to launch a prefix de-aggregation attack. Without ingress route filtering of customers, the effectiveness of such an attack could impact the entire IP core and its customers.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the switch configuration to verify that there are ACLs defined to only accept routes for prefixes that belong to specific customers. \n\nStep 1: Verify prefix list has been configured for each customer containing prefixes belonging to each customer as shown in the example below:\n\nip prefix-list PREFIX_FILTER_CUST1 seq 5 permit x.13.1.0/24 le 32\nip prefix-list PREFIX_FILTER_CUST1 seq 10 deny 0.0.0.0/0 ge 8\nip prefix-list PREFIX_FILTER_CUST2 seq 5 permit x.13.2.0/24 le 32\nip prefix-list PREFIX_FILTER_CUST2 seq 10 deny 0.0.0.0/0 ge 8\n\nStep 2: Verify that the prefix lists has been applied to all to the applicable CE peers as shown in the example below:\n\nrouter bgp xx\n router-id 10.1.1.1\n neighbor x.55.14.2 remote-as 64514\n password 3 7b07d1b3023056a9\n address-family ipv4 unicast\n prefix-list FILTER_PREFIXES_CUST1 in\n neighbor x.55.14.4 remote-as 64516\n password 3 f07a10cb41db8bb6f8f0a340049a9b02\n address-family ipv4 unicast\n prefix-list FILTER_PREFIXES_CUST1 in\n\nNote: Routes to PE-CE links within a VPN are needed for troubleshooting end-to-end connectivity across the MPLS/IP backbone. Hence, these prefixes are an exception to this requirement.\n\nIf the switch is not configured to reject inbound route advertisements from each CE switch for prefixes that are not allocated to that customer, this is a finding.", "FixText": "Configure the switch to reject inbound route advertisements from each CE switch for prefixes that are not allocated to that customer.\n\nStep 1: Configure a prefix list for each customer containing prefixes belonging to each.\n\nSW1(config)# ip prefix-list PREFIX_FILTER_CUST1 permit x.13.1.0/24 le 32\nSW1(config)# ip prefix-list PREFIX_FILTER_CUST1 deny 0.0.0.0/0 ge 8\nSW1(config)# ip prefix-list PREFIX_FILTER_CUST2 permit x.13.2.0/24 le 32\nSW1(config)# ip prefix-list PREFIX_FILTER_CUST2 deny 0.0.0.0/0 ge 8\n\nStep 2: Apply the prefix list filter inbound to each CE neighbor as shown in the example below:\n\nSW1(config)# router bgp xx\nSW1(config-router)# neighbor x.55.14.2\nSW1(config-router-neighbor)# address-family ipv4 unicast\nSW1(config-router-neighbor-af)# prefix-list PREFIX_FILTER_CUST1 in\nSW1(config-router-neighbor-af)# exit\nSW1(config-router-neighbor)# exit\nSW1(config-router)# neighbor x.55.14.4\nSW1(config-router-neighbor)# address-family ipv4 unicast\nSW1(config-router-neighbor-af)# prefix-list PREFIX_FILTER_CUST2 in\nSW1(config-router-neighbor-af)# end", "CCI": "SV-111029,V-101925,CCI-001368"}, {"VulnID": "V-221106", "RuleID": "SV-221106r622190_rule", "StigID": "CISC-RT-000520", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000018-RTR-000005", "RuleTitle": "The Cisco BGP switch must be configured to reject outbound route advertisements for any prefixes that do not belong to any customers or the local autonomous system (AS).", "Description": "<VulnDiscussion>Advertisement of routes by an autonomous system for networks that do not belong to any of its customers pulls traffic away from the authorized network. This causes a denial of service (DoS) on the network that allocated the block of addresses and may cause a DoS on the network that is inadvertently advertising it as the originator. It is also possible that a misconfigured or compromised switch within the GIG IP core could redistribute Interior Gateway Protocol (IGP) routes into BGP, thereby leaking internal routes.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Advertisement of routes by an autonomous system for networks that do not belong to any of its customers pulls traffic away from the authorized network. This causes a denial of service (DoS) on the network that allocated the block of addresses and may cause a DoS on the network that is inadvertently advertising it as the originator. It is also possible that a misconfigured or compromised switch within the GIG IP core could redistribute Interior Gateway Protocol (IGP) routes into BGP, thereby leaking internal routes.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Step 1: Verify that a prefix list has been configured containing prefixes belonging to customers as well as the local AS as shown in the example below:\n\nip prefix-list CE_PREFIX_ADVERTISEMENTS seq 5 permit x.13.1.0/24 le 32\nip prefix-list CE_PREFIX_ADVERTISEMENTS seq 10 permit x.13.2.0/24 le 32\nip prefix-list CE_PREFIX_ADVERTISEMENTS seq 15 permit x.13.3.0/24 le 32\nip prefix-list CE_PREFIX_ADVERTISEMENTS seq 20 permit x.13.4.0/24 le 32\n\u2026\n\u2026\n\u2026\nip prefix-list CE_PREFIX_ADVERTISEMENTS seq 80 deny 0.0.0.0/0 ge 8\n\nStep 2: Verify that the prefix lists has been applied to all CE peers as shown in the example below:\n\nrouter bgp xx\n router-id 10.1.1.1\n neighbor x.55.14.2 remote-as 64514\n password 3 7b07d1b3023056a9\n address-family ipv4 unicast\n prefix-list CE_PREFIX_ADVERTISEMENTS out\n neighbor x.55.14.4 remote-as 64516\n password 3 f07a10cb41db8bb6f8f0a340049a9b02\n address-family ipv4 unicast\n prefix-list CE_PREFIX_ADVERTISEMENTS out\n\nIf the switch is not configured to reject outbound route advertisements that do not belong to any customers or the local AS, this is a finding.", "FixText": "Step 1: Configure a prefix list for containing all customer and local AS prefixes as shown in the example below:\n\nSW1(config)#ip prefix-list CE_PREFIX_ADVERTISEMENTS permit x.13.1.0/24 le 32\nSW1(config)#ip prefix-list CE_PREFIX_ADVERTISEMENTS permit x.13.2.0/24 le 32\nSW1(config)#ip prefix-list CE_PREFIX_ADVERTISEMENTS permit x.13.3.0/24 le 32\nSW1(config)#ip prefix-list CE_PREFIX_ADVERTISEMENTS permit x.13.4.0/24 le 32\n\u2026\n\u2026\n\u2026\nSW1(config)#ip prefix-list CE_PREFIX_ADVERTISEMENTS deny 0.0.0.0/0 ge 8\n\nStep 2: Apply the prefix list filter outbound to each CE neighbor as shown in the example below:\n\nSW1(config)#switch bgp 64512\nSW1(config-switch)# neighbor x.12.4.14 prefix-list CE_PREFIX_ADVERTISEMENTS out\nSW1(config-switch)# neighbor x.12.4.16 prefix-list CE_PREFIX_ADVERTISEMENTS out", "CCI": "SV-111031,V-101927,CCI-001368"}, {"VulnID": "V-221107", "RuleID": "SV-221107r622190_rule", "StigID": "CISC-RT-000530", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000205-RTR-000006", "RuleTitle": "The Cisco BGP switch must be configured to reject outbound route advertisements for any prefixes belonging to the IP core.", "Description": "<VulnDiscussion>Outbound route advertisements belonging to the core can result in traffic either looping or being black holed, or at a minimum, using a non-optimized path.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Outbound route advertisements belonging to the core can result in traffic either looping or being black holed, or at a minimum, using a non-optimized path.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Step 1: Verify that a prefix list has been configured containing prefixes belonging to the IP core.\n\nip prefix-list FILTER_CORE_PREFIXES seq 5 deny x.1.1.0/24 le 32\nip prefix-list FILTER _CORE_PREFIXES seq 10 deny x.1.2.0/24 le 32\nip prefix-list FILTER _CORE_PREFIXES seq 15 permit 0.0.0.0/0 ge 8\n\nStep 2: Verify that the prefix lists has been applied to all external BGP peers as shown in the example below:\n\nrouter bgp xx\n router-id 10.1.1.1\n neighbor x.1.12.2 remote-as xx\n password 3 7b07d1b3023056a9\n address-family ipv4 unicast\n FILTER _CORE_PREFIXES out\n neighbor x.2.44.4 remote-as xx\n password 3 f07a10cb41db8bb6f8f0a340049a9b02\n address-family ipv4 unicast\n prefix-list FILTER _CORE_PREFIXES out\n\nIf the switch is not configured to reject outbound route advertisements for prefixes belonging to the IP core, this is a finding.", "FixText": "Step 1: Configure a prefix list for containing all customer and local AS prefixes as shown in the example below:\n\nSW1(config)# ip prefix-list FILTER_CORE_PREFIXES deny x.1.1.0/24 le 32\nSW1(config)# ip prefix-list FILTER _CORE_PREFIXES deny x.1.2.0/24 le 32\nSW1(config)# ip prefix-list FILTER _CORE_PREFIXES permit 0.0.0.0/0 ge 8\n\nStep 2: Apply the prefix list filter outbound to each CE neighbor as shown in the example below:\n\nSW1(config)# router bgp xx\nSW1(config-router)# neighbor x.1.12.2\nSW1(config-router-neighbor)# address-family ipv4 unicast\nSW1(config-router-neighbor-af)# prefix-list FILTER _CORE_PREFIXES out\nSW1(config-router-neighbor-af)# exit\nSW1(config-router-neighbor)# exit\nSW1(config-router)# neighbor x.2.44.4\nSW1(config-router-neighbor)# address-family ipv4 unicast\nSW1(config-router-neighbor-af)# prefix-list FILTER _CORE_PREFIXES out \nSW1(config-router-neighbor-af)# end", "CCI": "SV-111033,V-101929,CCI-001097"}, {"VulnID": "V-221108", "RuleID": "SV-221108r622190_rule", "StigID": "CISC-RT-000540", "Severity": "low", "Cat": "CAT III", "Classification": "", "GroupTitle": "SRG-NET-000018-RTR-000006", "RuleTitle": "The Cisco BGP switch must be configured to reject route advertisements from BGP peers that do not list their autonomous system (AS) number as the first AS in the AS_PATH attribute.", "Description": "<VulnDiscussion>Verifying the path a route has traversed will ensure the IP core is not used as a transit network for unauthorized or possibly even internet traffic. All autonomous system boundary switches (ASBRs) must ensure updates received from eBGP peers list their AS number as the first AS in the AS_PATH attribute.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Verifying the path a route has traversed will ensure the IP core is not used as a transit network for unauthorized or possibly even internet traffic. All autonomous system boundary switches (ASBRs) must ensure updates received from eBGP peers list their AS number as the first AS in the AS_PATH attribute.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the switch configuration to verify the switch is configured to deny updates received from eBGP peers that do not list their AS number as the first AS in the AS_PATH attribute.\n\nBy default Cisco IOS enforces the first AS in the AS_PATH attribute for all route advertisements. Review the switch configuration to verify that the command no enforce-first-as is not configured.\n\nrouter bgp xx\n router-id 10.1.1.1\n no enforce-first-as\n\nIf the switch is not configured to reject updates from peers that do not list their AS number as the first AS in the AS_PATH attribute, this is a finding.", "FixText": "Configure the switch to deny updates received from eBGP peers that do not list their AS number as the first AS in the AS_PATH attribute.\n\nSW1(config)# router bgp xx\nSW1(config-router)# enforce-first-as\nSW1(config-router)# end", "CCI": "SV-111035,V-101931,CCI-000032"}, {"VulnID": "V-221109", "RuleID": "SV-221109r622190_rule", "StigID": "CISC-RT-000550", "Severity": "low", "Cat": "CAT III", "Classification": "", "GroupTitle": "SRG-NET-000018-RTR-000010", "RuleTitle": "The Cisco BGP switch must be configured to reject route advertisements from CE switches with an originating AS in the AS_PATH attribute that does not belong to that customer.", "Description": "<VulnDiscussion>Verifying the path a route has traversed will ensure that the local AS is not used as a transit network for unauthorized traffic. To ensure that the local AS does not carry any prefixes that do not belong to any customers, all PE switches must be configured to reject routes with an originating AS other than that belonging to the customer.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Verifying the path a route has traversed will ensure that the local AS is not used as a transit network for unauthorized traffic. To ensure that the local AS does not carry any prefixes that do not belong to any customers, all PE switches must be configured to reject routes with an originating AS other than that belonging to the customer.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the switch configuration to verify the switch is configured to deny updates received from eBGP peers that do not list their AS number as the first AS in the AS_PATH attribute.\n\nStep 1: Review switch configuration and verify that there is an as-path access-list statement defined to only accept routes from a CE switch whose AS did not originate the route. The configuration should look similar to the following:\n\nip as-path access-list AS_PATH permit ^yy$\nip as-path access-list 10 AS_PATH .*\n\nNote: the characters \u201c^\u201d and \u201c$\u201d representing the beginning and the end of the expression respectively are optional and are implicitly defined if omitted.\n\nStep 2: Verify that the as-path access-list is referenced by the filter-list inbound for the appropriate BGP neighbors as shown in the example below:\n\nrouter bgp xx\n router-id 10.1.1.1\n neighbor x.1.12.2 remote-as xx\n password 3 7b07d1b3023056a9\n address-family ipv4 unicast\n filter-list AS_PATH in\n\nIf the switch is not configured to reject updates from peers that do not list their AS number as the first AS in the AS_PATH attribute, this is a finding.", "FixText": "Configure the switch to deny updates received from eBGP peers that do not list their AS number as the first AS in the AS_PATH attribute.\n\nStep 1: Configure the as-path ACL as shown in the example below:\n\nSW1(config)# ip as-path access-list AS_PATH permit ^22$\nSW1(config)# ip as-path access-list AS_PATH deny .*\n\nStep 2: Apply the as-path filter inbound as shown in the example below:\n\nSW1(config)# router bgp xx\nSW1(config-router)# neighbor x.1.12.2\nSW1(config-router-neighbor)# address-family ipv4 unicast \nSW1(config-router-neighbor-af)# filter-list AS_PATH in\nSW1(config-router-neighbor-af)# end", "CCI": "SV-111037,V-101933,CCI-000032"}, {"VulnID": "V-221110", "RuleID": "SV-221110r622190_rule", "StigID": "CISC-RT-000560", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000362-RTR-000117", "RuleTitle": "The Cisco BGP switch must be configured to use the maximum prefixes feature to protect against route table flooding and prefix de-aggregation attacks.", "Description": "<VulnDiscussion>The effects of prefix de-aggregation can degrade switch performance due to the size of routing tables and also result in black-holing legitimate traffic. Initiated by an attacker or a misconfigured switch, prefix de-aggregation occurs when the announcement of a large prefix is fragmented into a collection of smaller prefix announcements.\n\nIn 1997, misconfigured switches in the Florida Internet Exchange network (AS7007) de-aggregated every prefix in their routing table and started advertising the first /24 block of each of these prefixes as their own. Faced with this additional burden, the internal switches became overloaded and crashed repeatedly. This caused prefixes advertised by these switches to disappear from routing tables and reappear when the switches came back online. As the switches came back after crashing, they were flooded with the routing table information by their neighbors. The flood of information would again overwhelm the switches and cause them to crash. This process of route flapping served to destabilize not only the surrounding network but also the entire Internet. Switches trying to reach those addresses would choose the smaller, more specific /24 blocks first. This caused backbone networks throughout North America and Europe to crash.\n\nMaximum prefix limits on peer connections combined with aggressive prefix-size filtering of customers' reachability advertisements will effectively mitigate the de-aggregation risk. BGP maximum prefix must be used on all eBGP switches to limit the number of prefixes that it should receive from a particular neighbor, whether customer or peering AS. Consider each neighbor and how many routes they should be advertising and set a threshold slightly higher than the number expected.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "The effects of prefix de-aggregation can degrade switch performance due to the size of routing tables and also result in black-holing legitimate traffic. Initiated by an attacker or a misconfigured switch, prefix de-aggregation occurs when the announcement of a large prefix is fragmented into a collection of smaller prefix announcements.\n\nIn 1997, misconfigured switches in the Florida Internet Exchange network (AS7007) de-aggregated every prefix in their routing table and started advertising the first /24 block of each of these prefixes as their own. Faced with this additional burden, the internal switches became overloaded and crashed repeatedly. This caused prefixes advertised by these switches to disappear from routing tables and reappear when the switches came back online. As the switches came back after crashing, they were flooded with the routing table information by their neighbors. The flood of information would again overwhelm the switches and cause them to crash. This process of route flapping served to destabilize not only the surrounding network but also the entire Internet. Switches trying to reach those addresses would choose the smaller, more specific /24 blocks first. This caused backbone networks throughout North America and Europe to crash.\n\nMaximum prefix limits on peer connections combined with aggressive prefix-size filtering of customers' reachability advertisements will effectively mitigate the de-aggregation risk. BGP maximum prefix must be used on all eBGP switches to limit the number of prefixes that it should receive from a particular neighbor, whether customer or peering AS. Consider each neighbor and how many routes they should be advertising and set a threshold slightly higher than the number expected.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the switch configuration to verify that the number of received prefixes from each eBGP neighbor is controlled.\n\nrouter bgp xx\n router-id 10.1.1.1\n neighbor x.1.12.2 remote-as xx\n password 3 7b07d1b3023056a9\n address-family ipv4 unicast\n maximum-prefix nnnnnnn\n neighbor x.2.44.4 remote-as xx\n password 3 f07a10cb41db8bb6f8f0a340049a9b02\n address-family ipv4 unicast\n maximum-prefix nnnnnnn\n\nIf the switch is not configured to control the number of prefixes received from each peer to protect against route table flooding and prefix de-aggregation attacks, this is a finding.", "FixText": "Configure the switch to use the maximum prefixes feature to protect against route table flooding and prefix de-aggregation attacks as shown in the example below:\n\nSW1(config)# router bgp xx\nSW1(config-router)# neighbor x.1.12.2\nSW1(config-router-neighbor)# address-family ipv4 unicast\nSW1(config-router-neighbor-af)# maximum-prefix nnnnnnn\nSW1(config-router-neighbor-af)# exit\nSW1(config-router-neighbor)# exit\nSW1(config-router)# neighbor x.2.44.4\nSW1(config-router-neighbor)# address-family ipv4 unicast\nSW1(config-router-neighbor-af)# maximum-prefix nnnnnnn \nSW1(config-router-neighbor-af)# end", "CCI": "SV-111039,V-101935,CCI-002385"}, {"VulnID": "V-221111", "RuleID": "SV-221111r622190_rule", "StigID": "CISC-RT-000570", "Severity": "low", "Cat": "CAT III", "Classification": "", "GroupTitle": "SRG-NET-000362-RTR-000118", "RuleTitle": "The Cisco BGP switch must be configured to limit the prefix size on any inbound route advertisement to /24, or the least significant prefixes issued to the customer.", "Description": "<VulnDiscussion>The effects of prefix de-aggregation can degrade switch performance due to the size of routing tables and also result in black-holing legitimate traffic. Initiated by an attacker or a misconfigured switch, prefix de-aggregation occurs when the announcement of a large prefix is fragmented into a collection of smaller prefix announcements.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "The effects of prefix de-aggregation can degrade switch performance due to the size of routing tables and also result in black-holing legitimate traffic. Initiated by an attacker or a misconfigured switch, prefix de-aggregation occurs when the announcement of a large prefix is fragmented into a collection of smaller prefix announcements.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the switch configuration to determine if it is compliant with this requirement.\n\nStep 1: Verify that a route filter has been configured to reject prefixes longer than /24 or the least significant prefixes issued to the customers as shown in the example below:\n\nip prefix-list FILTER_PREFIX_LENGTH seq 5 permit 0.0.0.0/0 ge 8 le 24\nip prefix-list FILTER_PREFIX_LENGTH seq 10 deny 0.0.0.0/0 le 32\n\nStep 2: Verify that prefix filtering has been applied to each eBGP peer as shown in the example below:\n\nrouter bgp xx\n router-id 10.1.1.1\n neighbor x.1.12.2 remote-as xx\n password 3 7b07d1b3023056a9\n address-family ipv4 unicast\n prefix-list FILTER_PREFIX_LENGTH in\n neighbor x.2.44.4 remote-as xx\n password 3 f07a10cb41db8bb6f8f0a340049a9b02\n address-family ipv4 unicast\n prefix-list FILTER_PREFIX_LENGTH in\n\nIf the switch is not configured to limit the prefix size on any inbound route advertisement to /24 or the least significant prefixes issued to the customer, this is a finding.", "FixText": "Configure the switch to limit the prefix size on any route advertisement to /24 or the least significant prefixes issued to the customer.\n\nStep 1: Configure a prefix list to reject any prefix that is longer than /24.\n\nSW1(config)# ip prefix-list FILTER_PREFIX_LENGTH permit 0.0.0.0/0 ge 8 le 24\nSW1(config)# ip prefix-list FILTER_PREFIX_LENGTH deny 0.0.0.0/0 le 32\n\nStep 2: Apply the prefix list to all eBGP peers as shown in the example below:\n\nSW1(config)# router bgp xx\nSW1(config-router)# neighbor x.1.12.2\nSW1(config-router-neighbor)# address-family ipv4 unicast\nSW1(config-router-neighbor-af)# prefix-list FILTER_PREFIX_LENGTH in\nSW1(config-router-neighbor-af)# exit\nSW1(config-router-neighbor)# exit\nSW1(config-router)# neighbor x.2.44.4\nSW1(config-router-neighbor)# address-family ipv4 unicast\nSW1(config-router-neighbor-af)# prefix-list FILTER_PREFIX_LENGTH in\nSW1(config-router-neighbor-af)# end", "CCI": "SV-111041,V-101937,CCI-002385"}, {"VulnID": "V-221112", "RuleID": "SV-221112r622190_rule", "StigID": "CISC-RT-000580", "Severity": "low", "Cat": "CAT III", "Classification": "", "GroupTitle": "SRG-NET-000512-RTR-000001", "RuleTitle": "The Cisco BGP switch must be configured to use its loopback address as the source address for iBGP peering sessions.", "Description": "<VulnDiscussion>Using a loopback address as the source address offers a multitude of uses for security, access, management, and scalability of the BGP switches. It is easier to construct appropriate ingress filters for switch management plane traffic destined to the network management subnet since the source addresses will be from the range used for loopback interfaces instead of a larger range of addresses used for physical interfaces. Log information recorded by authentication and syslog servers will record the switch\u2019s loopback address instead of the numerous physical interface addresses.\n\nWhen the loopback address is used as the source for eBGP peering, the BGP session will be harder to hijack since the source address to be used is not known globally, making it more difficult for a hacker to spoof an eBGP neighbor. By using traceroute, a hacker can easily determine the addresses for an eBGP speaker when the IP address of an external interface is used as the source address. The switches within the iBGP domain should also use loopback addresses as the source address when establishing BGP sessions.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Using a loopback address as the source address offers a multitude of uses for security, access, management, and scalability of the BGP switches. It is easier to construct appropriate ingress filters for switch management plane traffic destined to the network management subnet since the source addresses will be from the range used for loopback interfaces instead of a larger range of addresses used for physical interfaces. Log information recorded by authentication and syslog servers will record the switch\u2019s loopback address instead of the numerous physical interface addresses.\n\nWhen the loopback address is used as the source for eBGP peering, the BGP session will be harder to hijack since the source address to be used is not known globally, making it more difficult for a hacker to spoof an eBGP neighbor. By using traceroute, a hacker can easily determine the addresses for an eBGP speaker when the IP address of an external interface is used as the source address. The switches within the iBGP domain should also use loopback addresses as the source address when establishing BGP sessions.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Step 1: Review the switch configuration to verify that a loopback address has been configured.\n\ninterface loopback0\n ip address 10.1.1.1/32\n\nStep 2: Verify that the loopback interface is used as the source address for all iBGP sessions.\n\nrouter bgp xx\n router-id 10.1.1.1\n address-family ipv4 unicast\n neighbor 10.1.12.2 remote-as xx\n password 3 7b07d1b3023056a9\n update-source loopback0 \n\nIf the switch does not use its loopback address as the source address for all iBGP sessions, this is a finding.", "FixText": "Configure the switch to use its loopback address as the source address for all iBGP peering.\n\nSW1(config)# router bgp xx\nSW1(config-router)# neighbor 10.1.12.2 \nSW1(config-router-neighbor)# update-source lo0\nSW1(config-router-neighbor)# end", "CCI": "SV-111043,V-101939,CCI-000366"}, {"VulnID": "V-221113", "RuleID": "SV-221113r622190_rule", "StigID": "CISC-RT-000590", "Severity": "low", "Cat": "CAT III", "Classification": "", "GroupTitle": "SRG-NET-000512-RTR-000002", "RuleTitle": "The Cisco MPLS switch must be configured to use its loopback address as the source address for LDP peering sessions.", "Description": "<VulnDiscussion>Using a loopback address as the source address offers a multitude of uses for security, access, management, and scalability of backbone switches. It is easier to construct appropriate ingress filters for switch management plane traffic destined to the network management subnet since the source addresses will be from the range used for loopback interfaces instead of from a larger range of addresses used for physical interfaces. Log information recorded by authentication and syslog servers will record the switch's loopback address instead of the numerous physical interface addresses.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Using a loopback address as the source address offers a multitude of uses for security, access, management, and scalability of backbone switches. It is easier to construct appropriate ingress filters for switch management plane traffic destined to the network management subnet since the source addresses will be from the range used for loopback interfaces instead of from a larger range of addresses used for physical interfaces. Log information recorded by authentication and syslog servers will record the switch's loopback address instead of the numerous physical interface addresses.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the switch configuration to determine if it is compliant with this requirement.\n\nVerify that a loopback address has been configured as shown in the following example:\n\ninterface loopback0\n ip address 10.1.1.1/32\n\nBy default, switches will use its loopback address for LDP peering. If an address has not be configured on the loopback interface, it will use its physical interface connecting to the LDP peer. If the router-id command is specified that overrides this default behavior, verify that it is a loopback interface as shown in the example below:\n\nmpls ldp configuration\n router-id lo0\n\nIf the switch is not configured do use its loopback address for LDP peering, this is a finding.", "FixText": "Configure the switch to use their loopback address as the source address for LDP peering sessions. As noted in the check content, the default behavior is to use its loopback address. \n\nSW1(config)# mpls ldp configuration\nSW1(config-ldp)# router-id lo0", "CCI": "SV-111045,V-101941,CCI-000366"}, {"VulnID": "V-221114", "RuleID": "SV-221114r622190_rule", "StigID": "CISC-RT-000600", "Severity": "low", "Cat": "CAT III", "Classification": "", "GroupTitle": "SRG-NET-000512-RTR-000003", "RuleTitle": "The Cisco MPLS switch must be configured to synchronize Interior Gateway Protocol (IGP) and LDP to minimize packet loss when an IGP adjacency is established prior to LDP peers completing label exchange.", "Description": "<VulnDiscussion>Packet loss can occur when an IGP adjacency is established and the switch begins forwarding packets using the new adjacency before the LDP label exchange completes between the peers on that link. Packet loss can also occur if an LDP session closes and the switch continues to forward traffic using the link associated with the LDP peer rather than an alternate pathway with a fully synchronized LDP session. The MPLS LDP-IGP Synchronization feature provides a means to synchronize LDP with OSPF or IS-IS to minimize MPLS packet loss. When an IGP adjacency is established on a link but LDP-IGP synchronization is not yet achieved or is lost, the IGP will advertise the max-metric on that link.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Packet loss can occur when an IGP adjacency is established and the switch begins forwarding packets using the new adjacency before the LDP label exchange completes between the peers on that link. Packet loss can also occur if an LDP session closes and the switch continues to forward traffic using the link associated with the LDP peer rather than an alternate pathway with a fully synchronized LDP session. The MPLS LDP-IGP Synchronization feature provides a means to synchronize LDP with OSPF or IS-IS to minimize MPLS packet loss. When an IGP adjacency is established on a link but LDP-IGP synchronization is not yet achieved or is lost, the IGP will advertise the max-metric on that link.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the switch OSPF or IS-IS configuration and verify that LDP will synchronize with the link-state routing protocol as shown in the example below:\n\nOSPF Example\n\nrouter ospf 1\n mpls ldp sync\n\nIS-IS Example\n\nrouter isis\n mpls ldp sync\n\nIf the switch is not configured to synchronize IGP and LDP, this is a finding.", "FixText": "Configure the MPLS switch to synchronize IGP and LDP, minimizing packet loss when an IGP adjacency is established prior to LDP peers completing label exchange.\n\nOSPF Example\n\nSW1(config)# router ospf 1\nSW1(config-switch)# mpls ldp sync\n\nIS-IS Example\n\nSW1(config)# router isis\nSW1(config-switch)# mpls ldp sync", "CCI": "SV-111047,V-101943,CCI-000366"}, {"VulnID": "V-221115", "RuleID": "SV-221115r622190_rule", "StigID": "CISC-RT-000610", "Severity": "low", "Cat": "CAT III", "Classification": "", "GroupTitle": "SRG-NET-000193-RTR-000001", "RuleTitle": "The MPLS switch with RSVP-TE enabled must be configured with message pacing to adjust maximum burst and maximum number of RSVP messages to an output queue based on the link speed and input queue size of adjacent core switches.", "Description": "<VulnDiscussion>RSVP-TE can be used to perform constraint-based routing when building LSP tunnels within the network core that will support QoS and traffic engineering requirements. RSVP-TE is also used to enable MPLS Fast Reroute, a network restoration mechanism that will reroute traffic onto a backup LSP in case of a node or link failure along the primary path. When there is a disruption in the MPLS core, such as a link flap or switch reboot, the result is a significant amount of RSVP signaling, such as \"PathErr\" and \"ResvErr\" messages that need to be sent for every LSP using that link.\n\nWhen RSVP messages are sent out, they are sent either hop by hop or with the switch alert bit set in the IP header. This means that every switch along the path must examine the packet to determine if additional processing is required for these RSVP messages. If there is enough signaling traffic in the network, it is possible for an interface to receive more packets for its input queue than it can hold, resulting in dropped RSVP messages and hence slower RSVP convergence. Increasing the size of the interface input queue can help prevent dropping packets; however, there is still the risk of having a burst of signaling traffic that can fill the queue. Solutions to mitigate this risk are RSVP message pacing or refresh reduction to control the rate at which RSVP messages are sent. RSVP refresh reduction includes the following features: RSVP message bundling, RSVP Message ID to reduce message processing overhead, reliable delivery of RSVP messages using Message ID, and summary refresh to reduce the amount of information transmitted every refresh interval.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "RSVP-TE can be used to perform constraint-based routing when building LSP tunnels within the network core that will support QoS and traffic engineering requirements. RSVP-TE is also used to enable MPLS Fast Reroute, a network restoration mechanism that will reroute traffic onto a backup LSP in case of a node or link failure along the primary path. When there is a disruption in the MPLS core, such as a link flap or switch reboot, the result is a significant amount of RSVP signaling, such as \"PathErr\" and \"ResvErr\" messages that need to be sent for every LSP using that link.\n\nWhen RSVP messages are sent out, they are sent either hop by hop or with the switch alert bit set in the IP header. This means that every switch along the path must examine the packet to determine if additional processing is required for these RSVP messages. If there is enough signaling traffic in the network, it is possible for an interface to receive more packets for its input queue than it can hold, resulting in dropped RSVP messages and hence slower RSVP convergence. Increasing the size of the interface input queue can help prevent dropping packets; however, there is still the risk of having a burst of signaling traffic that can fill the queue. Solutions to mitigate this risk are RSVP message pacing or refresh reduction to control the rate at which RSVP messages are sent. RSVP refresh reduction includes the following features: RSVP message bundling, RSVP Message ID to reduce message processing overhead, reliable delivery of RSVP messages using Message ID, and summary refresh to reduce the amount of information transmitted every refresh interval.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the switch configuration to determine if refresh reduction is enabled.\n\nStep 1: Determine if MPLS TE is enabled on any interface as shown in the example below: \n\ninterface Ethernet4/47\n mpls traffic-eng tunnels\n mpls ip\n\nStep 2: If MPLS TE is enabled, verify that message pacing is enabled.\n\nip rsvp \n signaling refresh reduction bundle-max-size\n\nIf the switch with RSVP-TE configured does not have refresh reduction features enabled, this is a finding.", "FixText": "Configure the switch to rate limit RSVP messages per interface as shown in the example below. Configure the MPLS switch to synchronize IGP and LDP, minimizing packet loss when an IGP adjacency is established prior to LDP peers completing label exchange.\n\nOSPF Example\n\nSW1(config)# router ospf 1\nSW1(config-switch)# mpls ldp sync\n\nIS-IS Example\n\nSW1(config)# router isis\nSW1(config-switch)# mpls ldp sync.\n\nSW1(config)# ip rsvp\nSW1(config-ip-rsvp)# signaling refresh reduction \nSW1(config-ip-rsvp)# end", "CCI": "SV-111049,V-101945,CCI-001095"}, {"VulnID": "V-221116", "RuleID": "SV-221116r622190_rule", "StigID": "CISC-RT-000620", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000512-RTR-000004", "RuleTitle": "The Cisco MPLS switch must be configured to have TTL Propagation disabled.", "Description": "<VulnDiscussion>The head end of the label-switched path (LSP), the label edge switch (LER) will decrement the IP packet's time-to-live (TTL) value by one and then copy the value to the MPLS TTL field. At each label-switched switch (LSR) hop, the MPLS TTL value is decremented by one. The MPLS switch that pops the label (either the penultimate LSR or the egress LER) will copy the packet's MPLS TTL value to the IP TTL field and decrement it by one.\n\nThis TTL propagation is the default behavior. Because the MPLS TTL is propagated from the IP TTL, a traceroute will list every hop in the path, be it routed or label switched, thereby exposing core nodes. With TTL propagation disabled, LER decrements the IP packet's TTL value by one and then places a value of 255 in the packet's MPLS TTL field, which is then decremented by one as the packet passes through each LSR in the MPLS core. Because the MPLS TTL never drops to zero, none of the LSP hops triggers an ICMP TTL exceeded message, and consequently, these hops are not recorded in a traceroute. Hence, nodes within the MPLS core cannot be discovered by an attacker.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "The head end of the label-switched path (LSP), the label edge switch (LER) will decrement the IP packet's time-to-live (TTL) value by one and then copy the value to the MPLS TTL field. At each label-switched switch (LSR) hop, the MPLS TTL value is decremented by one. The MPLS switch that pops the label (either the penultimate LSR or the egress LER) will copy the packet's MPLS TTL value to the IP TTL field and decrement it by one.\n\nThis TTL propagation is the default behavior. Because the MPLS TTL is propagated from the IP TTL, a traceroute will list every hop in the path, be it routed or label switched, thereby exposing core nodes. With TTL propagation disabled, LER decrements the IP packet's TTL value by one and then places a value of 255 in the packet's MPLS TTL field, which is then decremented by one as the packet passes through each LSR in the MPLS core. Because the MPLS TTL never drops to zero, none of the LSP hops triggers an ICMP TTL exceeded message, and consequently, these hops are not recorded in a traceroute. Hence, nodes within the MPLS core cannot be discovered by an attacker.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the switch configuration to verify that TTL propagation is disabled as shown in the example below:\n\nno mpls ip propagate-ttl\n\nIf the MPLS switch is not configured to disable TTL propagation, this is a finding.", "FixText": "Configure the MPLS switch to disable TTL propagation as shown in the example below:\n\nSW1(config)# no mpls ip propagate-ttl", "CCI": "SV-111051,V-101947,CCI-000366"}, {"VulnID": "V-221117", "RuleID": "SV-221117r622190_rule", "StigID": "CISC-RT-000630", "Severity": "high", "Cat": "CAT I", "Classification": "", "GroupTitle": "SRG-NET-000512-RTR-000005", "RuleTitle": "The Cisco PE switch must be configured to have each Virtual Routing and Forwarding (VRF) instance bound to the appropriate physical or logical interfaces to maintain traffic separation between all MPLS L3VPNs.", "Description": "<VulnDiscussion>The primary security model for an MPLS L3VPN infrastructure is traffic separation. The service provider must guarantee the customer that traffic from one VPN does not leak into another VPN or into the core, and that core traffic must not leak into any VPN. Hence, it is imperative that each CE-facing interface can only be associated to one VRF\u2014that alone is the fundamental framework for traffic separation.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "The primary security model for an MPLS L3VPN infrastructure is traffic separation. The service provider must guarantee the customer that traffic from one VPN does not leak into another VPN or into the core, and that core traffic must not leak into any VPN. Hence, it is imperative that each CE-facing interface can only be associated to one VRF\u2014that alone is the fundamental framework for traffic separation.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Step 1: Review the design plan for deploying MPLS/L3VPN. \n\nStep 2: Review all CE-facing interfaces and verify that the proper VRF is defined via the ip vrf forwarding command. In the example below, customer 1 is bound to interface Ethernet2/1, while customer 2 is bound to Ethernet2/2.\n\ninterface Ethernet2/1\n no switchport\n vrf member CUST1\n ip address x.2.22.3/24\n\ninterface Ethernet2/2\n no switchport\n vrf member CUST2\n ip address x.2.8.4/24\n\nIf any VRFs are not bound to the appropriate physical or logical interface, this is a finding.", "FixText": "Configure the PE switch to have each VRF bound to the appropriate physical or logical interfaces to maintain traffic separation between all MPLS L3VPNs.", "CCI": "SV-111053,V-101949,CCI-000366"}, {"VulnID": "V-221118", "RuleID": "SV-221118r622190_rule", "StigID": "CISC-RT-000640", "Severity": "high", "Cat": "CAT I", "Classification": "", "GroupTitle": "SRG-NET-000512-RTR-000006", "RuleTitle": "The Cisco PE switch must be configured to have each Virtual Routing and Forwarding (VRF) instance with the appropriate Route Target (RT).", "Description": "<VulnDiscussion>The primary security model for an MPLS L3VPN as well as a VRF-lite infrastructure is traffic separation. Each interface can only be associated to one VRF, which is the fundamental framework for traffic separation. Forwarding decisions are made based on the routing table belonging to the VRF. Control of what routes are imported into or exported from a VRF is based on the RT. It is critical that traffic does not leak from one COI tenant or L3VPN to another; hence, it is imperative that the correct RT is configured for each VRF.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "The primary security model for an MPLS L3VPN as well as a VRF-lite infrastructure is traffic separation. Each interface can only be associated to one VRF, which is the fundamental framework for traffic separation. Forwarding decisions are made based on the routing table belonging to the VRF. Control of what routes are imported into or exported from a VRF is based on the RT. It is critical that traffic does not leak from one COI tenant or L3VPN to another; hence, it is imperative that the correct RT is configured for each VRF.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the design plan for MPLS/L3VPN to determine what RTs have been assigned for each VRF. Review the switch configuration and verify that the correct RT is configured for each VRF. In the example below, route target 13:13 has been configured for customer 1.\n\nvrf context CUST1\n address-family ipv4 unicast\n route-target export 13:13\n route-target import 13:13\n\nIf there are VRFs configured with the wrong RT, this is a finding.", "FixText": "Configure the switch to have each VRF instance defined with the correct RT.\n\nSW1(config)# vrf context CUST1\nSW1(config-vrf)# address-family ipv4 unicast \nSW1(config-vrf-af-ipv4)# route-target import 13:13\nSW1(config-vrf-af-ipv4)# route-target export 13:13\nSW1(config-vrf-af-ipv4)# end", "CCI": "SV-111055,V-101951,CCI-000366"}, {"VulnID": "V-221119", "RuleID": "SV-221119r622190_rule", "StigID": "CISC-RT-000650", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000512-RTR-000007", "RuleTitle": "The Cisco PE switch must be configured to have each VRF with the appropriate Route Distinguisher (RD).", "Description": "<VulnDiscussion>An RD provides uniqueness to the customer address spaces within the MPLS L3VPN infrastructure. The concept of the VPN-IPv4 and VPN-IPv6 address families consists of the RD prepended before the IP address. Hence, if the same IP prefix is used in several different L3VPNs, it is possible for BGP to carry several completely different routes for that prefix, one for each VPN.\n\nSince VPN-IPv4 addresses and IPv4 addresses are different address families, BGP never treats them as comparable addresses. The purpose of the RD is to create distinct routes for common IPv4 address prefixes. On any given PE switch, a single RD can define a VRF in which the entire address space may be used independently, regardless of the makeup of other VPN address spaces. Hence, it is imperative that a unique RD is assigned to each L3VPN and that the proper RD is configured for each VRF.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "An RD provides uniqueness to the customer address spaces within the MPLS L3VPN infrastructure. The concept of the VPN-IPv4 and VPN-IPv6 address families consists of the RD prepended before the IP address. Hence, if the same IP prefix is used in several different L3VPNs, it is possible for BGP to carry several completely different routes for that prefix, one for each VPN.\n\nSince VPN-IPv4 addresses and IPv4 addresses are different address families, BGP never treats them as comparable addresses. The purpose of the RD is to create distinct routes for common IPv4 address prefixes. On any given PE switch, a single RD can define a VRF in which the entire address space may be used independently, regardless of the makeup of other VPN address spaces. Hence, it is imperative that a unique RD is assigned to each L3VPN and that the proper RD is configured for each VRF.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the design plan for MPLS/L3VPN to determine what RD has been assigned for each VRF. Review the switch configuration and verify that the correct RD is configured for each VRF. In the example below, route distinguisher 13:13 has been configured for customer 1.\n\nvrf context CUST1\n rd 13:13\n address-family ipv4 unicast\n route-target export 13:13\n route-target import 13:13\n\nNote: This requirement is only applicable for MPLS L3VPN implementations.\n\nIf the wrong RD has been configured for any VRF, this is a finding.", "FixText": "Configure the correct RD for each VRF.\n\nSW1(config)# vrf context CUST1\nSW1(config-vrf)# rd 13:13\nSW1(config-vrf)# end", "CCI": "SV-111057,V-101953,CCI-000366"}, {"VulnID": "V-221120", "RuleID": "SV-221120r622190_rule", "StigID": "CISC-RT-000660", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000343-RTR-000001", "RuleTitle": "The Cisco PE switch providing MPLS Layer 2 Virtual Private Network (L2VPN) services must be configured to authenticate targeted Label Distribution Protocol (LDP) sessions used to exchange virtual circuit (VC) information using a FIPS-approved message authentication code algorithm.", "Description": "<VulnDiscussion>LDP provides the signaling required for setting up and tearing down pseudowires (virtual circuits used to transport Layer 2 frames) across an MPLS IP core network. Using a targeted LDP session, each PE switch advertises a virtual circuit label mapping that is used as part of the label stack imposed on the frames by the ingress PE switch during packet forwarding. Authentication provides protection against spoofed TCP segments that can be introduced into the LDP sessions.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "LDP provides the signaling required for setting up and tearing down pseudowires (virtual circuits used to transport Layer 2 frames) across an MPLS IP core network. Using a targeted LDP session, each PE switch advertises a virtual circuit label mapping that is used as part of the label stack imposed on the frames by the ingress PE switch during packet forwarding. Authentication provides protection against spoofed TCP segments that can be introduced into the LDP sessions.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "The Cisco switch is not compliant with this requirement; hence, it is a finding. However, the severity level can be downgraded to a category 3 if the switch is configured to authenticate targeted LDP sessions using MD5 as shown in the configuration example below:\n\nStep 1: Verify that LDP neighbors are authenticating session, advertisement, and notification messages as shown in the example below:\n\nmpls ldp configurations\n password required for LDP_NBR1\n password option 1 for LDP_NBR1 key-chain LDP_KEY\n password required for LDP_NBR2\n password option 1 for LDP_NBR2 key-chain LDP_KEY\n\nStep 2: Verify that the neighbors identified in step 1 have the correct prefix.\n\nip prefix-list LDP_NBR1 permit 10.1.22.2/32\nip prefix-list LDP_NBR2 permit 10.1.12.4/32\n\nIf the switch is not configured to authenticate targeted LDP sessions using MD5, this is a finding. The finding will remain as a CAT II.", "FixText": "The severity level can be downgraded to a category 3 if the switch is configured to authenticate targeted LDP sessions using MD5 as shown in the example below:\n\nStep 1: Configure a key chain for LDP sessions.\n\n SW1(config)# key chain LDP_KEY\nSW1(config-keychain)# key 1\nSW1(config-keychain-key)# key-string xxxxxxxxxxxx\nSW1(config-keychain-key)# send-lifetime 00:00:00 Oct 1 2019 23:59:59 Dec 31 2019\nSW1(config-keychain-key)# accept-lifetime 00:00:00 Oct 1 2019 01:05:00 Jan 1 2020\nSW1(config-keychain-key)# exit\nSW1(config-keychain)# exit\n\nStep 2: Configure a prefix lists to identify LDP neighbors.\n\nSW1(config)# ip prefix-list LDP_NBR1 permit 10.1.22.2/32\nSW1(config)# ip prefix-list LDP_NBR2 permit 10.1.12.4/32\n\nStep 3: Apply the key chain to the LDP neighbors.\n\nSW1 (config)# mpls ldp configurations\nSW1 (config-ldp)# password required for LDP_NBR1\nSW1 (config-ldp)# password option 1 for LDP_NBR1 key-chain LDP_KEY\nSW1 (config-ldp)# password required for LDP_NBR2\nSW1 (config-ldp)# password option 1 for LDP_NBR2 key-chain LDP_KEY\nSW1 (config-ldp)# end", "CCI": "SV-111059,V-101955,CCI-001958"}, {"VulnID": "V-221121", "RuleID": "SV-221121r622190_rule", "StigID": "CISC-RT-000670", "Severity": "high", "Cat": "CAT I", "Classification": "", "GroupTitle": "SRG-NET-000512-RTR-000008", "RuleTitle": "The Cisco PE switch providing MPLS Virtual Private Wire Service (VPWS) must be configured to have the appropriate virtual circuit identification (VC ID) for each attachment circuit.", "Description": "<VulnDiscussion>VPWS is an L2VPN technology that provides a virtual circuit between two PE switches to forward Layer 2 frames between two customer-edge switches or switches through an MPLS-enabled IP core. The ingress PE switch (virtual circuit head-end) encapsulates Ethernet frames inside MPLS packets using label stacking and forwards them across the MPLS network to the egress PE switch (virtual circuit tail-end). During a virtual circuit setup, the PE switches exchange VC label bindings for the specified VC ID. The VC ID specifies a pseudowire associated with an ingress and egress PE switch and the customer-facing attachment circuits. \n\nTo guarantee that all frames are forwarded onto the correct pseudowire and to the correct customer and attachment circuits, it is imperative that the correct VC ID is configured for each attachment circuit.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "VPWS is an L2VPN technology that provides a virtual circuit between two PE switches to forward Layer 2 frames between two customer-edge switches or switches through an MPLS-enabled IP core. The ingress PE switch (virtual circuit head-end) encapsulates Ethernet frames inside MPLS packets using label stacking and forwards them across the MPLS network to the egress PE switch (virtual circuit tail-end). During a virtual circuit setup, the PE switches exchange VC label bindings for the specified VC ID. The VC ID specifies a pseudowire associated with an ingress and egress PE switch and the customer-facing attachment circuits. \n\nTo guarantee that all frames are forwarded onto the correct pseudowire and to the correct customer and attachment circuits, it is imperative that the correct VC ID is configured for each attachment circuit.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Verify that the correct and unique VCID has been configured for the appropriate attachment circuit. In the example below Ethernet2/1 is the CE-facing interface that is configured for VPWS with the VCID of 55.\n\nStep 1: Review the L2VPN virtual circuits and determine the member attachment circuit and pseudowire.\n\nl2vpn xconnect context VC55\n member Ethernet2/1\n member Pseudowire55\n\nStep 2: Determine the VCID as configured for neighbor and verify the same VCID is defined on the remote PE device.\n\nport-profile type pseudowire MPLS_PROFILE\n encapsulation mpls\n\ninterface Pseudowire55\n neighbor 10.10.22.1 55\n inherit port-profile MPLS_PROFILE\n\nNote: VPWS is also known as Ethernet over MPLS (EoMPLS) and Ethernet Virtual Circuit (EVC).\n\nIf the correct VC ID has not been configured on both switches, this is a finding.", "FixText": "Assign globally unique VC IDs for each virtual circuit and configure the attachment circuits with the appropriate VC ID.", "CCI": "SV-111061,V-101957,CCI-000366"}, {"VulnID": "V-221122", "RuleID": "SV-221122r622190_rule", "StigID": "CISC-RT-000680", "Severity": "high", "Cat": "CAT I", "Classification": "", "GroupTitle": "SRG-NET-000512-RTR-000009", "RuleTitle": "The Cisco PE switch providing Virtual Private LAN Services (VPLS) must be configured to have all attachment circuits defined to the virtual forwarding instance (VFI) with the globally unique VPN ID assigned for each customer VLAN.", "Description": "<VulnDiscussion>VPLS defines an architecture that delivers Ethernet multipoint services over an MPLS network. Customer Layer 2 frames are forwarded across the MPLS core via pseudowires using IEEE 802.1q Ethernet bridging principles. A pseudowire is a virtual bidirectional connection between two attachment circuits (virtual connections between PE and CE switches). A pseudowire contains two unidirectional label-switched paths (LSP) between two PE switches. Each MAC virtual forwarding table instance (VFI) is interconnected using pseudowires provisioned for the bridge domain, thereby maintaining privacy and logical separation between each VPLS bridge domain.\n\nThe VFI specifies the pseudowires associated with connecting PE switches and the customer-facing attachment circuits belonging to a given VLAN. Resembling a Layer 2 switch, the VFI is responsible for learning MAC addresses and providing loop-free forwarding of customer traffic to the appropriate end nodes. Each VPLS domain is identified by a globally unique VPN ID; hence, VFIs of the same VPLS domain must be configured with the same VPN ID on all participating PE switches. To guarantee traffic separation for all customer VLANs and that all packets are forwarded to the correct destination, it is imperative that the correct attachment circuits are associated with the appropriate VFI and that each VFI is associated to the unique VPN ID assigned to the customer VLAN.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "VPLS defines an architecture that delivers Ethernet multipoint services over an MPLS network. Customer Layer 2 frames are forwarded across the MPLS core via pseudowires using IEEE 802.1q Ethernet bridging principles. A pseudowire is a virtual bidirectional connection between two attachment circuits (virtual connections between PE and CE switches). A pseudowire contains two unidirectional label-switched paths (LSP) between two PE switches. Each MAC virtual forwarding table instance (VFI) is interconnected using pseudowires provisioned for the bridge domain, thereby maintaining privacy and logical separation between each VPLS bridge domain.\n\nThe VFI specifies the pseudowires associated with connecting PE switches and the customer-facing attachment circuits belonging to a given VLAN. Resembling a Layer 2 switch, the VFI is responsible for learning MAC addresses and providing loop-free forwarding of customer traffic to the appropriate end nodes. Each VPLS domain is identified by a globally unique VPN ID; hence, VFIs of the same VPLS domain must be configured with the same VPN ID on all participating PE switches. To guarantee traffic separation for all customer VLANs and that all packets are forwarded to the correct destination, it is imperative that the correct attachment circuits are associated with the appropriate VFI and that each VFI is associated to the unique VPN ID assigned to the customer VLAN.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Step 1: Review the implementation plan and the VPN IDs assigned to customer VLANs for the VPLS deployment.\n\nStep 2: Review the PE switch configuration to verify that customer attachment circuits are associated to the appropriate VFI. In the example below, the attached circuit at interface GigabitEthernet3 is associated to VPN ID 110.\n\nbridge-domain 100\n member vfi CUST1_VPLS\n member Ethernet2/2 service instance 1\n\nl2vpn vfi context CUST1_VPLS\n vpn id 100\nmember Pseudowire12\nmember Pseudowire13\n\u2026\n\u2026\n\u2026\ninterface Ethernet2/2\n service instance 1 ethernet\n encapsulation dot1q 100\n\u2026\n\u2026\n\u2026\ninterface Pseudowire12 \n encapsulation mpls\n neighbor 10.2.2.2 100\n\ninterface Pseudowire13 \n encapsulation mpls\n neighbor 10.3.3.3 100\n\nIf the attachment circuits have not been bound to the VFI configured with the assigned VPN ID for each VLAN, this is a finding.", "FixText": "Assign globally unique VPN IDs for each customer bridge domain using VPLS for carrier Ethernet services between multiple sites, and configure the attachment circuits to the appropriate VFI.\n\nStep 1: Configure the pseudowire interfaces with the assigned VC-ID.\n\nSW1(config)# interface Pseudowire12 \nSW1(config-if-pseudowire)# neighbor 10.2.2.2 100\nSW1(config-if-pseudowire)# encapsulation mpls\nSW1(config-pseudowire-mpls)# exit\nSW1(config-if-pseudowire)# exit\nSW1(config)# interface Pseudowire13 \nSW1(config-if-pseudowire)# neighbor 10.3.3.3 100\nSW1(config-if-pseudowire)# encapsulation mpls\nSW1(config-pseudowire-mpls)# exit\nSW1(config-if-pseudowire)# exit\n\nStep 2: Configure the virtual forwarding instance for the pseudowires as shown in the example with the assigned VPN ID.\n\nSW1(config)# l2vpn vfi context CUST1_VPLS\nSW1(config-l2vpn-vfi)# vpn 100\nSW1(config-l2vpn-vfi)# member Pseudowire12\nSW1(config-l2vpn-vfi)# member Pseudowire13\nSW1(config-l2vpn-vfi)# exit\n\nStep 3: Configure the service instance on the attachment circuit as shown in the example below:\n\nSW1(config)# interface ethernet 2/2\nSW1(config-if)# service instance 1 ethernet\nSW1(config-if-srv)# encapsulation dot1q 100\nSW1(config-if-srv)# exit\nSW1(config-if)# exit\n\nStep 4: Configure the bridge domain. \n\nSW1(config)# bridge-domain 100\nSW1(config-bdomain)# member ethernet 2/2 service-instance 1\nSW1(config-bdomain)# member vfi CUST1_VPLS\nSW1(config-bdomain)# end\n\nNote: The service instance configured on the attachment circuit must map to the service instance configured on the bridge domain in order to be bound to the correct bridge domain with the VFI that defines the appropriate VPN ID.", "CCI": "SV-111063,V-101959,CCI-000366"}, {"VulnID": "V-221123", "RuleID": "SV-221123r622190_rule", "StigID": "CISC-RT-000700", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000193-RTR-000002", "RuleTitle": "The Cisco PE switch providing Virtual Private LAN Services (VPLS) must be configured to have traffic storm control thresholds on CE-facing interfaces.", "Description": "<VulnDiscussion>A traffic storm occurs when packets flood a VPLS bridge, creating excessive traffic and degrading network performance. Traffic storm control prevents VPLS bridge disruption by suppressing traffic when the number of packets reaches configured threshold levels. Traffic storm control monitors incoming traffic levels on a port and drops traffic when the number of packets reaches the configured threshold level during any one-second interval.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "A traffic storm occurs when packets flood a VPLS bridge, creating excessive traffic and degrading network performance. Traffic storm control prevents VPLS bridge disruption by suppressing traffic when the number of packets reaches configured threshold levels. Traffic storm control monitors incoming traffic levels on a port and drops traffic when the number of packets reaches the configured threshold level during any one-second interval.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the switch configuration to verify that storm control is enabled on CE-facing interfaces deploying VPLS as shown in the example below:\n\ninterface Ethernet2/4\n no shutdown\n no switchport\n storm-control broadcast level 40.00\n service instance 1 ethernet\n encapsulation dot1q 100\n\nIf storm control is not enabled at a minimum for broadcast traffic, this is a finding.", "FixText": "Configure storm control for each CE-facing interface as shown in the example below:\n\nSW1(config)# int e2/4\nSW1(config-if)# storm-control broadcast level 40 \nSW1(config-if)# end", "CCI": "SV-111065,V-101961,CCI-001095"}, {"VulnID": "V-221124", "RuleID": "SV-221124r622190_rule", "StigID": "CISC-RT-000710", "Severity": "low", "Cat": "CAT III", "Classification": "", "GroupTitle": "SRG-NET-000362-RTR-000119", "RuleTitle": "The Cisco PE switch must be configured to implement Internet Group Management Protocol (IGMP) or Multicast Listener Discovery (MLD) snooping for each Virtual Private LAN Services (VPLS) bridge domain.", "Description": "<VulnDiscussion>IGMP snooping provides a way to constrain multicast traffic at Layer 2. By monitoring the IGMP membership reports sent by hosts within the bridge domain, the snooping application can set up Layer 2 multicast forwarding tables to deliver traffic only to ports with at least one interested member within the VPLS bridge, thereby significantly reducing the volume of multicast traffic that would otherwise flood an entire VPLS bridge domain. The IGMP snooping operation applies to both access circuits and pseudowires within a VPLS bridge domain.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "IGMP snooping provides a way to constrain multicast traffic at Layer 2. By monitoring the IGMP membership reports sent by hosts within the bridge domain, the snooping application can set up Layer 2 multicast forwarding tables to deliver traffic only to ports with at least one interested member within the VPLS bridge, thereby significantly reducing the volume of multicast traffic that would otherwise flood an entire VPLS bridge domain. The IGMP snooping operation applies to both access circuits and pseudowires within a VPLS bridge domain.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the switch configuration to verify that IGMP or MLD snooping has been configured for IPv4 and IPv6 multicast traffic respectively for each VPLS bridge domain. The example below are the steps to verify that IGMP snooping is enabled for a VPLS bridge domain.\n\nStep 1: Verify that IGMP snooping is enabled globally. By default, IGMP snooping is enabled globally; hence, the following command should not be in the switch configuration: no ip igmp snooping\n\nStep 2: If IGMP snooping is enabled globally, it will also be enabled by default for each VPLS bridge domain. Hence, the command \u201cno ip igmp snooping\u201d should not be configured for any VPLS bridge domain as shown in the example below:\n\nbridge-domain 100 \n no ip igmp snooping\n\nIf the switch is not configured to implement IGMP or MLD snooping for each VPLS bridge domain, this is a finding.", "FixText": "Configure IGMP or MLD snooping for IPv4 and IPv6 multicast traffic respectively for each VPLS bridge domain.\n\nSW1(config)# bridge-domain 100\nSW1(config-bdomain)# ip igmp snooping \nSW1(config-bdomain)# end", "CCI": "SV-111067,V-101963,CCI-002385"}, {"VulnID": "V-221125", "RuleID": "SV-221125r622190_rule", "StigID": "CISC-RT-000720", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000192-RTR-000002", "RuleTitle": "The Cisco PE switch must be configured to limit the number of MAC addresses it can learn for each Virtual Private LAN Services (VPLS) bridge domain.", "Description": "<VulnDiscussion>VPLS defines an architecture that delivers Ethernet multipoint services over an MPLS network. Customer Layer 2 frames are forwarded across the MPLS core via pseudowires using IEEE 802.1q Ethernet bridging principles. A pseudowire is a virtual bidirectional connection between two attachment circuits (virtual connections between PE and CE switches). A pseudowire contains two unidirectional label-switched paths (LSP). Each MAC forwarding table instance is interconnected using domain-specific LSPs, thereby maintaining privacy and logical separation between each VPLS domain.\n\nWhen a frame arrives on a bridge port (pseudowire or attachment circuit) and the source MAC address is unknown to the receiving PE switch, the source MAC address is associated with the pseudowire or attachment circuit and the forwarding table is updated accordingly. Frames are forwarded to the appropriate pseudowire or attachment circuit according to the forwarding table entry for the destination MAC address. Ethernet frames sent to broadcast and unknown destination addresses must be flooded out to all interfaces for the bridge domain; hence, a PE switch must replicate packets across both attachment circuits and pseudowires.\n\nA malicious attacker residing in a customer network could launch a source MAC address spoofing attack by flooding packets to a valid unicast destination, each with a different MAC source address. The PE switch receiving this traffic would try to learn every new MAC address and would quickly run out of space for the VFI forwarding table. Older, valid MAC addresses would be removed from the table, and traffic sent to them would have to be flooded until the storm threshold limit is reached. Hence, it is essential that a limit is established to control the number of MAC addresses that will be learned and recorded into the forwarding table for each bridge domain.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "VPLS defines an architecture that delivers Ethernet multipoint services over an MPLS network. Customer Layer 2 frames are forwarded across the MPLS core via pseudowires using IEEE 802.1q Ethernet bridging principles. A pseudowire is a virtual bidirectional connection between two attachment circuits (virtual connections between PE and CE switches). A pseudowire contains two unidirectional label-switched paths (LSP). Each MAC forwarding table instance is interconnected using domain-specific LSPs, thereby maintaining privacy and logical separation between each VPLS domain.\n\nWhen a frame arrives on a bridge port (pseudowire or attachment circuit) and the source MAC address is unknown to the receiving PE switch, the source MAC address is associated with the pseudowire or attachment circuit and the forwarding table is updated accordingly. Frames are forwarded to the appropriate pseudowire or attachment circuit according to the forwarding table entry for the destination MAC address. Ethernet frames sent to broadcast and unknown destination addresses must be flooded out to all interfaces for the bridge domain; hence, a PE switch must replicate packets across both attachment circuits and pseudowires.\n\nA malicious attacker residing in a customer network could launch a source MAC address spoofing attack by flooding packets to a valid unicast destination, each with a different MAC source address. The PE switch receiving this traffic would try to learn every new MAC address and would quickly run out of space for the VFI forwarding table. Older, valid MAC addresses would be removed from the table, and traffic sent to them would have to be flooded until the storm threshold limit is reached. Hence, it is essential that a limit is established to control the number of MAC addresses that will be learned and recorded into the forwarding table for each bridge domain.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the PE switch configuration to determine if a MAC address limit has been set for each VPLS bridge domain.\n\nbridge-domain 100 \n mac limit maximum addresses nnnnn\n\nIf a limit has not been configured, this is a finding.", "FixText": "Configure a MAC address learning limit for each VPLS bridge domain.\n\nSW1(config)# bridge-domain 100\nSW1(config-bdomain)# mac limit maximum addresses nnnn\nSW1(config-bdomain)# end", "CCI": "SV-111069,V-101965,CCI-001094"}, {"VulnID": "V-221126", "RuleID": "SV-221126r622190_rule", "StigID": "CISC-RT-000730", "Severity": "high", "Cat": "CAT I", "Classification": "", "GroupTitle": "SRG-NET-000205-RTR-000007", "RuleTitle": "The Cisco PE switch must be configured to block any traffic that is destined to the IP core infrastructure.", "Description": "<VulnDiscussion>IP/MPLS networks providing VPN and transit services must provide, at the least, the same level of protection against denial-of-service (DoS) attacks and intrusions as Layer 2 networks. Although the IP core network elements are hidden, security should never rely entirely on obscurity.\n\nIP addresses can be guessed. Core network elements must not be accessible from any external host. Protecting the core from any attack is vital for the integrity and privacy of customer traffic as well as the availability of transit services. A compromise of the IP core can result in an outage or, at a minimum, non-optimized forwarding of customer traffic. Protecting the core from an outside attack also prevents attackers from using the core to attack any customer. Hence, it is imperative that all switches at the edge deny traffic destined to any address belonging to the IP core infrastructure.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "IP/MPLS networks providing VPN and transit services must provide, at the least, the same level of protection against denial-of-service (DoS) attacks and intrusions as Layer 2 networks. Although the IP core network elements are hidden, security should never rely entirely on obscurity.\n\nIP addresses can be guessed. Core network elements must not be accessible from any external host. Protecting the core from any attack is vital for the integrity and privacy of customer traffic as well as the availability of transit services. A compromise of the IP core can result in an outage or, at a minimum, non-optimized forwarding of customer traffic. Protecting the core from an outside attack also prevents attackers from using the core to attack any customer. Hence, it is imperative that all switches at the edge deny traffic destined to any address belonging to the IP core infrastructure.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Step 1: Review the switch configuration to verify that an ingress ACL is applied to all external or CE-facing interfaces. \n\ninterface Ethernet1/2\n ip address x.1.12.2/30\n ip access-group BLOCK_TO_CORE in\n\nStep 2: Verify that the ingress ACL discards and logs packets destined to the IP core address space. \n\nip access-list BLOCK_TO_CORE\n deny ip any 10.1.x.0 0.0.255.255 log\n permit ip any any\n\nNote: Internet Control Message Protocol (ICMP) echo requests and traceroutes will be allowed to the edge from external adjacent neighbors.\n\nIf the PE switch is not configured to block any traffic with a destination address assigned to the IP core infrastructure, this is a finding.", "FixText": "Configure protection for the IP core to be implemented at the edges by blocking any traffic with a destination address assigned to the IP core infrastructure.\n\nStep 1: Configure an ingress ACL to discard and log packets destined to the IP core address space. \n\nSW1(config)# ip access-list BLOCK_TO_CORE\nSW1(config-acl)# deny ip any 10.1.x.0 0.0.255.255 log\nSW1(config-acl)# exit\n\nStep 2: Apply the ACL inbound to all external or CE-facing interfaces.\n\nSW1(config)#int e1/2\nSW1(config-if)# ip access-group BLOCK_TO_CORE in\nSW1(config-if)# end", "CCI": "SV-111071,V-101967,CCI-001097"}, {"VulnID": "V-221127", "RuleID": "SV-221127r622190_rule", "StigID": "CISC-RT-000740", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000205-RTR-000008", "RuleTitle": "The Cisco PE switch must be configured with Unicast Reverse Path Forwarding (uRPF) loose mode enabled on all CE-facing interfaces.", "Description": "<VulnDiscussion>The uRPF feature is a defense against spoofing and denial-of-service (DoS) attacks by verifying if the source address of any ingress packet is reachable. To mitigate attacks that rely on forged source addresses, all provider edge switches must enable uRPF loose mode to guarantee that all packets received from a CE switch contain source addresses that are in the route table.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "The uRPF feature is a defense against spoofing and denial-of-service (DoS) attacks by verifying if the source address of any ingress packet is reachable. To mitigate attacks that rely on forged source addresses, all provider edge switches must enable uRPF loose mode to guarantee that all packets received from a CE switch contain source addresses that are in the route table.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the switch configuration to determine if uRPF loose mode is enabled on all CE-facing interfaces.\n\ninterface Ethernet1/2\n ip address x.1.12.2/30\n ip access-group BLOCK_TO_CORE in\n ip verify unicast source reachable-via any\n\nIf uRPF loose mode is not enabled on all CE-facing interfaces, this is a finding.", "FixText": "Configure uRPF loose mode on all CE-facing interfaces as shown in the example below:\n\nSW1(config)# int e1/2\nSW1(config-if)# ip verify unicast source reachable-via any\nSW1(config-if)# end", "CCI": "SV-111073,V-101969,CCI-001097"}, {"VulnID": "V-221128", "RuleID": "SV-221128r622190_rule", "StigID": "CISC-RT-000750", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000205-RTR-000016", "RuleTitle": "The Cisco PE switch must be configured to ignore or drop all packets with any IP options.", "Description": "<VulnDiscussion>Packets with IP options are not fast-switched and therefore must be punted to the switch processor. Hackers who initiate denial-of-service (DoS) attacks on switches commonly send large streams of packets with IP options. Dropping the packets with IP options reduces the load of IP options packets on the switch. The end result is a reduction in the effects of the DoS attack on the switch and on downstream switches.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Packets with IP options are not fast-switched and therefore must be punted to the switch processor. Hackers who initiate denial-of-service (DoS) attacks on switches commonly send large streams of packets with IP options. Dropping the packets with IP options reduces the load of IP options packets on the switch. The end result is a reduction in the effects of the DoS attack on the switch and on downstream switches.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "In Cisco NX-OS, all packets with any header option other than the \u201csource-route\u201d header option are dropped. By default, ipv4 source routing is enabled. Verify that source routing is disabled via the following command: \n\nno ip source-route\n\nIf the switch is not configured to drop all packets with IP option source routing, this is a finding.", "FixText": "Configure the switch to drop all packets with IP option source routing.\n\nSW1(config)# no ip source-route \nSW1(config)# end", "CCI": "SV-111075,V-101971,CCI-002403"}, {"VulnID": "V-221129", "RuleID": "SV-221129r622190_rule", "StigID": "CISC-RT-000760", "Severity": "low", "Cat": "CAT III", "Classification": "", "GroupTitle": "SRG-NET-000193-RTR-000113", "RuleTitle": "The Cisco PE switch must be configured to enforce a Quality-of-Service (QoS) policy in accordance with the QoS GIG Technical Profile.", "Description": "<VulnDiscussion>Different applications have unique requirements and toleration levels for delay, jitter, bandwidth, packet loss, and availability. To manage the multitude of applications and services, a network requires a QoS framework to differentiate traffic and provide a method to manage network congestion. The Differentiated Services Model (DiffServ) is based on per-hop behavior by categorizing traffic into different classes and enabling each node to enforce a forwarding treatment to each packet as dictated by a policy.\n\nPacket markings such as IP Precedence and its successor, Differentiated Services Code Points (DSCP), were defined along with specific per-hop behaviors for key traffic types to enable a scalable QoS solution. DiffServ QoS categorizes network traffic, prioritizes it according to its relative importance, and provides priority treatment based on the classification. It is imperative that end-to-end QoS is implemented within the IP core network to provide preferred treatment for mission-critical applications.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Different applications have unique requirements and toleration levels for delay, jitter, bandwidth, packet loss, and availability. To manage the multitude of applications and services, a network requires a QoS framework to differentiate traffic and provide a method to manage network congestion. The Differentiated Services Model (DiffServ) is based on per-hop behavior by categorizing traffic into different classes and enabling each node to enforce a forwarding treatment to each packet as dictated by a policy.\n\nPacket markings such as IP Precedence and its successor, Differentiated Services Code Points (DSCP), were defined along with specific per-hop behaviors for key traffic types to enable a scalable QoS solution. DiffServ QoS categorizes network traffic, prioritizes it according to its relative importance, and provides priority treatment based on the classification. It is imperative that end-to-end QoS is implemented within the IP core network to provide preferred treatment for mission-critical applications.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the switch configuration and verify that a QoS policy has been configured to provide preferred treatment for mission-critical applications in accordance with the QoS DoDIN Technical Profile. \n\nStep 1: Verify that the class-maps are configured to match on DSCP values as shown in the configuration example below:\n\nclass-map match-all C2_VOICE\n match ip dscp af47\nclass-map match-all VOICE\n match ip dscp ef\nclass-map match-all VIDEO\n match ip dscp af41\nclass-map match-all CONTROL_PLANE\n match ip dscp cs6\nclass-map match-all PREFERRED_DATA\n match ip dscp af33\n\nStep 2: Verify that the policy map reserves the bandwidth for each traffic type as shown in the example below:\n\npolicy-map QOS_POLICY\nclass C2_VOICE\n priority percent 10\n class VOICE\n priority percent 15\n class VIDEO\n bandwidth percent 25\nclass CONTROL_PLANE\n priority percent 10\n class PREFERRED_DATA\n bandwidth percent 25\n class class-default\n bandwidth percent 15\n\nStep 3: Verify that an output service policy is bound to all interface as shown in the configuration example below:\n\ninterface Ethernet1/1\n ip address 10.1.15.1/30\n service-policy output QOS_POLICY\n!\ninterface Ethernet1/2\n ip address 10.1.15.4/30\n service-policy output QOS_POLICY\n\nNote: Enclaves must mark or re-mark their traffic to be consistent with the DoDIN backbone admission criteria to gain the appropriate level of service. A general DiffServ principle is to mark or trust traffic as close to the source as administratively and technically possible. However, certain traffic types might need to be re-marked before handoff to the DoDIN backbone to gain admission to the correct class. If such re-marking is required, it is recommended that the re-marking be performed at the CE egress edge.\n\nNote: The GTP QOS document (GTP-0009) can be downloaded via the following link: \nhttps://intellipedia.intelink.gov/wiki/Portal:GIG_Technical_Guidance/GTG_GTPs/GTP_Development_List\n\nIf the switch is not configured to enforce a QoS policy in accordance with the QoS GIG Technical Profile, this is a finding.", "FixText": "Configure a QoS policy in accordance with the QoS GIG Technical Profile.\n\nStep 1: Configure class-maps to match on DSCP values as shown in the configuration example below:\n\nSW1(config-cmap)# class-map match-all C2_VOICE\nSW1(config-cmap)# match ip dscp 47\nSW1(config-cmap)# class-map match-all VOICE\nSW1(config-cmap)# match ip dscp ef\nSW1(config-cmap)# class-map match-all VIDEO\nSW1(config-cmap)# match ip dscp af41\nSW1(config-cmap)# class-map match-all CONTROL_PLANE\nSW1(config-cmap)# match ip dscp cs6\nSW1(config-cmap)# class-map match-all PREFERRED_DATA\nSW1(config-cmap)# match ip dscp af33\nSW1(config-cmap)# exit\n\nStep 2: Configure a policy map to be applied to the interfaces that reserves the bandwidth for each traffic type as shown in the example below:\n\nSW1(config)# policy-map QOS_POLICY\nSW1(config-pmap-c)# class C2_VOICE\nSW1(config-pmap-c)# priority percent 10\nSW1(config-pmap-c)# class VOICE\nSW1(config-pmap-c)# priority percent 15\nSW1(config-pmap-c)# class VIDEO\nSW1(config-pmap-c)# bandwidth percent 25\nSW1(config-pmap)# class CONTROL_PLANE\nSW1(config-pmap-c)# priority percent 10\nSW1(config-pmap-c)# class PREFERRED_DATA\nSW1(config-pmap-c)# bandwidth percent 25\nSW1(config-pmap-c)# class class-default\nSW1(config-pmap-c)# bandwidth percent 15\nSW1(config-pmap-c)# exit\nSW1(config-pmap)# exit\n\nStep 3: Apply the output service policy to all interfaces as shown in the configuration example below:\n\nSW1(config)# int e1/1\nSW1(config-if)# service-policy output QOS_POLICY\nSW1(config-if)# exit\nSW1(config)# int e1/2\nSW1(config-if)# service-policy output QOS_POLICY\nSW1(config-if)# end", "CCI": "SV-111077,V-101973,CCI-001095"}, {"VulnID": "V-221130", "RuleID": "SV-221130r622190_rule", "StigID": "CISC-RT-000770", "Severity": "low", "Cat": "CAT III", "Classification": "", "GroupTitle": "SRG-NET-000193-RTR-000114", "RuleTitle": "The Cisco P switch must be configured to implement a Quality-of-Service (QoS) policy in accordance with the QoS GIG Technical Profile.", "Description": "<VulnDiscussion>Different applications have unique requirements and toleration levels for delay, jitter, bandwidth, packet loss, and availability. To manage the multitude of applications and services, a network requires a QoS framework to differentiate traffic and provide a method to manage network congestion. The Differentiated Services Model (DiffServ) is based on per-hop behavior by categorizing traffic into different classes and enabling each node to enforce a forwarding treatment to each packet as dictated by a policy.\n\nPacket markings such as IP Precedence and its successor, Differentiated Services Code Points (DSCP), were defined along with specific per-hop behaviors for key traffic types to enable a scalable QoS solution. DiffServ QoS categorizes network traffic, prioritizes it according to its relative importance, and provides priority treatment based on the classification. It is imperative that end-to-end QoS is implemented within the IP core network to provide preferred treatment for mission-critical applications.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Different applications have unique requirements and toleration levels for delay, jitter, bandwidth, packet loss, and availability. To manage the multitude of applications and services, a network requires a QoS framework to differentiate traffic and provide a method to manage network congestion. The Differentiated Services Model (DiffServ) is based on per-hop behavior by categorizing traffic into different classes and enabling each node to enforce a forwarding treatment to each packet as dictated by a policy.\n\nPacket markings such as IP Precedence and its successor, Differentiated Services Code Points (DSCP), were defined along with specific per-hop behaviors for key traffic types to enable a scalable QoS solution. DiffServ QoS categorizes network traffic, prioritizes it according to its relative importance, and provides priority treatment based on the classification. It is imperative that end-to-end QoS is implemented within the IP core network to provide preferred treatment for mission-critical applications.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the switch configuration and verify that a QoS policy has been configured to provide preferred treatment for mission-critical applications in accordance with the QoS DoDIN Technical Profile. \n\nStep 1: Verify that the class-maps are configured to match on DSCP values as shown in the configuration example below:\n\nclass-map match-all C2_VOICE\n match ip dscp af47\nclass-map match-all VOICE\n match ip dscp ef\nclass-map match-all VIDEO\n match ip dscp af41\nclass-map match-all CONTROL_PLANE\n match ip dscp cs6\nclass-map match-all PREFERRED_DATA\n match ip dscp af33\n\nStep 2: Verify that the policy map reserves the bandwidth for each traffic type as shown in the example below:\n\npolicy-map QOS_POLICY\nclass C2_VOICE\n priority percent 10\n class VOICE\n priority percent 15\n class VIDEO\n bandwidth percent 25\nclass CONTROL_PLANE\n priority percent 10\n class PREFERRED_DATA\n bandwidth percent 25\n class class-default\n bandwidth percent 15\n\nStep 3: Verify that an output service policy is bound to all interface as shown in the configuration example below:\n\ninterface Ethernet1/1\n ip address 10.1.15.1/30\n service-policy output QOS_POLICY\n!\ninterface Ethernet1/2\n ip address 10.1.15.4/30\n service-policy output QOS_POLICY\n\nNote: Enclaves must mark or re-mark their traffic to be consistent with the DoDIN backbone admission criteria to gain the appropriate level of service. A general DiffServ principle is to mark or trust traffic as close to the source as administratively and technically possible. However, certain traffic types might need to be re-marked before handoff to the DoDIN backbone to gain admission to the correct class. If such re-marking is required, it is recommended that the re-marking be performed at the CE egress edge.\n\nNote: The GTP QOS document (GTP-0009) can be downloaded via the following link: \nhttps://intellipedia.intelink.gov/wiki/Portal:GIG_Technical_Guidance/GTG_GTPs/GTP_Development_List\n\nIf the switch is not configured to enforce a QoS policy in accordance with the QoS GIG Technical Profile, this is a finding.", "FixText": "Configure a QoS policy in accordance with the QoS GIG Technical Profile.\n\nStep 1: Configure class-maps to match on DSCP values as shown in the configuration example below:\n\nSW1(config-cmap)# class-map match-all C2_VOICE\nSW1(config-cmap)# match ip dscp 47\nSW1(config-cmap)# class-map match-all VOICE\nSW1(config-cmap)# match ip dscp ef\nSW1(config-cmap)# class-map match-all VIDEO\nSW1(config-cmap)# match ip dscp af41\nSW1(config-cmap)# class-map match-all CONTROL_PLANE\nSW1(config-cmap)# match ip dscp cs6\nSW1(config-cmap)# class-map match-all PREFERRED_DATA\nSW1(config-cmap)# match ip dscp af33\nSW1(config-cmap)# exit\n\nStep 2: Configure a policy map to be applied to the interfaces that reserves the bandwidth for each traffic type as shown in the example below:\n\nSW1(config)# policy-map QOS_POLICY\nSW1(config-pmap-c)# class C2_VOICE\nSW1(config-pmap-c)# priority percent 10\nSW1(config-pmap-c)# class VOICE\nSW1(config-pmap-c)# priority percent 15\nSW1(config-pmap-c)# class VIDEO\nSW1(config-pmap-c)# bandwidth percent 25\nSW1(config-pmap)# class CONTROL_PLANE\nSW1(config-pmap-c)# priority percent 10\nSW1(config-pmap-c)# class PREFERRED_DATA\nSW1(config-pmap-c)# bandwidth percent 25\nSW1(config-pmap-c)# class class-default\nSW1(config-pmap-c)# bandwidth percent 15\nSW1(config-pmap-c)# exit\nSW1(config-pmap)# exit\n\nStep 3: Apply the output service policy to all interfaces as shown in the configuration example below:\n\nSW1(config)# int e1/1\nSW1(config-if)# service-policy output QOS_POLICY\nSW1(config-if)# exit\nSW1(config)# int e1/2\nSW1(config-if)# service-policy output QOS_POLICY\nSW1(config-if)# end", "CCI": "SV-111079,V-101975,CCI-001095"}, {"VulnID": "V-221131", "RuleID": "SV-221131r622190_rule", "StigID": "CISC-RT-000780", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000193-RTR-000112", "RuleTitle": "The Cisco switch must be configured to enforce a Quality-of-Service (QoS) policy to limit the effects of packet flooding denial-of-service (DoS) attacks.", "Description": "<VulnDiscussion>DoS is a condition when a resource is not available for legitimate users. Packet flooding distributed denial-of-service (DDoS) attacks are referred to as volumetric attacks and have the objective of overloading a network or circuit to deny or seriously degrade performance, which denies access to the services that normally traverse the network or circuit. Volumetric attacks have become relatively easy to launch using readily available tools such as Low Orbit Ion Cannon or botnets. \n\nMeasures to mitigate the effects of a successful volumetric attack must be taken to ensure that sufficient capacity is available for mission-critical traffic. Managing capacity may include, for example, establishing selected network usage priorities or quotas and enforcing them using rate limiting, Quality of Service (QoS), or other resource reservation control methods. These measures may also mitigate the effects of sudden decreases in network capacity that are the result of accidental or intentional physical damage to telecommunications facilities (such as cable cuts or weather-related outages).</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "DoS is a condition when a resource is not available for legitimate users. Packet flooding distributed denial-of-service (DDoS) attacks are referred to as volumetric attacks and have the objective of overloading a network or circuit to deny or seriously degrade performance, which denies access to the services that normally traverse the network or circuit. Volumetric attacks have become relatively easy to launch using readily available tools such as Low Orbit Ion Cannon or botnets. \n\nMeasures to mitigate the effects of a successful volumetric attack must be taken to ensure that sufficient capacity is available for mission-critical traffic. Managing capacity may include, for example, establishing selected network usage priorities or quotas and enforcing them using rate limiting, Quality of Service (QoS), or other resource reservation control methods. These measures may also mitigate the effects of sudden decreases in network capacity that are the result of accidental or intentional physical damage to telecommunications facilities (such as cable cuts or weather-related outages).", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Step 1: Verify that a class map has been configured for the Scavenger class as shown in the example below:\n\nclass-map match-all SCAVENGER\n match ip dscp cs1\n\nStep 2: Verify that the policy map includes the SCAVENGER class with low priority as shown in the following example below:\n\npolicy-map QOS_POLICY\n class CONTROL_PLANE\n priority percent 10\n class C2_VOICE\n priority percent 10\n class VOICE\n priority percent 15\n class VIDEO\n bandwidth percent 25\n class PREFERRED_DATA\n bandwidth percent 25\nclass SCAVENGER\n bandwidth percent 5\n class class-default\n bandwidth percent 10\n\nNote: Traffic out of profile must be marked at the customer access layer or CE egress edge.\n\nIf the switch is not configured to enforce a QoS policy to limit the effects of packet flooding DoS attacks, this is a finding.", "FixText": "Step 1: Configure a class map for the SCAVENGER class.\n\nSW1(config)# class-map match-all SCAVENGER\nSW1(config-cmap)# match ip dscp cs1\n\nStep 2: Add the SCAVENGER class to the policy map as shown in the example below:\n\nSW1(config)# policy-map QOS_POLICY\nSW1(config-pmap-c)# no class class-default\nSW1(config-pmap)# class SCAVENGER\nSW1(config-pmap-c)# bandwidth percent 5\nSW1(config-pmap-c)# class class-default\nSW1(config-pmap-c)# bandwidth percent 10\nSW1(config-pmap-c)# end", "CCI": "SV-111081,V-101977,CCI-001095"}, {"VulnID": "V-221132", "RuleID": "SV-221132r622190_rule", "StigID": "CISC-RT-000790", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000019-RTR-000003", "RuleTitle": "The Cisco multicast switch must be configured to disable Protocol Independent Multicast (PIM) on all interfaces that are not required to support multicast routing.", "Description": "<VulnDiscussion>If multicast traffic is forwarded beyond the intended boundary, it is possible that it can be intercepted by unauthorized or unintended personnel. Limiting where, within the network, a given multicast group's data is permitted to flow is an important first step in improving multicast security. \n\nA scope zone is an instance of a connected region of a given scope. Zones of the same scope cannot overlap while zones of a smaller scope will fit completely within a zone of a larger scope. For example, Admin-local scope is smaller than Site-local scope, so the administratively configured boundary fits within the bounds of a site. According to RFC 4007 IPv6 Scoped Address Architecture (section 5), scope zones are also required to be \"convex from a routing perspective\"; that is, packets routed within a zone must not pass through any links that are outside of the zone. This requirement forces each zone to be one contiguous island rather than a series of separate islands. \n\nAs stated in the DoD IPv6 IA Guidance for MO3, \"One should be able to identify all interfaces of a zone by drawing a closed loop on their network diagram, engulfing some switches and passing through some switches to include only some of their interfaces.\" Therefore, it is imperative that the network engineers have documented their multicast topology and thereby knows which interfaces are enabled for multicast. Once this is done, the zones can be scoped as required.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "If multicast traffic is forwarded beyond the intended boundary, it is possible that it can be intercepted by unauthorized or unintended personnel. Limiting where, within the network, a given multicast group's data is permitted to flow is an important first step in improving multicast security. \n\nA scope zone is an instance of a connected region of a given scope. Zones of the same scope cannot overlap while zones of a smaller scope will fit completely within a zone of a larger scope. For example, Admin-local scope is smaller than Site-local scope, so the administratively configured boundary fits within the bounds of a site. According to RFC 4007 IPv6 Scoped Address Architecture (section 5), scope zones are also required to be \"convex from a routing perspective\"; that is, packets routed within a zone must not pass through any links that are outside of the zone. This requirement forces each zone to be one contiguous island rather than a series of separate islands. \n\nAs stated in the DoD IPv6 IA Guidance for MO3, \"One should be able to identify all interfaces of a zone by drawing a closed loop on their network diagram, engulfing some switches and passing through some switches to include only some of their interfaces.\" Therefore, it is imperative that the network engineers have documented their multicast topology and thereby knows which interfaces are enabled for multicast. Once this is done, the zones can be scoped as required.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Step 1: Review the network's multicast topology diagram.\n\nStep 2: Review the switch configuration to verify that only the PIM interfaces as shown in the multicast topology diagram are enabled for PIM as shown in the example below:\n\ninterface Ethernet2/1\n no switchport\n ip address 10.1.12.1/24\n ip pim sparse-mode\n\nIf an interface is not required to support multicast routing and it is enabled, this is a finding.", "FixText": "Document all enabled interfaces for PIM in the network's multicast topology diagram. Disable support for PIM on interfaces that are not required to support it.\n\nSW1(config)# int e2/1\nSW1(config-if)# no ip pim sparse-mode \nSW1(config-if)# end", "CCI": "SV-111083,V-101979,CCI-001414"}, {"VulnID": "V-221133", "RuleID": "SV-221133r622190_rule", "StigID": "CISC-RT-000800", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000019-RTR-000004", "RuleTitle": "The Cisco multicast switch must be configured to bind a Protocol Independent Multicast (PIM) neighbor filter to interfaces that have PIM enabled.", "Description": "<VulnDiscussion>PIM is a routing protocol used to build multicast distribution trees for forwarding multicast traffic across the network infrastructure. PIM traffic must be limited to only known PIM neighbors by configuring and binding a PIM neighbor filter to those interfaces that have PIM enabled. If a PIM neighbor filter is not applied to those interfaces that have PIM enabled, unauthorized switches can join the PIM domain, discover and use the rendezvous points, and also advertise their rendezvous points into the domain. This can result in a denial of service by traffic flooding or result in the unauthorized transfer of data.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "PIM is a routing protocol used to build multicast distribution trees for forwarding multicast traffic across the network infrastructure. PIM traffic must be limited to only known PIM neighbors by configuring and binding a PIM neighbor filter to those interfaces that have PIM enabled. If a PIM neighbor filter is not applied to those interfaces that have PIM enabled, unauthorized switches can join the PIM domain, discover and use the rendezvous points, and also advertise their rendezvous points into the domain. This can result in a denial of service by traffic flooding or result in the unauthorized transfer of data.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Step 1: Verify all interfaces enabled for PIM have a neighbor policy bound to the interface as shown in the example below:\n\ninterface Ethernet2/1\n no switchport\n ip address 10.1.12.1/24\n ip pim sparse-mode\n ip pim neighbor-policy prefix-list PIM_NEIGHBOR\n no shutdown\n\nStep 2: Review the configured prefix list for filtering PIM neighbors as shown in the example below:\n\nip prefix-list PIM_NEIGHBOR seq 5 permit 10.1.12.2/32\nip prefix-list PIM_NEIGHBOR seq 10 deny 0.0.0.0/0 le 32\n\nIf PIM neighbor ACLs are not bound to all interfaces that have PIM enabled, this is a finding.", "FixText": "Configure neighbor prefix lists to only accept PIM control plane traffic from documented PIM neighbors. \n\nStep 1: Configure prefix list for each PIM neighbor.\n\nSW1(config)# ip prefix-list PIM_NEIGHBOR seq 5 permit 10.1.12.2/32\nSW1(config)# ip prefix-list PIM_NEIGHBOR deny 0.0.0.0/0 le 32\n\nStep 2: Apply a prefix to all interfaces enabled for PIM.\n\nSW1(config)# int e2/1\nSW1(config-if)# ip pim neighbor-policy prefix-list PIM_NEIGHBOR \nSW1(config-if)# end", "CCI": "SV-111085,V-101981,CCI-001414"}, {"VulnID": "V-221134", "RuleID": "SV-221134r622190_rule", "StigID": "CISC-RT-000810", "Severity": "low", "Cat": "CAT III", "Classification": "", "GroupTitle": "SRG-NET-000019-RTR-000005", "RuleTitle": "The Cisco multicast edge switch must be configured to establish boundaries for administratively scoped multicast traffic.", "Description": "<VulnDiscussion>If multicast traffic is forwarded beyond the intended boundary, it is possible that it can be intercepted by unauthorized or unintended personnel.\n\nAdministrative scoped multicast addresses are locally assigned and are to be used exclusively by the enterprise network or enclave. Administrative scoped multicast traffic must not cross the enclave perimeter in either direction. Restricting multicast traffic makes it more difficult for a malicious user to access sensitive traffic.\n\nAdmin-Local scope is encouraged for any multicast traffic within a network intended for network management, as well as for control plane traffic that must reach beyond link-local destinations.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "If multicast traffic is forwarded beyond the intended boundary, it is possible that it can be intercepted by unauthorized or unintended personnel.\n\nAdministrative scoped multicast addresses are locally assigned and are to be used exclusively by the enterprise network or enclave. Administrative scoped multicast traffic must not cross the enclave perimeter in either direction. Restricting multicast traffic makes it more difficult for a malicious user to access sensitive traffic.\n\nAdmin-Local scope is encouraged for any multicast traffic within a network intended for network management, as well as for control plane traffic that must reach beyond link-local destinations.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Multicast boundary for NX-OS can be established via combination of the border command along with an ACL to filter admin-scoped multicast traffic.\n\nStep 1: Verify that the interface at the multicast domain edge has been configured with both an ingress and egress ACL.\n\ninterface Ethernet2/1\n no switchport\n ip access-group FILTER_TRAFFIC_IN in\n ip access-group FILTER_TRAFFIC_OUT out\n ip address 10.1.12.1/24\n ip pim sparse-mode\n ip pim border\n\nNote: The command ip pim border enables the interface to be on the border of PIM domain so that no bootstrap, candidate-RP, or Auto-RP messages are sent or received on the interface. \n\nStep 2: Verify that the ingress and egress ACLs block the address range for administratively scoped multicast traffic.\n\nip access-list FILTER_TRAFFIC_IN\n 10 deny ip any 239.0.0.0/8\n 20 permit tcp any any established\n\u2026\n \u2026\n \u2026\n90 deny ip any any log \n\nip access-list FILTER_TRAFFIC_OUT\n 10 deny ip any 239.0.0.0/8\n 20 deny ip \u2026\n \u2026\n80 permit ip any any\n\nIf the switch is not configured to establish boundaries for administratively scoped multicast traffic, this is a finding.", "FixText": "Step 1: Configure an ingress and egress ACL to block administratively scoped multicast traffic.\n\nSW1(config)# ip access-list FILTER_TRAFFIC_IN\nSW1(config-acl)# deny 239.0.0.0/8\nSW1(config-acl)# permit tcp any any established\nSW1(config-acl)# \u2026\nSW1(config-acl)# deny ip any any log \nSW1(config-acl)# exit\nSW1(config)# ip access-list FILTER_TRAFFIC_OUT\nSW1(config-acl)# deny 239.0.0.0/8\nSW1(config-acl)# \u2026\nSW1(config-acl)# permit ip any any\nSW1(config-acl)# exit\n\nStep 2: Apply the ingress and egress ACL to the applicable interfaces.\n\nSW1(config)# int e2/1\nSW1(config-if)# ip access-group FILTER_TRAFFIC_IN in\nSW1(config-if)# ip access-group FILTER_TRAFFIC_OUT out\nSW1(config-if)# end", "CCI": "SV-111087,V-101983,CCI-001414"}, {"VulnID": "V-221135", "RuleID": "SV-221135r622190_rule", "StigID": "CISC-RT-000820", "Severity": "low", "Cat": "CAT III", "Classification": "", "GroupTitle": "SRG-NET-000362-RTR-000120", "RuleTitle": "The Cisco multicast Rendezvous Point (RP) switch must be configured to limit the multicast forwarding cache so that its resources are not saturated by managing an overwhelming number of Protocol Independent Multicast (PIM) and Multicast Source Discovery Protocol (MSDP) source-active entries.", "Description": "<VulnDiscussion>MSDP peering between networks enables sharing of multicast source information. Enclaves with an existing multicast topology using PIM-SM can configure their RP switches to peer with MSDP switches. As a first step of defense against a denial-of-service (DoS) attack, all RP switches must limit the multicast forwarding cache to ensure that switch resources are not saturated managing an overwhelming number of PIM and MSDP source-active entries.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "MSDP peering between networks enables sharing of multicast source information. Enclaves with an existing multicast topology using PIM-SM can configure their RP switches to peer with MSDP switches. As a first step of defense against a denial-of-service (DoS) attack, all RP switches must limit the multicast forwarding cache to ensure that switch resources are not saturated managing an overwhelming number of PIM and MSDP source-active entries.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "The Cisco switch does not have a mechanism to limit the multicast forwarding cache. However, the risk associated with this requirement can be fully mitigated by configuring the switch to filter PIM register messages and accept MSDP packets only from known MSDP peers. \n\nStep 1: Verify that the RP is configured to filter PIM register messages for any undesirable multicast groups and sources. The example below will deny any multicast streams for groups 239.5.0.0/16 and allow from only sources x.1.2.6 and x.1.2.7. \n\nip pim register-policy PIM_REGISTER_FILTER\n\u2026\n\u2026\n\u2026\nroute-map PIM_REGISTER_FILTER deny 10\n match ip multicast group 239.5.0.0/16 \nroute-map PIM_REGISTER_FILTER permit 20\n match ip multicast source x.1.2.6/32 \nroute-map PIM_REGISTER_FILTER permit 30\n match ip multicast source x.1.2.7/32 \nroute-map PIM_REGISTER_FILTER permit 40\n match ip multicast group-range 232.0.0.0 to 233.255.255.255 \nroute-map PIM_REGISTER_FILTER deny 50\n match ip multicast source 0.0.0.0/0\n\nStep 2: Review the switch configuration to determine if there is a receive path or interface filter to only accept MSDP packets from known MSDP peers as shown in the example below. \n\nStep 2a: Verify that interfaces used for MSDP peering have an inbound ACL as shown in the example.\n\ninterface Ethernet2/3\n no switchport\n ip access-group EXTERNAL_ACL_INBOUND in\n ip address x.1.28.8/24\n ip pim sparse-mode\n\nStep 2b: Verify that the ACL restricts MSDP peering to only known sources.\n\nip access-list EXTERNAL_ACL_INBOUND\n 10 permit tcp any any established \n 20 permit tcp x.1.28.2/32 x.1.28.8/32 eq 639 \n 30 deny tcp any x.1.28.8/32 eq 639 log \n 40 permit tcp x.1.28.2/32 10.x.28.8/32 eq bgp \n 50 permit tcp x.1.28.2/32 eq bgp x.1.28.8/32 \n 60 permit pim x.1.28.2/32 x.1.28.8/32 \n\u2026\n \u2026\n \u2026\n120 deny ip any any log\n\nNote: MSDP connections is via TCP port 639.\n\nIf the RP switch is not configured to filter PIM register messages and accept MSDP packets only from known MSDP peers, this is a finding.", "FixText": "The risk associated with this requirement can be fully mitigated by configuring the switch to filter PIM register messages, rate limiting the number of PIM register messages, and accept MSDP packets only from known MSDP peers. \n\nStep 1: Configure the switch to filter PIM register messages received from a multicast DR for any undesirable multicast groups and sources. The example below will deny any multicast streams for groups 239.5.0.0/16 and allow from only sources x.1.2.6 and x.1.2.7. \n\nStep 1a: Configure a route map to filter multicast groups and sources as shown in the example below:\n\nSW1(config)# route-map PIM_REGISTER_FILTER deny 10 \nSW1(config-route-map)# match ip multicast group 239.5.0.0/16 \nSW1(config-route-map)# route-map PIM_REGISTER_FILTER permit 20\nSW1(config-route-map)# match ip multicast source x.1.2.6/32\nSW1(config-route-map)# route-map PIM_REGISTER_FILTER permit 30\nSW1(config-route-map)# match ip multicast source x.1.2.7/32\nSW1(config-route-map)# route-map PIM_REGISTER_FILTER permit 40\nSW1(config-route-map)# match ip multicast group-range 232.0.0.0 to 233.255.255.255\nSW1(config-route-map)# route-map PIM_REGISTER_FILTER deny 50\nSW1(config-route-map)# match ip multicast source 0.0.0.0/0\nSW1(config-route-map)# exit\n\nStep 1b: Configure a multicast register policy referencing the configured route map.\n\nSW1(config)# ip pim register-policy PIM_REGISTER_FILTER\nSW1(config)# end\n\nStep 2: Configure the receive path or interface ACLs to only accept MSDP packets from known MSDP peers. \n\nSW1(config)# ip access-list EXTERNAL_ACL_INBOUND\nSW1(config-acl) # permit tcp any any established\nSW1(config-acl) # permit tcp host x.1.28.2 host x.1.28.8 eq 639\nSW1(config-acl) # deny tcp any host x1.28.8 eq 639\nSW1(config-acl) # permit tcp host x.1.28.2 host x.1.28.8 eq bgp\nSW1(config-acl) # permit tcp host x.1.28.2 eq bgp host x.1.28.8\nSW1(config-acl) # permit pim host x.1.28.2 host x.1.28.8\n\u2026\n\u2026\n\u2026\nSW1(config-acl)# deny ip any any", "CCI": "SV-111089,V-101985,CCI-002385"}, {"VulnID": "V-221136", "RuleID": "SV-221136r622190_rule", "StigID": "CISC-RT-000830", "Severity": "low", "Cat": "CAT III", "Classification": "", "GroupTitle": "SRG-NET-000019-RTR-000013", "RuleTitle": "The Cisco multicast Rendezvous Point (RP) switch must be configured to filter Protocol Independent Multicast (PIM) Register messages received from the Designated switch (DR) for any undesirable multicast groups and sources.", "Description": "<VulnDiscussion>Real-time multicast traffic can entail multiple large flows of data. An attacker can flood a network segment with multicast packets, over-using the available bandwidth and thereby creating a denial-of-service (DoS) condition. Hence, it is imperative that register messages are accepted only for authorized multicast groups and sources.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Real-time multicast traffic can entail multiple large flows of data. An attacker can flood a network segment with multicast packets, over-using the available bandwidth and thereby creating a denial-of-service (DoS) condition. Hence, it is imperative that register messages are accepted only for authorized multicast groups and sources.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Verify that the RP switch is configured to filter PIM register messages. The example below will deny any multicast streams for groups 239.5.0.0/16 and allow from only sources x.1.2.6 and x.1.2.7. \n\nip pim register-policy PIM_REGISTER_FILTER\n\u2026\n\u2026\n\u2026\nroute-map PIM_REGISTER_FILTER deny 10\n match ip multicast group 239.5.0.0/16 \nroute-map PIM_REGISTER_FILTER permit 20\n match ip multicast source x.1.2.6/32 \nroute-map PIM_REGISTER_FILTER permit 30\n match ip multicast source x.1.2.7/32 \nroute-map PIM_REGISTER_FILTER permit 40\n match ip multicast group-range 232.0.0.0 to 233.255.255.255 \nroute-map PIM_REGISTER_FILTER deny 50\n match ip multicast source 0.0.0.0/0\n\nIf the RP switch peering with PIM-SM switches is not configured with a policy to block registration messages for any undesirable multicast groups and sources, this is a finding.", "FixText": "Configure the switch to filter PIM register messages received from a multicast DR for any undesirable multicast groups and sources. The example below will deny any multicast streams for groups 239.5.0.0/16 and allow from only sources x.1.2.6 and x.1.2.7. \n\nStep 1: Configure a route map to filter multicast groups and sources as shown in the example below:\n\nSW1(config)# route-map PIM_REGISTER_FILTER deny 10 \nSW1(config-route-map)# match ip multicast group 239.5.0.0/16 \nSW1(config-route-map)# route-map PIM_REGISTER_FILTER permit 20\nSW1(config-route-map)# match ip multicast source x.1.2.6/32\nSW1(config-route-map)# route-map PIM_REGISTER_FILTER permit 30\nSW1(config-route-map)# match ip multicast source x.1.2.7/32\nSW1(config-route-map)# route-map PIM_REGISTER_FILTER permit 40\nSW1(config-route-map)# match ip multicast group-range 232.0.0.0 to 233.255.255.255\nSW1(config-route-map)# route-map PIM_REGISTER_FILTER deny 50\nSW1(config-route-map)# match ip multicast source 0.0.0.0/0\nSW1(config-route-map)# exit\n\nStep 2: Configure a multicast register policy referencing the configured route map.\n\nSW1(config)# ip pim register-policy PIM_REGISTER_FILTER\nSW1(config)# end", "CCI": "SV-111091,V-101987,CCI-001414"}, {"VulnID": "V-221137", "RuleID": "SV-221137r622190_rule", "StigID": "CISC-RT-000840", "Severity": "low", "Cat": "CAT III", "Classification": "", "GroupTitle": "SRG-NET-000019-RTR-000014", "RuleTitle": "The Cisco multicast Rendezvous Point (RP) switch must be configured to filter Protocol Independent Multicast (PIM) Join messages received from the Designated Cisco switch (DR) for any undesirable multicast groups.", "Description": "<VulnDiscussion>Real-time multicast traffic can entail multiple large flows of data. An attacker can flood a network segment with multicast packets, over-using the available bandwidth and thereby creating a denial-of-service (DoS) condition. Hence, it is imperative that join messages are only accepted for authorized multicast groups.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Real-time multicast traffic can entail multiple large flows of data. An attacker can flood a network segment with multicast packets, over-using the available bandwidth and thereby creating a denial-of-service (DoS) condition. Hence, it is imperative that join messages are only accepted for authorized multicast groups.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Verify that the RP switch is configured to filter PIM join messages for any undesirable multicast groups. In the example below, groups from 239.8.0.0/16 are not allowed.\n\nroute-map PIM_JOIN_FILTER deny 10\n match ip multicast group 239.0.0.0/8 \nroute-map PIM_JOIN_FILTER permit 20\n match ip multicast group 224.0.0.0/4 \n\u2026\n\u2026\n\u2026\ninterface Ethernet2/1\n no switchport\n ip address 10.1.12.1/24\n ip pim sparse-mode\n ip pim jp-policy PIM_JOIN_FILTER in\n\nIf the RP is not configured to filter join messages received from the DR for any undesirable multicast groups, this is a finding.", "FixText": "Configure the RP to filter PIM join messages for any undesirable multicast groups as shown in the example below:\n\nStep 1: Configure a PIM Join filter as shown in the example below:\n\nSW1(config)# route-map PIM_JOIN_FILTER deny \nSW1(config-route-map)# match ip multicast group 239.8.0.0/8\nSW1(config-route-map)# route-map PIM_JOIN_FILTER permit 20\nSW1(config-route-map)# match ip multicast group 224.0.0.0/4\nSW1(config-route-map)# exit\n\nStep 2: Apply the PIM Join filter to the appropriate interfaces.\n\nSW1(config)# int e2/1\nSW1(config-if)# ip pim jp-policy PIM_JOIN_FILTER in\nSW1(config-if)# end", "CCI": "SV-111167,V-102211,CCI-001414"}, {"VulnID": "V-221138", "RuleID": "SV-221138r622190_rule", "StigID": "CISC-RT-000860", "Severity": "low", "Cat": "CAT III", "Classification": "", "GroupTitle": "SRG-NET-000364-RTR-000114", "RuleTitle": "The Cisco multicast Designated switch (DR) must be configured to filter the Internet Group Management Protocol (IGMP) and Multicast Listener Discovery (MLD) Report messages to allow hosts to join only multicast groups that have been approved by the organization.", "Description": "<VulnDiscussion>Real-time multicast traffic can entail multiple large flows of data. Large unicast flows tend to be fairly isolated (i.e., someone doing a file download here or there), whereas multicast can have broader impact on bandwidth consumption, resulting in extreme network congestion. Hence, it is imperative that there is multicast admission control to restrict which multicast groups hosts are allowed to join via IGMP or MLD.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Real-time multicast traffic can entail multiple large flows of data. Large unicast flows tend to be fairly isolated (i.e., someone doing a file download here or there), whereas multicast can have broader impact on bandwidth consumption, resulting in extreme network congestion. Hence, it is imperative that there is multicast admission control to restrict which multicast groups hosts are allowed to join via IGMP or MLD.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the configuration of the DR to verify that it is filtering IGMP or MLD Membership Report messages, allowing hosts to join only those groups that have been approved.\n\nStep 1: Verify that all host facing interfaces are configured to filter IGMP Membership Report messages (IGMP joins) as shown in the example below:\n\ninterface Ethernet2/4\n no switchport\n ip address 10.2.22.3/24 ip pim sparse-mode\n ip igmp version 3\n ip igmp report-policy ALLOWED_GROUPS\n\nStep 2: Verify that the report policy denies unauthorized groups or permits only authorized groups. \n\nroute-map ALLOWED_GROUPS permit 10\n match ip multicast group 233.1.1.0/24 \nroute-map ALLOWED_GROUPS permit 20\n match ip multicast group 233.1.1.0/32 \nroute-map ALLOWED_GROUPS permit 30\n match ip multicast group 233.1.1.1/32 \nroute-map ALLOWED_GROUPS deny 40\n match ip multicast group 224.0.0.0/4\n\nNote: This requirement is only applicable to Source Specific Multicast (SSM) implementation. This requirement is not applicable to Any Source Multicast (ASM) since the filtering is being performed by the Rendezvous Point.\n\nIf the DR is not filtering IGMP or MLD Membership Report messages, this is a finding.", "FixText": "Configure the DR to filter the IGMP or MLD Membership Report messages to allow hosts to join only those multicast groups that have been approved.\n\nStep 1: Configure the report policy to filter IGMP Membership Report messages as shown in the example below:\n\nSW1(config)# route-map ALLOWED_GROUPS permit\nSW1(config-route-map)# match ip multicast group 233.1.1.0/24\nSW1(config-route-map)# route-map ALLOWED_GROUPS permit 20\nSW1(config-route-map)# match ip multicast group 233.1.1.0/32\nSW1(config-route-map)# route-map ALLOWED_GROUPS permit 30\nSW1(config-route-map)# match ip multicast group 233.1.1.1/32\nSW1(config-route-map)# route-map ALLOWED_GROUPS deny 40\nSW1(config-route-map)# match ip multicast group 224.0.0.0/4\nSW1(config-route-map)# exit\n\nStep 2: Apply the report policy to all applicable interfaces.\n\nSW1(config)# int e2/4\nSW1(config-if)# ip igmp report-policy ALLOWED_GROUPS \nSW1(config-if)# end", "CCI": "SV-111169,V-102213,CCI-002403"}, {"VulnID": "V-221139", "RuleID": "SV-221139r622190_rule", "StigID": "CISC-RT-000870", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000364-RTR-000115", "RuleTitle": "The Cisco multicast Designated switch (DR) must be configured to filter the Internet Group Management Protocol (IGMP) and Multicast Listener Discovery (MLD) Report messages to allow hosts to join a multicast group only from sources that have been approved by the organization.", "Description": "<VulnDiscussion>Real-time multicast traffic can entail multiple large flows of data. Large unicast flows tend to be fairly isolated (i.e., someone doing a file download here or there), whereas multicast can have broader impact on bandwidth consumption, resulting in extreme network congestion. Hence, it is imperative that there is multicast admission control to restrict which multicast groups hosts are allowed to join via IGMP or MLD.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Real-time multicast traffic can entail multiple large flows of data. Large unicast flows tend to be fairly isolated (i.e., someone doing a file download here or there), whereas multicast can have broader impact on bandwidth consumption, resulting in extreme network congestion. Hence, it is imperative that there is multicast admission control to restrict which multicast groups hosts are allowed to join via IGMP or MLD.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the configuration of the DR to verify that it is filtering IGMP or MLD report messages, allowing hosts to only join multicast groups from sources that have been approved.\n\nStep 1: Verify that all host-facing interfaces are configured to filter IGMP Membership Report messages (IGMP joins) as shown in the example below:\n\ninterface Ethernet2/4\n no switchport\n ip address 10.2.22.3/24 \n ip pim sparse-mode\n ip igmp version 3\n ip igmp report-policy ALLOWED_SOURCES\n\nStep 2: Verify that the report policy permits only sources that have been approved by the organization.\n\nroute-map ALLOWED_SOURCES permit 10\n match ip multicast source x.1.2.6/32 \nroute-map ALLOWED_SOURCES permit 20\n match ip multicast source x.1.2.7/32 \nroute-map ALLOWED_SOURCES deny 30\n match ip multicast source 0.0.0.0/0\n\nNote: This requirement is only applicable to Source Specific Multicast (SSM) implementation.\n\nIf the DR is not filtering IGMP or MLD report messages, this is a finding.", "FixText": "Step 1: Configure the report policy to filter IGMP Membership Report messages as shown in the example below:\n\nSW1(config-route-map)# route-map ALLOWED_SOURCES permit 10\nSW1(config-route-map)# match ip multicast source x.1.2.6/32\nSW1(config-route-map)# route-map ALLOWED_SOURCES permit 20\nSW1(config-route-map)# match ip multicast source x.1.2.7/32\nSW1(config-route-map)# route-map ALLOWED_SOURCES deny 30\nSW1(config-route-map)# match ip multicast source 0.0.0.0/0\nSW1(config-route-map)# exit\n\nStep 2: Apply the report policy to all applicable interfaces.\n\nSW1(config)# int e2/4\nSW1(config-if)# ip igmp report-policy ALLOWED_SOURCES \nSW1(config-if)# end", "CCI": "SV-111171,V-102215,CCI-002403"}, {"VulnID": "V-221140", "RuleID": "SV-221140r622190_rule", "StigID": "CISC-RT-000880", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000362-RTR-000122", "RuleTitle": "The Cisco multicast Designated switch (DR) must be configured to limit the number of mroute states resulting from Internet Group Management Protocol (IGMP) and Multicast Listener Discovery (MLD) Host Membership Reports.", "Description": "<VulnDiscussion>The current multicast paradigm can let any host join any multicast group at any time by sending an IGMP or MLD membership report to the DR. In a Protocol Independent Multicast (PIM) Sparse Mode network, the DR will send a PIM Join message for the group to the RP. Without any form of admission control, this can pose a security risk to the entire multicast domain, specifically the multicast switches along the shared tree from the DR to the RP that must maintain the mroute state information for each group join request. Hence, it is imperative that the DR is configured to limit the number of mroute state information that must be maintained to mitigate the risk of IGMP or MLD flooding.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "The current multicast paradigm can let any host join any multicast group at any time by sending an IGMP or MLD membership report to the DR. In a Protocol Independent Multicast (PIM) Sparse Mode network, the DR will send a PIM Join message for the group to the RP. Without any form of admission control, this can pose a security risk to the entire multicast domain, specifically the multicast switches along the shared tree from the DR to the RP that must maintain the mroute state information for each group join request. Hence, it is imperative that the DR is configured to limit the number of mroute state information that must be maintained to mitigate the risk of IGMP or MLD flooding.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the DR configuration to verify that it is limiting the number of mroute states via IGMP or MLD.\n\nVerify IGMP state limits have been configured on all applicable interfaces as shown in the example below:\n\ninterface Ethernet2/4\n no switchport\n ip address 10.2.22.3/24 \n ip pim sparse-mode\n ip igmp version 3\n ip igmp state-limit nnn\n\nIf the DR is not limiting multicast join requests via IGMP or MLD on all applicable interfaces, this is a finding.", "FixText": "Configure the DR on a global or interface basis to limit the number of mroute states resulting from IGMP or MLD membership reports.\n\nSW1(config)# int e2/4\nSW1(config-if)# ip igmp state-limit 44 \nSW1(config-if)# end", "CCI": "SV-111173,V-102217,CCI-002385"}, {"VulnID": "V-221141", "RuleID": "SV-221141r648772_rule", "StigID": "CISC-RT-000890", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000362-RTR-000123", "RuleTitle": "The Cisco multicast Designated switch (DR) must be configured to set the shortest-path tree (SPT) threshold to infinity to minimalize source-group (S, G) state within the multicast topology where Any Source Multicast (ASM) is deployed.", "Description": "<VulnDiscussion>ASM can have many sources for the same groups (many-to-many). For many receivers, the path via the RP may not be ideal compared with the shortest path from the source to the receiver. By default, the last-hop switch will initiate a switch from the shared tree to a source-specific SPT to obtain lower latencies. This is accomplished by the last-hop switch sending an (S, G) Protocol Independent Multicast (PIM) Join toward S (the source).\n\nWhen the last-hop switch begins to receive traffic for the group from the source via the SPT, it will send a PIM Prune message to the RP for the (S, G). The RP will then send a Prune message toward the source. The SPT switchover becomes a scaling issue for large multicast topologies that have many receivers and many sources for many groups because (S, G) entries require more memory than (*, G). Hence, it is imperative to minimize the amount of (S, G) state to be maintained by increasing the threshold that determines when the SPT switchover occurs.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "ASM can have many sources for the same groups (many-to-many). For many receivers, the path via the RP may not be ideal compared with the shortest path from the source to the receiver. By default, the last-hop switch will initiate a switch from the shared tree to a source-specific SPT to obtain lower latencies. This is accomplished by the last-hop switch sending an (S, G) Protocol Independent Multicast (PIM) Join toward S (the source).\n\nWhen the last-hop switch begins to receive traffic for the group from the source via the SPT, it will send a PIM Prune message to the RP for the (S, G). The RP will then send a Prune message toward the source. The SPT switchover becomes a scaling issue for large multicast topologies that have many receivers and many sources for many groups because (S, G) entries require more memory than (*, G). Hence, it is imperative to minimize the amount of (S, G) state to be maintained by increasing the threshold that determines when the SPT switchover occurs.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the DR configuration to verify that the SPT switchover threshold is set to infinity (never switch over). \n\nip pim spt-threshold infinity group-list prefix-list SPT_GROUPS\n\nNote: The default behavior is to join the SPT immediately upon the first data packet it receives.\n\nIf the DR is not configured set SPT threshold to infinity to minimalize (S, G) state, this is a finding.", "FixText": "Configure the DR to increase the SPT threshold or set it to infinity to minimalize (S, G) state within the multicast topology where ASM is deployed.\n\nStep 1: Configure a prefix list or route map to specify the ASM groups. The example below includes all global ASM groups.\n\nSW1(config)# ip prefix-list SPT_GROUPS permit 233.0.0.0/8\n\nStep 2. Configure the SPT threshold to infinity.\n\nSW1(config)# ip pim spt-threshold infinity group prefix-list SPT_GROUPS \nSW1(config)# end", "CCI": "SV-111175,V-102219,CCI-000366"}, {"VulnID": "V-221142", "RuleID": "SV-221142r622190_rule", "StigID": "CISC-RT-000900", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000364-RTR-000116", "RuleTitle": "The Cisco Multicast Source Discovery Protocol (MSDP) switch must be configured to only accept MSDP packets from known MSDP peers.", "Description": "<VulnDiscussion>MSDP peering with customer network switches presents additional risks to the DISN Core, whether from a rogue or misconfigured MSDP-enabled switch. To guard against an attack from malicious MSDP traffic, the receive path or interface filter for all MSDP-enabled RP switches must be configured to only accept MSDP packets from known MSDP peers.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "MSDP peering with customer network switches presents additional risks to the DISN Core, whether from a rogue or misconfigured MSDP-enabled switch. To guard against an attack from malicious MSDP traffic, the receive path or interface filter for all MSDP-enabled RP switches must be configured to only accept MSDP packets from known MSDP peers.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the switch configuration to determine if there is a receive path or interface filter to only accept MSDP packets from known MSDP peers.\n\nStep 1: Verify that interfaces used for MSDP peering have an inbound ACL as shown in the example below:\n\ninterface Ethernet2/3\n no switchport\n ip access-group EXTERNAL_ACL_INBOUND in\n ip address x.1.28.8/24\n ip pim sparse-mode\n\nStep 2: Verify that the ACL restricts MSDP peering to only known sources.\n\nip access-list EXTERNAL_ACL_INBOUND\n 10 permit tcp any any established \n 20 permit tcp x.1.28.2/32 x.1.28.8/32 eq 639 \n 30 deny tcp any x.1.28.8/32 eq 639 log \n 40 permit tcp x.1.28.2/32 10.x.28.8/32 eq bgp \n 50 permit tcp x.1.28.2/32 eq bgp x.1.28.8/32 \n 60 permit pim x.1.28.2/32 x.1.28.8/32 \n\u2026\n \u2026\n \u2026\n120 deny ip any any log\n\nNote: MSDP connections are via TCP port 639.\n\nIf the switch is not configured to only accept MSDP packets from known MSDP peers, this is a finding.", "FixText": "Configure the receive path or interface ACLs to only accept MSDP packets from known MSDP peers.\n\nSW1(config)# ip access-list EXTERNAL_ACL_INBOUND\nSW1(config-acl) # permit tcp any any established\nSW1(config-acl) # permit tcp host x.1.28.2 host x.1.28.8 eq 639\nSW1(config-acl) # deny tcp any host x1.28.8 eq 639\nSW1(config-acl) # permit tcp host x.1.28.2 host x.1.28.8 eq bgp\nSW1(config-acl) # permit tcp host x.1.28.2 eq bgp host x.1.28.8\nSW1(config-acl) # permit pim host x.1.28.2 host x.1.28.8\n\u2026\n\u2026\n\u2026\nSW1(config-acl)# deny ip any any", "CCI": "SV-111177,V-102221,CCI-002403"}, {"VulnID": "V-221143", "RuleID": "SV-221143r622190_rule", "StigID": "CISC-RT-000910", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000343-RTR-000002", "RuleTitle": "The Cisco Multicast Source Discovery Protocol (MSDP) switch must be configured to authenticate all received MSDP packets.", "Description": "<VulnDiscussion>MSDP peering with customer network switches presents additional risks to the core, whether from a rogue or misconfigured MSDP-enabled switch. MSDP password authentication is used to validate each segment sent on the TCP connection between MSDP peers, protecting the MSDP session against the threat of spoofed packets being injected into the TCP connection stream.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "MSDP peering with customer network switches presents additional risks to the core, whether from a rogue or misconfigured MSDP-enabled switch. MSDP password authentication is used to validate each segment sent on the TCP connection between MSDP peers, protecting the MSDP session against the threat of spoofed packets being injected into the TCP connection stream.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the switch configuration to determine if received MSDP packets are authenticated.\n\nip msdp peer x.1.28.2 remote-as nn\nip msdp password peer x.1.28.2 xxxxxxxxxxxx\n\nip msdp peer x.1.28.2 connect-source Ethernet2/3 remote-as 8\nip msdp password x.1.28.2 3 3ec66c90c104ad13\n\nIf the switch does not require MSDP authentication, this is a finding.", "FixText": "Configure the switch to authenticate MSDP messages as shown in the following example:\n\nSW1(config)# ip msdp password x.1.28.2 xxxxxxxxxxxx", "CCI": "SV-111253,V-102297,CCI-001958"}, {"VulnID": "V-221144", "RuleID": "SV-221144r622190_rule", "StigID": "CISC-RT-000920", "Severity": "low", "Cat": "CAT III", "Classification": "", "GroupTitle": "SRG-NET-000018-RTR-000007", "RuleTitle": "The Cisco Multicast Source Discovery Protocol (MSDP) switch must be configured to filter received source-active multicast advertisements for any undesirable multicast groups and sources.", "Description": "<VulnDiscussion>The interoperability of BGP extensions for interdomain multicast routing and MSDP enables seamless connectivity of multicast domains between autonomous systems. MP-BGP advertises the unicast prefixes of the multicast sources used by Protocol Independent Multicast (PIM) switches to perform RPF checks and build multicast distribution trees. MSDP is a mechanism used to connect multiple PIM sparse-mode domains, allowing RPs from different domains to share information about active sources. When RPs in peering multicast domains hear about active sources, they can pass on that information to their local receivers, thereby allowing multicast data to be forwarded between the domains. Configuring an import policy to block multicast advertisements for reserved, Martian, single-source multicast, and any other undesirable multicast groups, as well as any source-group (S, G) states with Bogon source addresses, would assist in avoiding unwanted multicast traffic from traversing the core.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "The interoperability of BGP extensions for interdomain multicast routing and MSDP enables seamless connectivity of multicast domains between autonomous systems. MP-BGP advertises the unicast prefixes of the multicast sources used by Protocol Independent Multicast (PIM) switches to perform RPF checks and build multicast distribution trees. MSDP is a mechanism used to connect multiple PIM sparse-mode domains, allowing RPs from different domains to share information about active sources. When RPs in peering multicast domains hear about active sources, they can pass on that information to their local receivers, thereby allowing multicast data to be forwarded between the domains. Configuring an import policy to block multicast advertisements for reserved, Martian, single-source multicast, and any other undesirable multicast groups, as well as any source-group (S, G) states with Bogon source addresses, would assist in avoiding unwanted multicast traffic from traversing the core.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the switch configuration to determine if there is import policy to block source-active multicast advertisements for any undesirable multicast groups, as well as any (S, G) states with undesirable source addresses. \n\nStep 1: Verify that an inbound source-active filter is bound to each MSDP peer.\n\nip msdp peer x.1.28.2 connect-source Ethernet2/1 remote-as nn\nip msdp sa-policy x.1.28.2 prefix-list INBOUND_MSDP_SA_FILTER in\n\nStep 2: Review the prefix-list or route-map referenced by the source-active filter to verify that undesirable multicast groups, auto-RP, single source multicast (SSM) groups, and advertisements from undesirable sources are blocked.\n\nip prefix-list INBOUND_MSDP_SA_FILTER seq 10 deny 224.0.1.3/32 \nip prefix-list INBOUND_MSDP_SA_FILTER seq 15 deny 224.0.1.24/32 \nip prefix-list INBOUND_MSDP_SA_FILTER seq 20 deny 224.0.1.22/32 \nip prefix-list INBOUND_MSDP_SA_FILTER seq 25 deny 224.0.1.2/32 \nip prefix-list INBOUND_MSDP_SA_FILTER seq 30 deny 224.0.1.35/32 \nip prefix-list INBOUND_MSDP_SA_FILTER seq 35 deny 224.0.1.60/32 \nip prefix-list INBOUND_MSDP_SA_FILTER seq 40 deny 224.0.1.39/32 \nip prefix-list INBOUND_MSDP_SA_FILTER seq 45 deny 224.0.1.40/32 \nip prefix-list INBOUND_MSDP_SA_FILTER seq 50 deny 232.0.0.0/8 le 32 \nip prefix-list INBOUND_MSDP_SA_FILTER seq 55 deny 239.0.0.0/8 le 32 \nip prefix-list INBOUND_MSDP_SA_FILTER seq 60 deny 10.0.0.0/8 le 32 \nip prefix-list INBOUND_MSDP_SA_FILTER seq 70 deny 172.16.0.0/12 le 32 \nip prefix-list INBOUND_MSDP_SA_FILTER seq 75 permit 0.0.0.0/0 ge 8\n\nIf the switch is not configured with an import policy to filter undesirable SA multicast advertisements, this is a finding.", "FixText": "Configure the MSDP switch to filter received source-active multicast advertisements for any undesirable multicast groups and sources as shown in the example below:\n\nSW1(config)# ip prefix-list INBOUND_MSDP_SA_FILTER seq 10 deny 224.0.1.3/32 \nSW1(config)# ip prefix-list INBOUND_MSDP_SA_FILTER seq 15 deny 224.0.1.24/32\nSW1(config)# ip prefix-list INBOUND_MSDP_SA_FILTER seq 20 deny 224.0.1.22/32\nSW1(config)# ip prefix-list INBOUND_MSDP_SA_FILTER seq 25 deny 224.0.1.2/32\nSW1(config)# ip prefix-list INBOUND_MSDP_SA_FILTER seq 30 deny 224.0.1.35/32\nSW1(config)# ip prefix-list INBOUND_MSDP_SA_FILTER seq 35 deny 224.0.1.60/32\nSW1(config)# ip prefix-list INBOUND_MSDP_SA_FILTER seq 40 deny 224.0.1.39/32\nSW1(config)# ip prefix-list INBOUND_MSDP_SA_FILTER seq 45 deny 224.0.1.40/32\nSW1(config)# ip prefix-list INBOUND_MSDP_SA_FILTER seq 50 deny 232.0.0.0/8 le 32 \nSW1(config)# ip prefix-list INBOUND_MSDP_SA_FILTER seq 55 deny 239.0.0.0/8 le 32 \nSW1(config)# ip prefix-list INBOUND_MSDP_SA_FILTER seq 60 deny 10.0.0.0/8 le 32\nSW1(config)# ip prefix-list INBOUND_MSDP_SA_FILTER seq 165 deny 127.0.0.0/8 le 32\nSW1(config)# ip prefix-list INBOUND_MSDP_SA_FILTER seq 70 deny 172.16.0.0/12 le 32\nSW1(config)# ip prefix-list INBOUND_MSDP_SA_FILTER seq 75 permit 0.0.0.0/0 ge 8\nSW1(config)# exit\nSW1(config)# ip msdp sa-policy x.1.28.2 prefix-list INBOUND_MSDP_SA_FILTER in\nSW1(config)# end", "CCI": "SV-111255,V-102299,CCI-001368"}, {"VulnID": "V-221145", "RuleID": "SV-221145r622190_rule", "StigID": "CISC-RT-000930", "Severity": "low", "Cat": "CAT III", "Classification": "", "GroupTitle": "SRG-NET-000018-RTR-000008", "RuleTitle": "The Cisco Multicast Source Discovery Protocol (MSDP) switch must be configured to filter source-active multicast advertisements to external MSDP peers to avoid global visibility of local-only multicast sources and groups.", "Description": "<VulnDiscussion>To avoid global visibility of local information, there are a number of source-group (S, G) states in a PIM-SM domain that must not be leaked to another domain, such as multicast sources with private address, administratively scoped multicast addresses, and the auto-RP groups (224.0.1.39 and 224.0.1.40).\n\nAllowing a multicast distribution tree, local to the core, to extend beyond its boundary could enable local multicast traffic to leak into other autonomous systems and customer networks.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "To avoid global visibility of local information, there are a number of source-group (S, G) states in a PIM-SM domain that must not be leaked to another domain, such as multicast sources with private address, administratively scoped multicast addresses, and the auto-RP groups (224.0.1.39 and 224.0.1.40).\n\nAllowing a multicast distribution tree, local to the core, to extend beyond its boundary could enable local multicast traffic to leak into other autonomous systems and customer networks.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the switch configuration to determine if there is export policy to block local source-active multicast advertisements.\n\nStep 1: Verify that an outbound source-active filter is bound to each MSDP peer as shown in the example below:\n\nip msdp peer x.1.28.2 connect-source Ethernet2/1 remote-as nn\nip msdp sa-policy x.1.28.2 prefix-list OUTBOUND_MSDP_SA_FILTER out\n\nStep 2: Review the access lists referenced by the source-active filters and verify that MSDP source-active messages being sent to MSDP peers do not leak advertisements that are local.\n\nip prefix-list OUTBOUND_MSDP_SA_FILTER seq 10 deny 10.0.0.0/8 le 32\nip prefix-list OUTBOUND_MSDP_SA_FILTER seq 20 permit 0.0.0.0/0 ge 8\n\nIf the switch is not configured with an export policy to filter local source-active multicast advertisements, this is a finding.", "FixText": "Configure the switch with an export policy to avoid global visibility of local multicast (S, G) states. The example below will prevent exporting multicast active sources belonging to the private network.\n\nSW1(config)# ip prefix-list OUTBOUND_MSDP_SA_FILTER seq 10 deny 10.0.0.0/8 le 32\nSW1(config)# ip prefix-list OUTBOUND_MSDP_SA_FILTER seq 20 permit 0.0.0.0/0 ge 8\nSW1(config)# exit\nSW1(config)# ip msdp sa-policy x.1.28.2 prefix-list OUTBOUND_MSDP_SA_FILTER out\nSW1(config)# end", "CCI": "SV-111257,V-102301,CCI-001368"}, {"VulnID": "V-221146", "RuleID": "SV-221146r622190_rule", "StigID": "CISC-RT-000940", "Severity": "low", "Cat": "CAT III", "Classification": "", "GroupTitle": "SRG-NET-000018-RTR-000009", "RuleTitle": "The Cisco Multicast Source Discovery Protocol (MSDP) switch must be configured to limit the amount of source-active messages it accepts on a per-peer basis.", "Description": "<VulnDiscussion>To reduce any risk of a denial-of-service (DoS) attack from a rogue or misconfigured MSDP switch, the switch must be configured to limit the number of source-active messages it accepts from each peer.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "To reduce any risk of a denial-of-service (DoS) attack from a rogue or misconfigured MSDP switch, the switch must be configured to limit the number of source-active messages it accepts from each peer.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the switch configuration to determine if it is configured to limit the amount of source-active messages it accepts on a per-peer basis.\n\nip msdp peer x.1.28.2 connect-source Ethernet2/1 remote-as nn\n\u2026\n\u2026\n\u2026\nip msdp sa-limit x.1.28.2 nnn\n\nIf the switch is not configured to limit the source-active messages it accepts, this is a finding.", "FixText": "Configure the switch to limit the amount of source-active messages it accepts from each peer.\n\nSW1(config)# ip msdp sa-limit x.1.28.2 nnn\nSW1(config)# end", "CCI": "SV-111259,V-102303,CCI-001368"}, {"VulnID": "V-221147", "RuleID": "SV-221147r622190_rule", "StigID": "CISC-RT-000950", "Severity": "low", "Cat": "CAT III", "Classification": "", "GroupTitle": "SRG-NET-000512-RTR-000011", "RuleTitle": "The Cisco Multicast Source Discovery Protocol (MSDP) switch must be configured to use a loopback address as the source address when originating MSDP traffic.", "Description": "<VulnDiscussion>Using a loopback address as the source address offers a multitude of uses for security, access, management, and scalability of MSDP switches. It is easier to construct appropriate ingress filters for switch management plane traffic destined to the network management subnet since the source addresses will be from the range used for loopback interfaces instead of a larger range of addresses used for physical interfaces. Log information recorded by authentication and syslog servers will record the switch\u2019s loopback address instead of the numerous physical interface addresses.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Using a loopback address as the source address offers a multitude of uses for security, access, management, and scalability of MSDP switches. It is easier to construct appropriate ingress filters for switch management plane traffic destined to the network management subnet since the source addresses will be from the range used for loopback interfaces instead of a larger range of addresses used for physical interfaces. Log information recorded by authentication and syslog servers will record the switch\u2019s loopback address instead of the numerous physical interface addresses.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Step 1: Review the switch configuration to verify that a loopback address has been configured.\n\ninterface Loopback12\n ip address x.12.2.2/32\n\nStep 2: Verify that the loopback interface is used as the source address for all MSDP packets generated by the switch.\n\nip msdp peer x.44.2.34 connect-source Loopback12 remote-as nn\n\nIf the switch does not use its loopback address as the source address when originating MSDP traffic, this is a finding.", "FixText": "Configure the switch to use its loopback address is used as the source address when sending MSDP packets.\n\nSW1(config)# ip msdp peer x.44.2.34 connect-source lo12 remote-as nn", "CCI": "SV-111267,V-102311,CCI-000366"}, {"VulnID": "V-237754", "RuleID": "SV-237754r648783_rule", "StigID": "CISC-RT-000236", "Severity": "low", "Cat": "CAT III", "Classification": "", "GroupTitle": "SRG-NET-000512-RTR-000012", "RuleTitle": "The Cisco switch must be configured to advertise a hop limit of at least 32 in Switch Advertisement messages for IPv6 stateless auto-configuration deployments.", "Description": "<VulnDiscussion>The Neighbor Discovery protocol allows a hop limit value to be advertised by routers in a Router Advertisement message being used by hosts instead of the standardized default value. If a very small value was configured and advertised to hosts on the LAN segment, communications would fail due to the hop limit reaching zero before the packets sent by a host reached its destination.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "The Neighbor Discovery protocol allows a hop limit value to be advertised by routers in a Router Advertisement message being used by hosts instead of the standardized default value. If a very small value was configured and advertised to hosts on the LAN segment, communications would fail due to the hop limit reaching zero before the packets sent by a host reached its destination.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the switch configuration to determine if the hop limit has been configured for Router Advertisement messages for all internal interfaces as shown in the example.\n\ninterface Ethernet2/1\n  no switchport\n  ipv6 address 2001::1:0:1/64\n  ipv6 nd hop-limit 32\n  no shutdown \n\ninterface Ethernet2/2\n  no switchport\n  ipv6 address 2001::1:1:1/64\n  ipv6 nd hop-limit 32\n  no shutdown \n\nIf hop-limit has been configured and has not been set to at least 32, it is a finding.", "FixText": "Configure the switch to advertise a hop limit of at least 32 in Router Advertisement messages as shown in the example.\n\nSW1(config)#  interface e2/1 \u2013 2\nSW1(config-if-range)#  ipv6 nd hop-limit 32\nSW1(config-if-range)#  end", "CCI": "CCI-000366"}, {"VulnID": "V-237757", "RuleID": "SV-237757r648788_rule", "StigID": "CISC-RT-000237", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000512-RTR-000013", "RuleTitle": "The Cisco switch must not be configured to use IPv6 Site Local Unicast addresses.", "Description": "<VulnDiscussion>As currently defined, site local addresses are ambiguous and can be present in multiple sites. The address itself does not contain any indication of the site to which it belongs. The use of site-local addresses has the potential to adversely affect network security through leaks, ambiguity, and potential misrouting as documented in section 2 of RFC3879. RFC3879 formally deprecates the IPv6 site-local unicast prefix FEC0::/10 as defined in RFC3513.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "As currently defined, site local addresses are ambiguous and can be present in multiple sites. The address itself does not contain any indication of the site to which it belongs. The use of site-local addresses has the potential to adversely affect network security through leaks, ambiguity, and potential misrouting as documented in section 2 of RFC3879. RFC3879 formally deprecates the IPv6 site-local unicast prefix FEC0::/10 as defined in RFC3513.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the switch configuration to ensure FEC0::/10 IPv6 addresses are not defined. \n\nIf IPv6 Site Local Unicast addresses are defined, this is a finding.", "FixText": "Configure the switch using only authorized IPv6 addresses.", "CCI": "CCI-000366"}, {"VulnID": "V-237760", "RuleID": "SV-237760r648795_rule", "StigID": "CISC-RT-000391", "Severity": "medium", "Cat": "CAT II", "Classification": "", "GroupTitle": "SRG-NET-000512-RTR-000014", "RuleTitle": "The Cisco perimeter switch must be configured to suppress Router Advertisements on all external IPv6-enabled interfaces.", "Description": "<VulnDiscussion>Many of the known attacks in stateless autoconfiguration are defined in RFC 3756 were present in IPv4 ARP attacks. To mitigate these vulnerabilities, links that have no hosts connected such as the interface connecting to external gateways must be configured to suppress router advertisements.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>", "VulnDiscussion": "Many of the known attacks in stateless autoconfiguration are defined in RFC 3756 were present in IPv4 ARP attacks. To mitigate these vulnerabilities, links that have no hosts connected such as the interface connecting to external gateways must be configured to suppress router advertisements.", "FalsePositives": "", "FalseNegatives": "", "Documentable": "false", "Mitigations": "", "SeverityOverrideGuidance": "", "PotentialImpacts": "", "ThirdPartyTools": "", "MitigationControl": "", "Responsibility": "", "IAControls": "", "CheckText": "Review the switch configuration to verify that Router Advertisements are suppressed on all external IPv6-enabled interfaces as shown in the example below.\n\ninterface Ethernet1/1\n  no switchport\n  ipv6 address 2001::1:24:3/64\n  ipv6 nd suppress-ra\n  no shutdown \n\n\nIf the switch is not configured to suppress Router Advertisements on all external IPv6-enabled interfaces, this is a finding.", "FixText": "Configure the switch to suppress Router Advertisements on all external IPv6-enabled interfaces as shown in the example below.\n\nSW1(config)#  interface e1/1\nSW1(config-if-range)#  ipv6 nd suppress-ra\nSW1(config-if-range)#  end", "CCI": "CCI-000366"}]}