{
    "Title": "Unified Endpoint Management Server Security Requirements Guide",
    "Description": "This Security Requirements Guide is published as a tool to improve the security of Department of Defense (DoD) information systems. The requirements are derived from the National Institute of Standards and Technology (NIST) 800-53 and related documents. Comments or proposed revisions to this document should be sent via email to the following address: disa.stig_spt@mail.mil.",
    "Version": "1",
    "Release": "1 ",
    "BenchmarkDate": "20 Nov 2020",
    "ReleaseInfo": "Release: 1 Benchmark Date: 20 Nov 2020",
    "Source": "STIG.DOD.MIL",
    "Notice": "terms-of-use",
    "Rules": [
        {
            "VulnID": "V-234275",
            "RuleID": "SV-234275r617395_rule",
            "StigID": "SRG-APP-000001-UEM-000001",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000001",
            "RuleTitle": "The UEM server must limit the number of concurrent sessions per privileged user account to three or less concurrent sessions.",
            "Description": "<VulnDiscussion>Application management includes the ability to control the number of users and user sessions that utilize an application. Limiting the number of allowed users and sessions per user is helpful in limiting risks related to DoS attacks.\n\nThis requirement may be met via the application or by utilizing information system session control provided by a web server with specialized session management capabilities. If it has been specified that this requirement will be handled by the application, the capability to limit the maximum number of concurrent single user sessions must be designed and built into the application. \n\nThis requirement addresses concurrent sessions for information system accounts and does not address concurrent sessions by single users via multiple system accounts. The maximum number of concurrent sessions must be defined based upon mission needs and the operational environment for each system. \n\nSatisfies:FMT_SMF.1.1(2) b \nReference:PP-MDM-431010</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Application management includes the ability to control the number of users and user sessions that utilize an application. Limiting the number of allowed users and sessions per user is helpful in limiting risks related to DoS attacks.\n\nThis requirement may be met via the application or by utilizing information system session control provided by a web server with specialized session management capabilities. If it has been specified that this requirement will be handled by the application, the capability to limit the maximum number of concurrent single user sessions must be designed and built into the application. \n\nThis requirement addresses concurrent sessions for information system accounts and does not address concurrent sessions by single users via multiple system accounts. The maximum number of concurrent sessions must be defined based upon mission needs and the operational environment for each system. \n\nSatisfies:FMT_SMF.1.1(2) b \nReference:PP-MDM-431010",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server limits the number of concurrent sessions per privileged user account to three or less concurrent sessions.\n\nIf the UEM server does not limit the number of concurrent sessions per privileged user account to three or less concurrent sessions, this is a finding.",
            "FixText": "Configure the UEM server to limit the number of concurrent sessions per privileged user account to three or less concurrent sessions.",
            "CCI": "CCI-000054"
        },
        {
            "VulnID": "V-234276",
            "RuleID": "SV-234276r617355_rule",
            "StigID": "SRG-APP-000002-UEM-000002",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000002",
            "RuleTitle": "The UEM server must conceal, via the session lock, information previously visible on the display with a publicly viewable image.",
            "Description": "<VulnDiscussion>A session time-out lock is a temporary action taken when a user stops work and moves away from the immediate physical vicinity of the information system, but does not log out because of the temporary nature of the absence. \n\nThe session lock is implemented at the point where session activity can be determined. This is typically at the operating system level, but may be at the application level. \n\nWhen the application design specifies the application rather than the operating system will determine when to lock the session, the application session lock event must include an obfuscation of the display screen to prevent other users from reading what was previously displayed. \n\nPublicly viewable images can include static or dynamic images, for example, patterns used with screen savers, photographic images, solid colors, a clock, a battery life indicator, or a blank screen, with the additional caveat that none of the images convey sensitive information. \n\nSatisfies:FMT_SMF.1.1(2) b \nReference:PP-MDM-431011</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "A session time-out lock is a temporary action taken when a user stops work and moves away from the immediate physical vicinity of the information system, but does not log out because of the temporary nature of the absence. \n\nThe session lock is implemented at the point where session activity can be determined. This is typically at the operating system level, but may be at the application level. \n\nWhen the application design specifies the application rather than the operating system will determine when to lock the session, the application session lock event must include an obfuscation of the display screen to prevent other users from reading what was previously displayed. \n\nPublicly viewable images can include static or dynamic images, for example, patterns used with screen savers, photographic images, solid colors, a clock, a battery life indicator, or a blank screen, with the additional caveat that none of the images convey sensitive information. \n\nSatisfies:FMT_SMF.1.1(2) b \nReference:PP-MDM-431011",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server conceals, via the session lock, information previously visible on the display with a publicly viewable image.\n\nIf the UEM server does not conceal via the session lock information previously visible on the display with a publicly viewable image, this is a finding.",
            "FixText": "Configure the UEM server to conceal via the session lock information previously visible on the display with a publicly viewable image.",
            "CCI": "CCI-000060"
        },
        {
            "VulnID": "V-234277",
            "RuleID": "SV-234277r617355_rule",
            "StigID": "SRG-APP-000003-UEM-000003",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000003",
            "RuleTitle": "The UEM server must initiate a session lock after a 15-minute period of inactivity.",
            "Description": "<VulnDiscussion>A session time-out lock is a temporary action taken when a user stops work and moves away from the immediate physical vicinity of the information system, but does not log out because of the temporary nature of the absence. Rather than relying on the user to manually lock their application session prior to vacating the vicinity, applications need to be able to identify when a user's application session has idled and take action to initiate the session lock.\n\nThe session lock is implemented at the point where session activity can be determined and/or controlled. This is typically at the operating system level and results in a system lock, but may be at the application level where the application interface window is secured instead. \n\nSatisfies:FMT_SMF.1.1(2) c.8 \nReference:PP-MDM-411047</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "A session time-out lock is a temporary action taken when a user stops work and moves away from the immediate physical vicinity of the information system, but does not log out because of the temporary nature of the absence. Rather than relying on the user to manually lock their application session prior to vacating the vicinity, applications need to be able to identify when a user's application session has idled and take action to initiate the session lock.\n\nThe session lock is implemented at the point where session activity can be determined and/or controlled. This is typically at the operating system level and results in a system lock, but may be at the application level where the application interface window is secured instead. \n\nSatisfies:FMT_SMF.1.1(2) c.8 \nReference:PP-MDM-411047",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server initiates a session lock after a 15-minute period of inactivity.\n\nIf the UEM server does not initiate a session lock after a 15-minute period of inactivity, this is a finding.",
            "FixText": "Configure the UEM server to initiate a session lock after a 15-minute period of inactivity.",
            "CCI": "CCI-000057"
        },
        {
            "VulnID": "V-234278",
            "RuleID": "SV-234278r617355_rule",
            "StigID": "SRG-APP-000004-UEM-000004",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000004",
            "RuleTitle": "The MDM server must provide the capability for users to directly initiate a session lock.",
            "Description": "<VulnDiscussion>A session lock is a temporary action taken when a user stops work and moves away from the immediate physical vicinity of the information system, but does not want to log out because of the temporary nature of the absence. \n\nThe session lock is implemented at the point where session activity can be determined. This is typically at the operating system level, but may be at the application level. Rather than be forced to wait for a period of time to expire before the user session can be locked, applications need to provide users with the ability to manually invoke a session lock so users may secure their application should the need arise for them to temporarily vacate the immediate physical vicinity. \n\nSatisfies:FMT_SMF.1.1(2) b \nReference:PP-MDM-431012</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "A session lock is a temporary action taken when a user stops work and moves away from the immediate physical vicinity of the information system, but does not want to log out because of the temporary nature of the absence. \n\nThe session lock is implemented at the point where session activity can be determined. This is typically at the operating system level, but may be at the application level. Rather than be forced to wait for a period of time to expire before the user session can be locked, applications need to provide users with the ability to manually invoke a session lock so users may secure their application should the need arise for them to temporarily vacate the immediate physical vicinity. \n\nSatisfies:FMT_SMF.1.1(2) b \nReference:PP-MDM-431012",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server provides the capability for users to directly initiate a session lock.\n\nIf the UEM server does not provide the capability for users to directly initiate a session lock, this is a finding.",
            "FixText": "Configure the UEM server to provide the capability for users to directly initiate a session lock.",
            "CCI": "CCI-000058"
        },
        {
            "VulnID": "V-234279",
            "RuleID": "SV-234279r617355_rule",
            "StigID": "SRG-APP-000005-UEM-000005",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000005",
            "RuleTitle": "The MDM server must retain the session lock until the user reestablishes access using established identification and authentication procedures.",
            "Description": "<VulnDiscussion>A session lock is a temporary action taken when a user stops work and moves away from the immediate physical vicinity of the information system, but does not want to log out because of the temporary nature of the absence. \n\nThe session lock is implemented at the point where session activity can be determined. This is typically determined and performed at the operating system level, but in some instances it may be at the application level. \n\nRegardless of where the session lock is determined and implemented, once invoked the session lock must remain in place until the user re-authenticates. No other system or application activity aside from re-authentication will unlock the system. \n\nSatisfies:FMT_SMF.1.1(2) b \nReference:PP-MDM-431013</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "A session lock is a temporary action taken when a user stops work and moves away from the immediate physical vicinity of the information system, but does not want to log out because of the temporary nature of the absence. \n\nThe session lock is implemented at the point where session activity can be determined. This is typically determined and performed at the operating system level, but in some instances it may be at the application level. \n\nRegardless of where the session lock is determined and implemented, once invoked the session lock must remain in place until the user re-authenticates. No other system or application activity aside from re-authentication will unlock the system. \n\nSatisfies:FMT_SMF.1.1(2) b \nReference:PP-MDM-431013",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server retains the session lock until the user reestablishes access using established identification and authentication procedures.\n\nIf the UEM server does not retain the session lock until the user reestablishes access using established identification and authentication procedures, this is a finding.",
            "FixText": "Configure the MDM server to retain the session lock until the user reestablishes access using established identification and authentication procedures.",
            "CCI": "CCI-000056"
        },
        {
            "VulnID": "V-234283",
            "RuleID": "SV-234283r617355_rule",
            "StigID": "SRG-APP-000014-UEM-000009",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000014",
            "RuleTitle": "The UEM server must use TLS 1.2, or higher, to protect the confidentiality of sensitive data during electronic dissemination using remote access.",
            "Description": "<VulnDiscussion>Using older unauthorized versions or incorrectly configuring protocol negotiation makes the gateway vulnerable to known and unknown attacks that exploit vulnerabilities in this protocol.\n\nThis requirement applies to Transport Layer Security (TLS) gateways (also known as Secure Sockets Layer [SSL] gateways), web servers, and web applications and is not applicable to virtual private network (VPN) devices. Application protocols such as HTTPS and DNSSEC use TLS as the underlying security protocol and thus are in scope for this requirement. NIST SP 800-52 provides guidance for client negotiation on either DoD-only or on public-facing servers. \n\nSatisfies:FCS_TLSC_EXT.1.1 \nReference:PP-MDM-412061</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Using older unauthorized versions or incorrectly configuring protocol negotiation makes the gateway vulnerable to known and unknown attacks that exploit vulnerabilities in this protocol.\n\nThis requirement applies to Transport Layer Security (TLS) gateways (also known as Secure Sockets Layer [SSL] gateways), web servers, and web applications and is not applicable to virtual private network (VPN) devices. Application protocols such as HTTPS and DNSSEC use TLS as the underlying security protocol and thus are in scope for this requirement. NIST SP 800-52 provides guidance for client negotiation on either DoD-only or on public-facing servers. \n\nSatisfies:FCS_TLSC_EXT.1.1 \nReference:PP-MDM-412061",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server uses TLS 1.2, at a minimum, to protect the confidentiality of sensitive data during electronic dissemination using remote access.\n\nIf the UEM server does not use TLS 1.2, at a minimum, to protect the confidentiality of sensitive data during electronic dissemination using remote access, this is a finding.",
            "FixText": "Configure the UEM server to use TLS 1.2, at a minimum, to protect the confidentiality of sensitive data during electronic dissemination using remote access.",
            "CCI": "CCI-000068"
        },
        {
            "VulnID": "V-234286",
            "RuleID": "SV-234286r617355_rule",
            "StigID": "SRG-APP-000023-UEM-000012",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000023",
            "RuleTitle": "The UEM server must provide automated mechanisms for supporting account management functions.",
            "Description": "<VulnDiscussion>Enterprise environments make application account management challenging and complex. A manual process for account management functions adds the risk of a potential oversight or other error. \n\nA comprehensive application account management process that includes automation helps to ensure accounts designated as requiring attention are consistently and promptly addressed. Examples include, but are not limited to, using automation to take action on multiple accounts designated as inactive, suspended, or terminated or by disabling accounts located in non-centralized account stores such as multiple servers. This requirement applies to all account types, including individual/user, shared, group, system, guest/anonymous, emergency, developer/manufacturer/vendor, temporary, and service.\n\nThe application must be configured to automatically provide account management functions and these functions must immediately enforce the organization's current account policy. The automated mechanisms may reside within the application itself or may be offered by the operating system or other infrastructure providing automated account management capabilities. Automated mechanisms may be comprised of differing technologies that when placed together contain an overall automated mechanism supporting an organization's automated account management requirements.\n\nAccount management functions include: assignment of group or role membership; identifying account type; specifying user access authorizations (i.e., privileges); account removal, update, or termination; and administrative alerts. The use of automated mechanisms can include, for example: using email or text messaging to automatically notify account managers when users are terminated or transferred; using the information system to monitor account usage; and using automated telephonic notification to report atypical system account usage.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Enterprise environments make application account management challenging and complex. A manual process for account management functions adds the risk of a potential oversight or other error. \n\nA comprehensive application account management process that includes automation helps to ensure accounts designated as requiring attention are consistently and promptly addressed. Examples include, but are not limited to, using automation to take action on multiple accounts designated as inactive, suspended, or terminated or by disabling accounts located in non-centralized account stores such as multiple servers. This requirement applies to all account types, including individual/user, shared, group, system, guest/anonymous, emergency, developer/manufacturer/vendor, temporary, and service.\n\nThe application must be configured to automatically provide account management functions and these functions must immediately enforce the organization's current account policy. The automated mechanisms may reside within the application itself or may be offered by the operating system or other infrastructure providing automated account management capabilities. Automated mechanisms may be comprised of differing technologies that when placed together contain an overall automated mechanism supporting an organization's automated account management requirements.\n\nAccount management functions include: assignment of group or role membership; identifying account type; specifying user access authorizations (i.e., privileges); account removal, update, or termination; and administrative alerts. The use of automated mechanisms can include, for example: using email or text messaging to automatically notify account managers when users are terminated or transferred; using the information system to monitor account usage; and using automated telephonic notification to report atypical system account usage.",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Requirement is Not Applicable when UEM server is configured to use DoD Central Directory Service for administrator account authentication.\n\nVerify the UEM server provides automated mechanisms for supporting account management functions.\n\nIf the UEM server does not provide automated mechanisms for supporting account management functions, this is a finding.",
            "FixText": "Configure the UEM server to provide automated mechanisms for supporting account management functions.",
            "CCI": "CCI-000015"
        },
        {
            "VulnID": "V-234287",
            "RuleID": "SV-234287r617355_rule",
            "StigID": "SRG-APP-000024-UEM-000013",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000024",
            "RuleTitle": "The UEM server must automatically remove or disable temporary user accounts after 72 hours if supported by the UEM server.",
            "Description": "<VulnDiscussion>If temporary user accounts remain active when no longer needed or for an excessive period, these accounts may be used to gain unauthorized access. To mitigate this risk, automated termination of all temporary user accounts must be set upon account creation.\n\nTemporary user accounts are established as part of normal account activation procedures when there is a need for short-term accounts without the demand for immediacy in account activation. \n\nIf temporary user accounts are used, the application must be configured to automatically terminate these types of accounts after a DoD-defined time period of 72 hours.\n\nTo address access requirements, many application developers choose to integrate their applications with enterprise-level authentication/access mechanisms meeting or exceeding access control policy requirements. Such integration allows the application developer to off-load those access control functions and focus on core application features and functionality.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "If temporary user accounts remain active when no longer needed or for an excessive period, these accounts may be used to gain unauthorized access. To mitigate this risk, automated termination of all temporary user accounts must be set upon account creation.\n\nTemporary user accounts are established as part of normal account activation procedures when there is a need for short-term accounts without the demand for immediacy in account activation. \n\nIf temporary user accounts are used, the application must be configured to automatically terminate these types of accounts after a DoD-defined time period of 72 hours.\n\nTo address access requirements, many application developers choose to integrate their applications with enterprise-level authentication/access mechanisms meeting or exceeding access control policy requirements. Such integration allows the application developer to off-load those access control functions and focus on core application features and functionality.",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Requirement is Not Applicable when the UEM server is configured to use DoD Central Directory Service for administrator account authentication.\n\nVerify the UEM server automatically removes or disables temporary user accounts after 72 hours, if supported by the UEM server.\n\nIf the UEM server does not automatically remove or disable temporary user accounts after 72 hours, if supported by the UEM server, this is a finding.",
            "FixText": "Configure the UEM server to automatically remove or disable temporary user accounts after 72 hours, if supported by the UEM server.",
            "CCI": "CCI-000016"
        },
        {
            "VulnID": "V-234288",
            "RuleID": "SV-234288r617355_rule",
            "StigID": "SRG-APP-000025-UEM-000014",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000025",
            "RuleTitle": "The UEM server must automatically disable accounts after a 35-day period of account inactivity.",
            "Description": "<VulnDiscussion>Attackers that are able to exploit an inactive account can potentially obtain and maintain undetected access to an application. Owners of inactive accounts will not notice if unauthorized access to their user account has been obtained. Applications need to track periods of user inactivity and disable accounts after 35 days of inactivity. Such a process greatly reduces the risk that accounts will be hijacked, leading to a data compromise.\n\nTo address access requirements, many application developers choose to integrate their applications with enterprise-level authentication/access mechanisms that meet or exceed access control policy requirements. Such integration allows the application developer to off-load those access control functions and focus on core application features and functionality.\n\nThis policy does not apply to either emergency accounts or infrequently used accounts. Infrequently used accounts are local login administrator accounts used by system administrators when network or normal logon/access is not available. Emergency accounts are administrator accounts created in response to crisis situations. \n\nSatisfies:FMT_SMF.1(2)b. \nReference:PP-MDM-431027</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Attackers that are able to exploit an inactive account can potentially obtain and maintain undetected access to an application. Owners of inactive accounts will not notice if unauthorized access to their user account has been obtained. Applications need to track periods of user inactivity and disable accounts after 35 days of inactivity. Such a process greatly reduces the risk that accounts will be hijacked, leading to a data compromise.\n\nTo address access requirements, many application developers choose to integrate their applications with enterprise-level authentication/access mechanisms that meet or exceed access control policy requirements. Such integration allows the application developer to off-load those access control functions and focus on core application features and functionality.\n\nThis policy does not apply to either emergency accounts or infrequently used accounts. Infrequently used accounts are local login administrator accounts used by system administrators when network or normal logon/access is not available. Emergency accounts are administrator accounts created in response to crisis situations. \n\nSatisfies:FMT_SMF.1(2)b. \nReference:PP-MDM-431027",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Requirement is Not Applicable when the UEM server is configured to use DoD Central Directory Service for administrator account authentication.\n\nVerify the UEM server automatically disables accounts after a 35-day period of account inactivity.\n\nIf the UEM server does not automatically disable accounts after a 35-day period of account inactivity, this is a finding.",
            "FixText": "Configure the UEM server to automatically disable accounts after a 35-day period of account inactivity.",
            "CCI": "CCI-000017"
        },
        {
            "VulnID": "V-234289",
            "RuleID": "SV-234289r617355_rule",
            "StigID": "SRG-APP-000026-UEM-000015",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000026",
            "RuleTitle": "The UEM server must automatically audit account creation.",
            "Description": "<VulnDiscussion>Once an attacker establishes access to a system, the attacker often attempts to create a persistent method of re-establishing access. One way to accomplish this is for the attacker to simply create a new account. Auditing of account creation is one method for mitigating this risk. A comprehensive account management process will ensure an audit trail documents the creation of application user accounts and, as required, notifies administrators and/or application owners exists. Such a process greatly reduces the risk that accounts will be surreptitiously created and provides logging that can be used for forensic purposes. \n\nTo address access requirements, many application developers choose to integrate their applications with enterprise-level authentication/access/auditing mechanisms meeting or exceeding access control policy requirements. Such integration allows the application developer to off-load those access control functions and focus on core application features and functionality. \n\nSatisfies:FAU_ALT_EXT.1.1, FAU_GEN.1.1(1), FMT_SMF.1.1(2)c.8 \nReference:PP-MDM-411065, PP-MDM-412000</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Once an attacker establishes access to a system, the attacker often attempts to create a persistent method of re-establishing access. One way to accomplish this is for the attacker to simply create a new account. Auditing of account creation is one method for mitigating this risk. A comprehensive account management process will ensure an audit trail documents the creation of application user accounts and, as required, notifies administrators and/or application owners exists. Such a process greatly reduces the risk that accounts will be surreptitiously created and provides logging that can be used for forensic purposes. \n\nTo address access requirements, many application developers choose to integrate their applications with enterprise-level authentication/access/auditing mechanisms meeting or exceeding access control policy requirements. Such integration allows the application developer to off-load those access control functions and focus on core application features and functionality. \n\nSatisfies:FAU_ALT_EXT.1.1, FAU_GEN.1.1(1), FMT_SMF.1.1(2)c.8 \nReference:PP-MDM-411065, PP-MDM-412000",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Requirement is Not Applicable when UEM server is configured to use DoD Central Directory Service for administrator account authentication.\n\nVerify the UEM server automatically audits account creation.\n\nIf the UEM server does not automatically audit account creation, this is a finding.",
            "FixText": "Configure the UEM server to automatically audit account creation.",
            "CCI": "CCI-000018"
        },
        {
            "VulnID": "V-234290",
            "RuleID": "SV-234290r617355_rule",
            "StigID": "SRG-APP-000027-UEM-000016",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000027",
            "RuleTitle": "The UEM server must automatically audit account modification.",
            "Description": "<VulnDiscussion>Once an attacker establishes access to a system, the attacker often attempts to create a persistent method of re-establishing access. One way to accomplish this is for the attacker to simply modify an existing account. Auditing of account creation is one method for mitigating this risk. A comprehensive account management process will ensure an audit trail documents the creation of application user accounts and, as required, notifies administrators and/or application owners exists. Such a process greatly reduces the risk that accounts will be surreptitiously created and provides logging that can be used for forensic purposes. \n\nTo address access requirements, many application developers choose to integrate their applications with enterprise-level authentication/access/auditing mechanisms meeting or exceeding access control policy requirements. Such integration allows the application developer to off-load those access control functions and focus on core application features and functionality. \n\nSatisfies:FAU_ALT_EXT.1.1, FAU_GEN.1.1(1), FMT_SMF.1.1(2)c.8 \nReference:PP-MDM-411065, PP-MDM-412000</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Once an attacker establishes access to a system, the attacker often attempts to create a persistent method of re-establishing access. One way to accomplish this is for the attacker to simply modify an existing account. Auditing of account creation is one method for mitigating this risk. A comprehensive account management process will ensure an audit trail documents the creation of application user accounts and, as required, notifies administrators and/or application owners exists. Such a process greatly reduces the risk that accounts will be surreptitiously created and provides logging that can be used for forensic purposes. \n\nTo address access requirements, many application developers choose to integrate their applications with enterprise-level authentication/access/auditing mechanisms meeting or exceeding access control policy requirements. Such integration allows the application developer to off-load those access control functions and focus on core application features and functionality. \n\nSatisfies:FAU_ALT_EXT.1.1, FAU_GEN.1.1(1), FMT_SMF.1.1(2)c.8 \nReference:PP-MDM-411065, PP-MDM-412000",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Requirement is Not Applicable when UEM server is configured to use DoD Central Directory Service for administrator account authentication.\n\nVerify the UEM server automatically audits account modification.\n\nIf the UEM server does not automatically audit account modification, this is a finding.",
            "FixText": "Configure the UEM server to automatically audit account modification.",
            "CCI": "CCI-001403"
        },
        {
            "VulnID": "V-234291",
            "RuleID": "SV-234291r617355_rule",
            "StigID": "SRG-APP-000028-UEM-000017",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000028",
            "RuleTitle": "The UEM server must automatically audit account disabling actions.",
            "Description": "<VulnDiscussion>When application accounts are disabled, user accessibility is affected. Once an attacker establishes access to an application, the attacker often attempts to disable authorized accounts to disrupt services or prevent the implementation of countermeasures. Auditing account disabling actions provides logging that can be used for forensic purposes.\n\nTo address access requirements, many application developers choose to integrate their applications with enterprise-level authentication/access/audit mechanisms meeting or exceeding access control policy requirements. Such integration allows the application developer to off-load those access control functions and focus on core application features and functionality. \n\nSatisfies:FAU_ALT_EXT.1.1, FAU_GEN.1.1(1), FMT_SMF.1.1(2)c.8 \nReference:PP-MDM-411065, PP-MDM-412000</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "When application accounts are disabled, user accessibility is affected. Once an attacker establishes access to an application, the attacker often attempts to disable authorized accounts to disrupt services or prevent the implementation of countermeasures. Auditing account disabling actions provides logging that can be used for forensic purposes.\n\nTo address access requirements, many application developers choose to integrate their applications with enterprise-level authentication/access/audit mechanisms meeting or exceeding access control policy requirements. Such integration allows the application developer to off-load those access control functions and focus on core application features and functionality. \n\nSatisfies:FAU_ALT_EXT.1.1, FAU_GEN.1.1(1), FMT_SMF.1.1(2)c.8 \nReference:PP-MDM-411065, PP-MDM-412000",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Requirement is Not Applicable when the UEM server is configured to use DoD Central Directory Service for administrator account authentication.\n\nVerify the UEM server automatically audits account disabling actions.\n\nIf the UEM server does not automatically audit account disabling actions, this is a finding.",
            "FixText": "Configure the UEM server to automatically audit account disabling actions.",
            "CCI": "CCI-001404"
        },
        {
            "VulnID": "V-234292",
            "RuleID": "SV-234292r617355_rule",
            "StigID": "SRG-APP-000029-UEM-000018",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000029",
            "RuleTitle": "The UEM server must automatically audit account removal actions.",
            "Description": "<VulnDiscussion>When application accounts are removed, user accessibility is affected. Once an attacker establishes access to an application, the attacker often attempts to remove authorized accounts to disrupt services or prevent the implementation of countermeasures. Auditing account removal actions provides logging that can be used for forensic purposes.\n\nTo address access requirements, many application developers choose to integrate their applications with enterprise-level authentication/access/audit mechanisms meeting or exceeding access control policy requirements. Such integration allows the application developer to off-load those access control functions and focus on core application features and functionality. \n\nSatisfies:FAU_ALT_EXT.1.1, FAU_GEN.1.1(1), FMT_SMF.1.1(2)c.8 \nReference:PP-MDM-411065, PP-MDM-412000</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "When application accounts are removed, user accessibility is affected. Once an attacker establishes access to an application, the attacker often attempts to remove authorized accounts to disrupt services or prevent the implementation of countermeasures. Auditing account removal actions provides logging that can be used for forensic purposes.\n\nTo address access requirements, many application developers choose to integrate their applications with enterprise-level authentication/access/audit mechanisms meeting or exceeding access control policy requirements. Such integration allows the application developer to off-load those access control functions and focus on core application features and functionality. \n\nSatisfies:FAU_ALT_EXT.1.1, FAU_GEN.1.1(1), FMT_SMF.1.1(2)c.8 \nReference:PP-MDM-411065, PP-MDM-412000",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Requirement is Not Applicable when the UEM server is configured to use DoD Central Directory Service for administrator account authentication.\n\nVerify the UEM server automatically audits account removal actions.\n\nIf the UEM server does not automatically audit account removal actions, this is a finding.",
            "FixText": "Configure the UEM server to automatically audit account removal actions.",
            "CCI": "CCI-001405"
        },
        {
            "VulnID": "V-234310",
            "RuleID": "SV-234310r617396_rule",
            "StigID": "SRG-APP-000065-UEM-000036",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000065",
            "RuleTitle": "The UEM server must enforce the limit of three consecutive invalid logon attempts by a user during a 15-minute time period.",
            "Description": "<VulnDiscussion>By limiting the number of failed login attempts, the risk of unauthorized system access via user password guessing, otherwise known as brute forcing, is reduced. Limits are imposed by locking the account. \n\nSatisfies:FMT_SMF.1(2)b. \nReference:PP-MDM-431028</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "By limiting the number of failed login attempts, the risk of unauthorized system access via user password guessing, otherwise known as brute forcing, is reduced. Limits are imposed by locking the account. \n\nSatisfies:FMT_SMF.1(2)b. \nReference:PP-MDM-431028",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Requirement is Not Applicable when the UEM server is configured to use DoD Central Directory Service for administrator account authentication.\n\nVerify the UEM server enforces the limit of three consecutive invalid logon attempts by a user during a 15-minute time period.\n\nIf the UEM server does not enforce the limit of three consecutive invalid logon attempts by a user during a 15-minute time period, this is a finding.",
            "FixText": "Configure the UEM server to enforce the limit of three consecutive invalid logon attempts by a user during a 15-minute time period.",
            "CCI": "CCI-000044"
        },
        {
            "VulnID": "V-234311",
            "RuleID": "SV-234311r617355_rule",
            "StigID": "SRG-APP-000068-UEM-000037",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000068",
            "RuleTitle": "The UEM server must display the Standard Mandatory DoD Notice and Consent Banner before granting access to the application.",
            "Description": "<VulnDiscussion>Display of the DoD-approved use notification before granting access to the application ensures privacy and security notification verbiage used is consistent with applicable federal laws, Executive Orders, directives, policies, regulations, standards, and guidance.\n\nSystem use notifications are required only for access via logon interfaces with human users and are not required when such human interfaces do not exist.\n\nThe banner must be formatted in accordance with DTM-08-060. Use the following verbiage for applications that can accommodate banners of 1300 characters:\n\n\"You are accessing a U.S. Government (USG) Information System (IS) that is provided for USG-authorized use only.\n\nBy using this IS (which includes any device attached to this IS), you consent to the following conditions:\n\n-The USG routinely intercepts and monitors communications on this IS for purposes including, but not limited to, penetration testing, COMSEC monitoring, network operations and defense, personnel misconduct (PM), law enforcement (LE), and counterintelligence (CI) investigations.\n\n-At any time, the USG may inspect and seize data stored on this IS.\n\n-Communications using, or data stored on, this IS are not private, are subject to routine monitoring, interception, and search, and may be disclosed or used for any USG-authorized purpose.\n\n-This IS includes security measures (e.g., authentication and access controls) to protect USG interests--not for your personal benefit or privacy.\n\n-Notwithstanding the above, using this IS does not constitute consent to PM, LE or CI investigative searching or monitoring of the content of privileged communications, or work product, related to personal representation or services by attorneys, psychotherapists, or clergy, and their assistants. Such communications and work product are private and confidential. See User Agreement for details.\"\n\nUse the following verbiage for operating systems that have severe limitations on the number of characters that can be displayed in the banner:\n\n\"I've read & consent to terms in IS user agreem't.\" \n\nSatisfies:FTA_TAB.1.1, FMT_SMF.1.1(2) c.2 \nReference:PP-MDM-411056</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Display of the DoD-approved use notification before granting access to the application ensures privacy and security notification verbiage used is consistent with applicable federal laws, Executive Orders, directives, policies, regulations, standards, and guidance.\n\nSystem use notifications are required only for access via logon interfaces with human users and are not required when such human interfaces do not exist.\n\nThe banner must be formatted in accordance with DTM-08-060. Use the following verbiage for applications that can accommodate banners of 1300 characters:\n\n\"You are accessing a U.S. Government (USG) Information System (IS) that is provided for USG-authorized use only.\n\nBy using this IS (which includes any device attached to this IS), you consent to the following conditions:\n\n-The USG routinely intercepts and monitors communications on this IS for purposes including, but not limited to, penetration testing, COMSEC monitoring, network operations and defense, personnel misconduct (PM), law enforcement (LE), and counterintelligence (CI) investigations.\n\n-At any time, the USG may inspect and seize data stored on this IS.\n\n-Communications using, or data stored on, this IS are not private, are subject to routine monitoring, interception, and search, and may be disclosed or used for any USG-authorized purpose.\n\n-This IS includes security measures (e.g., authentication and access controls) to protect USG interests--not for your personal benefit or privacy.\n\n-Notwithstanding the above, using this IS does not constitute consent to PM, LE or CI investigative searching or monitoring of the content of privileged communications, or work product, related to personal representation or services by attorneys, psychotherapists, or clergy, and their assistants. Such communications and work product are private and confidential. See User Agreement for details.\"\n\nUse the following verbiage for operating systems that have severe limitations on the number of characters that can be displayed in the banner:\n\n\"I've read & consent to terms in IS user agreem't.\" \n\nSatisfies:FTA_TAB.1.1, FMT_SMF.1.1(2) c.2 \nReference:PP-MDM-411056",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server displays the Standard Mandatory DoD Notice and Consent Banner before granting access to the application.\n\nIf the UEM server does not display the Standard Mandatory DoD Notice and Consent Banner before granting access to the application, this is a finding.",
            "FixText": "Configure the UEM server to display the Standard Mandatory DoD Notice and Consent Banner before granting access to the application.",
            "CCI": "CCI-000048"
        },
        {
            "VulnID": "V-234312",
            "RuleID": "SV-234312r617355_rule",
            "StigID": "SRG-APP-000069-UEM-000038",
            "Severity": "low",
            "Cat": "CAT III",
            "Classification": "",
            "GroupTitle": "SRG-APP-000069",
            "RuleTitle": "The UEM server must retain the access banner until the user acknowledges acceptance of the access conditions.",
            "Description": "<VulnDiscussion>The banner must be acknowledged by the user prior to allowing the user access to the application. This provides assurance that the user has seen the message and accepted the conditions for access. If the consent banner is not acknowledged by the user, DoD will not be in compliance with system use notifications required by law. \n\nTo establish acceptance of the application usage policy, a click-through banner at application logon is required. The application must prevent further activity until the user executes a positive action to manifest agreement by clicking on a box indicating \"OK\". \n\nSatisfies:FTA_TAB.1.1 \nReference:PP-MDM-413003</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "The banner must be acknowledged by the user prior to allowing the user access to the application. This provides assurance that the user has seen the message and accepted the conditions for access. If the consent banner is not acknowledged by the user, DoD will not be in compliance with system use notifications required by law. \n\nTo establish acceptance of the application usage policy, a click-through banner at application logon is required. The application must prevent further activity until the user executes a positive action to manifest agreement by clicking on a box indicating \"OK\". \n\nSatisfies:FTA_TAB.1.1 \nReference:PP-MDM-413003",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server retains the access banner until the user acknowledges acceptance of the access conditions.\n\nIf the UEM server does not retain the access banner until the user acknowledges acceptance of the access conditions, this is a finding.",
            "FixText": "Configure the UEM server to retain the access banner until the user acknowledges acceptance of the access conditions.",
            "CCI": "CCI-000050"
        },
        {
            "VulnID": "V-234315",
            "RuleID": "SV-234315r617355_rule",
            "StigID": "SRG-APP-000075-UEM-000041",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000075",
            "RuleTitle": "The UEM server must notify the user, upon successful logon (access) to the application, of the date and time of the last logon (access).",
            "Description": "<VulnDiscussion>Users need to be aware of activity that occurs regarding their application account. Providing users with information regarding the date and time of their last successful login allows the user to determine if any unauthorized activity has occurred and gives them an opportunity to notify administrators.\n\nThis requirement is intended to cover both traditional interactive logons to information systems and general accesses to information systems that occur in other types of architectural configurations (e.g., service-oriented architectures).</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Users need to be aware of activity that occurs regarding their application account. Providing users with information regarding the date and time of their last successful login allows the user to determine if any unauthorized activity has occurred and gives them an opportunity to notify administrators.\n\nThis requirement is intended to cover both traditional interactive logons to information systems and general accesses to information systems that occur in other types of architectural configurations (e.g., service-oriented architectures).",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server notifies the user, upon successful logon (access) to the application, of the date and time of the last logon (access).\n\nIf the UEM server does not notify the user, upon successful logon (access) to the application, of the date and time of the last logon (access), this is a finding.",
            "FixText": "Configure the UEM server to notify the user, upon successful logon (access) to the application, of the date and time of the last logon (access).",
            "CCI": "CCI-000052"
        },
        {
            "VulnID": "V-234316",
            "RuleID": "SV-234316r617355_rule",
            "StigID": "SRG-APP-000076-UEM-000042",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000076",
            "RuleTitle": "The UEM server must notify the user, upon successful logon (access), of the number of unsuccessful logon (access) attempts since the last successful logon (access).",
            "Description": "<VulnDiscussion>Users need to be aware of activity that occurs regarding their application account. Providing users with information regarding the number of unsuccessful attempts made to log in to their account allows the user to determine if any unauthorized activity has occurred and gives them an opportunity to notify administrators.\n\nThis requirement is intended to cover both traditional logons to information systems and general accesses to information systems that occur in other types of architectural configurations (e.g., service-oriented architectures).</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Users need to be aware of activity that occurs regarding their application account. Providing users with information regarding the number of unsuccessful attempts made to log in to their account allows the user to determine if any unauthorized activity has occurred and gives them an opportunity to notify administrators.\n\nThis requirement is intended to cover both traditional logons to information systems and general accesses to information systems that occur in other types of architectural configurations (e.g., service-oriented architectures).",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server notifies the user, upon successful logon (access), of the number of unsuccessful logon (access) attempts since the last successful logon (access).\n\nIf the UEM server does not notify the user, upon successful logon (access), of the number of unsuccessful logon (access) attempts since the last successful logon (access), this is a finding.",
            "FixText": "Configure the UEM server to notify the user, upon successful logon (access), of the number of unsuccessful logon (access) attempts since the last successful logon (access).",
            "CCI": "CCI-000053"
        },
        {
            "VulnID": "V-234318",
            "RuleID": "SV-234318r617355_rule",
            "StigID": "SRG-APP-000080-UEM-000044",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000080",
            "RuleTitle": "The UEM server must protect against an individual (or process acting on behalf of an individual) falsely denying having performed organization-defined actions to be covered by non-repudiation.",
            "Description": "<VulnDiscussion>Without non-repudiation, it is impossible to positively attribute an action to an individual (or process acting on behalf of an individual). \n\nNon-repudiation services can be used to determine if information originated from a particular individual, or if an individual took specific actions (e.g., sending an email, signing a contract, approving a procurement request) or received specific information. Non-repudiation protects individuals against later claims by an author of not having authored a particular document, a sender of not having transmitted a message, a receiver of not having received a message, or a signatory of not having signed a document. The application will be configured to provide non-repudiation services for an organization-defined set of commands that are used by the user (or processes action on behalf of the user).\n\nDoD PKI provides for non-repudiation through the use of digital signatures. Non-repudiation requirements will vary from one application to another and will be defined based on application functionality, data sensitivity, and mission requirements. \n\nSatisfies:FCS_COP.1.1(3), FCS_COP.1.1(4)</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Without non-repudiation, it is impossible to positively attribute an action to an individual (or process acting on behalf of an individual). \n\nNon-repudiation services can be used to determine if information originated from a particular individual, or if an individual took specific actions (e.g., sending an email, signing a contract, approving a procurement request) or received specific information. Non-repudiation protects individuals against later claims by an author of not having authored a particular document, a sender of not having transmitted a message, a receiver of not having received a message, or a signatory of not having signed a document. The application will be configured to provide non-repudiation services for an organization-defined set of commands that are used by the user (or processes action on behalf of the user).\n\nDoD PKI provides for non-repudiation through the use of digital signatures. Non-repudiation requirements will vary from one application to another and will be defined based on application functionality, data sensitivity, and mission requirements. \n\nSatisfies:FCS_COP.1.1(3), FCS_COP.1.1(4)",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server protects against an individual (or process acting on behalf of an individual) falsely denying having performed organization-defined actions to be covered by non-repudiation.\n\nIf the UEM server does not protect against an individual (or process acting on behalf of an individual) falsely denying having performed organization-defined actions to be covered by non-repudiation this is a finding.",
            "FixText": "Configure the UEM server to protect against an individual (or process acting on behalf of an individual) falsely denying having performed organization-defined actions to be covered by non-repudiation.",
            "CCI": "CCI-000166"
        },
        {
            "VulnID": "V-234323",
            "RuleID": "SV-234323r617355_rule",
            "StigID": "SRG-APP-000089-UEM-000049",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000089",
            "RuleTitle": "The UEM server must provide audit record generation capability for DoD-defined auditable events within all application components.",
            "Description": "<VulnDiscussion>Without the capability to generate audit records, it would be difficult to establish, correlate, and investigate the events relating to an incident, or identify those responsible for one. \n\nAudit records can be generated from various components within the application (e.g., process, module). Certain specific application functionalities may be audited as well. The list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.\n\nDoD has defined the list of events for which the application will provide an audit record generation capability as the following: \n\n(i) Successful and unsuccessful attempts to access, modify, or delete privileges, security objects, security levels, or categories of information (e.g., classification levels);\n\n(ii) Access actions, such as successful and unsuccessful logon attempts, privileged activities or other system-level access, starting and ending time for user access to the system, concurrent logons from different workstations, successful and unsuccessful accesses to objects, all program initiations, and all direct access to the information system; and\n\n(iii) All account creation, modification, disabling, and termination actions.\n\nDoD Required auditable events:\n- Change in enrollment status\n- Failure to apply policies to a mobile device\n- Start up and shut down of the UEM System\n- All administrative actions\n- Commands issued to the UEM Agent\n- Server component failure\n- All system alerts, including system integrity verification failures \n\nSatisfies:FAU_ALT_EXT.1.1, FAU_GEN.1.1(1), FMT_SMF.1.1(2)c.8 \nReference:PP-MDM-411065, PP-MDM-412000</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Without the capability to generate audit records, it would be difficult to establish, correlate, and investigate the events relating to an incident, or identify those responsible for one. \n\nAudit records can be generated from various components within the application (e.g., process, module). Certain specific application functionalities may be audited as well. The list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.\n\nDoD has defined the list of events for which the application will provide an audit record generation capability as the following: \n\n(i) Successful and unsuccessful attempts to access, modify, or delete privileges, security objects, security levels, or categories of information (e.g., classification levels);\n\n(ii) Access actions, such as successful and unsuccessful logon attempts, privileged activities or other system-level access, starting and ending time for user access to the system, concurrent logons from different workstations, successful and unsuccessful accesses to objects, all program initiations, and all direct access to the information system; and\n\n(iii) All account creation, modification, disabling, and termination actions.\n\nDoD Required auditable events:\n- Change in enrollment status\n- Failure to apply policies to a mobile device\n- Start up and shut down of the UEM System\n- All administrative actions\n- Commands issued to the UEM Agent\n- Server component failure\n- All system alerts, including system integrity verification failures \n\nSatisfies:FAU_ALT_EXT.1.1, FAU_GEN.1.1(1), FMT_SMF.1.1(2)c.8 \nReference:PP-MDM-411065, PP-MDM-412000",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server provides audit record generation capability for DoD-defined auditable events within all application components.\n\nIf the UEM server does not provide audit record generation capability for DoD-defined auditable events within all application components, this is a finding.",
            "FixText": "Configure the UEM server to provide audit record generation capability for DoD-defined auditable events within all application components.",
            "CCI": "CCI-000169"
        },
        {
            "VulnID": "V-234324",
            "RuleID": "SV-234324r617355_rule",
            "StigID": "SRG-APP-000089-UEM-000050",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000089",
            "RuleTitle": "The UEM server must be configured to provide audit records in a manner suitable for the Authorized Administrators to interpret the information.",
            "Description": "<VulnDiscussion>Successful incident response and auditing relies on timely, accurate system information and analysis in order to allow the organization to identify and respond to potential incidents in a proficient manner. If the application does not provide the ability to centrally review the application logs, forensic analysis is negatively impacted. \n\nSegregation of logging data to multiple disparate computer systems is counterproductive and makes log analysis and log event alarming difficult to implement and manage, particularly when the system or application has multiple logging components written to different locations or systems.\n\nAutomated mechanisms for centralized reviews and analyses include, for example, Security Information Management products. \n\nSatisfies:FAU_SAR.1.2 \nReference:PP-MDM-413050</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Successful incident response and auditing relies on timely, accurate system information and analysis in order to allow the organization to identify and respond to potential incidents in a proficient manner. If the application does not provide the ability to centrally review the application logs, forensic analysis is negatively impacted. \n\nSegregation of logging data to multiple disparate computer systems is counterproductive and makes log analysis and log event alarming difficult to implement and manage, particularly when the system or application has multiple logging components written to different locations or systems.\n\nAutomated mechanisms for centralized reviews and analyses include, for example, Security Information Management products. \n\nSatisfies:FAU_SAR.1.2 \nReference:PP-MDM-413050",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server provides audit records in a manner suitable for the Authorized Administrators to interpret the information.\n\nIf the UEM server does not provide audit records in a manner suitable for the Authorized Administrators to interpret the information, this is a finding.",
            "FixText": "Configure the UEM server to be configured to provide audit records in a manner suitable for the Authorized Administrators to interpret the information.",
            "CCI": "CCI-000169"
        },
        {
            "VulnID": "V-234325",
            "RuleID": "SV-234325r617355_rule",
            "StigID": "SRG-APP-000090-UEM-000051",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000090",
            "RuleTitle": "The UEM server must be configured to allow only specific administrator roles to select which auditable events are to be audited.",
            "Description": "<VulnDiscussion>Without the capability to restrict which roles and individuals can select which events are audited, unauthorized personnel may be able to prevent the auditing of critical events. Misconfigured audits may degrade the system's performance by overwhelming the audit log. Misconfigured audits may also make it more difficult to establish, correlate, and investigate the events relating to an incident, or identify those responsible for one. \n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records. \n\nSatisfies:FMT_SMR.1.1(1) \nReference:PP-MDM-411058</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Without the capability to restrict which roles and individuals can select which events are audited, unauthorized personnel may be able to prevent the auditing of critical events. Misconfigured audits may degrade the system's performance by overwhelming the audit log. Misconfigured audits may also make it more difficult to establish, correlate, and investigate the events relating to an incident, or identify those responsible for one. \n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records. \n\nSatisfies:FMT_SMR.1.1(1) \nReference:PP-MDM-411058",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server allows only specific administrator roles to select which auditable events are to be audited.\n\nIf the UEM server does not allow only specific administrator roles to select which auditable events are to be audited, this is a finding.",
            "FixText": "Configure the UEM server to be configured to allow only specific administrator roles to select which auditable events are to be audited.",
            "CCI": "CCI-000171"
        },
        {
            "VulnID": "V-234326",
            "RuleID": "SV-234326r617355_rule",
            "StigID": "SRG-APP-000091-UEM-000052",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000091",
            "RuleTitle": "The UEM server must generate audit records when successful/unsuccessful attempts to access privileges occur.",
            "Description": "<VulnDiscussion>Without generating audit records that are specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident, or identify those responsible for one. \n\nAudit records can be generated from various components within the information system (e.g., module or policy filter). \n\nSatisfies:FAU_GEN.1.1(1)</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Without generating audit records that are specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident, or identify those responsible for one. \n\nAudit records can be generated from various components within the information system (e.g., module or policy filter). \n\nSatisfies:FAU_GEN.1.1(1)",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server generates audit records when successful/unsuccessful attempts to access privileges occur.\n\nIf the UEM server does not generate audit records when successful/unsuccessful attempts to access privileges occur, this is a finding.",
            "FixText": "Configure the UEM server to generate audit records when successful/unsuccessful attempts to access privileges occur.",
            "CCI": "CCI-000172"
        },
        {
            "VulnID": "V-234327",
            "RuleID": "SV-234327r617355_rule",
            "StigID": "SRG-APP-000092-UEM-000053",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000092",
            "RuleTitle": "The UEM server must initiate session auditing upon startup.",
            "Description": "<VulnDiscussion>If auditing is enabled late in the startup process, the actions of some start-up processes may not be audited. Some audit systems also maintain state information only available if auditing is enabled before a given process is created. \n\nSatisfies:FAU_GEN.1.1(1)</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "If auditing is enabled late in the startup process, the actions of some start-up processes may not be audited. Some audit systems also maintain state information only available if auditing is enabled before a given process is created. \n\nSatisfies:FAU_GEN.1.1(1)",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server initiate session auditing upon startup.\n\nIf the UEM server does not initiate session auditing upon startup, this is a finding.",
            "FixText": "Configure the UEM server to initiate session auditing upon startup.",
            "CCI": "CCI-001464"
        },
        {
            "VulnID": "V-234328",
            "RuleID": "SV-234328r617355_rule",
            "StigID": "SRG-APP-000095-UEM-000055",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000095",
            "RuleTitle": "The UEM server must be configured to produce audit records containing information to establish what type of events occurred.",
            "Description": "<VulnDiscussion>Without establishing what type of event occurred, it would be difficult to establish, correlate, and investigate the events relating to an incident, or identify those responsible for one. \n\nAudit record content that may be necessary to satisfy the requirement of this policy includes, for example, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, filenames involved, and access control or flow control rules invoked.\n\nAssociating event types with detected events in the application and audit logs provides a means of investigating an attack; recognizing resource utilization or capacity thresholds; or identifying an improperly configured application. \n\nSatisfies:FAU_GEN.1.2(1) \nReference:PP-MDM-412060</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Without establishing what type of event occurred, it would be difficult to establish, correlate, and investigate the events relating to an incident, or identify those responsible for one. \n\nAudit record content that may be necessary to satisfy the requirement of this policy includes, for example, time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, filenames involved, and access control or flow control rules invoked.\n\nAssociating event types with detected events in the application and audit logs provides a means of investigating an attack; recognizing resource utilization or capacity thresholds; or identifying an improperly configured application. \n\nSatisfies:FAU_GEN.1.2(1) \nReference:PP-MDM-412060",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server produces audit records containing information to establish what type of events occurred.\n\nIf the UEM server does not produce audit records containing information to establish what type of events occurred, this is a finding.",
            "FixText": "Configure the UEM server to be configured to produce audit records containing information to establish what type of events occurred.",
            "CCI": "CCI-000130"
        },
        {
            "VulnID": "V-234329",
            "RuleID": "SV-234329r617355_rule",
            "StigID": "SRG-APP-000096-UEM-000056",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000096",
            "RuleTitle": "The UEM server must be configured to produce audit records containing information to establish when (date and time) the events occurred.",
            "Description": "<VulnDiscussion>Without establishing when events occurred, it is impossible to establish, correlate, and investigate the events relating to an incident.\n\nIn order to compile an accurate risk assessment, and provide forensic analysis, it is essential for security personnel to know when events occurred (date and time). \n\nAssociating event types with detected events in the application and audit logs provides a means of investigating an attack; recognizing resource utilization or capacity thresholds; or identifying an improperly configured application. \n\nSatisfies:FAU_GEN.1.2(1) \nReference:PP-MDM-412060</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Without establishing when events occurred, it is impossible to establish, correlate, and investigate the events relating to an incident.\n\nIn order to compile an accurate risk assessment, and provide forensic analysis, it is essential for security personnel to know when events occurred (date and time). \n\nAssociating event types with detected events in the application and audit logs provides a means of investigating an attack; recognizing resource utilization or capacity thresholds; or identifying an improperly configured application. \n\nSatisfies:FAU_GEN.1.2(1) \nReference:PP-MDM-412060",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server produces audit records containing information to establish when (date and time) the events occurred.\n\nIf the UEM server does not produce audit records containing information to establish when (date and time) the events occurred, this is a finding.",
            "FixText": "Configure the UEM server to be configured to produce audit records containing information to establish when (date and time) the events occurred.",
            "CCI": "CCI-000131"
        },
        {
            "VulnID": "V-234330",
            "RuleID": "SV-234330r617355_rule",
            "StigID": "SRG-APP-000097-UEM-000057",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000097",
            "RuleTitle": "The UEM server must be configured to produce audit records containing information to establish where the events occurred.",
            "Description": "<VulnDiscussion>Failure to generate these audit records makes it more difficult to identify or investigate attempted or successful compromises, potentially causing incidents to last longer than necessary. \n\nSatisfies:FAU_GEN.1.2(1) \nReference:PP-MDM-412060</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Failure to generate these audit records makes it more difficult to identify or investigate attempted or successful compromises, potentially causing incidents to last longer than necessary. \n\nSatisfies:FAU_GEN.1.2(1) \nReference:PP-MDM-412060",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server produces audit records containing information to establish where the events occurred.\n\nIf the UEM server does not produce audit records containing information to establish where the events occurred, this is a finding.",
            "FixText": "Configure the UEM server to be configured to produce audit records containing information to establish where the events occurred.",
            "CCI": "CCI-000132"
        },
        {
            "VulnID": "V-234331",
            "RuleID": "SV-234331r617355_rule",
            "StigID": "SRG-APP-000098-UEM-000058",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000098",
            "RuleTitle": "The UEM server must be configured to produce audit records containing information to establish the source of the events.",
            "Description": "<VulnDiscussion>Without establishing the source of the event, it is impossible to establish, correlate, and investigate the events leading up to an outage or attack.\n\nIn addition to logging where events occur within the application, the application must also produce audit records that identify the application itself as the source of the event.\n\nIn the case of centralized logging, the source would be the application name accompanied by the host or client name. \n\nIn order to compile an accurate risk assessment, and provide forensic analysis, it is essential for security personnel to know the source of the event, particularly in the case of centralized logging.\n\nAssociating information about the source of the event within the application provides a means of investigating an attack; recognizing resource utilization or capacity thresholds; or identifying an improperly configured application. \n\nSatisfies:FAU_GEN.1.2(1) \nReference:PP-MDM-412060</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Without establishing the source of the event, it is impossible to establish, correlate, and investigate the events leading up to an outage or attack.\n\nIn addition to logging where events occur within the application, the application must also produce audit records that identify the application itself as the source of the event.\n\nIn the case of centralized logging, the source would be the application name accompanied by the host or client name. \n\nIn order to compile an accurate risk assessment, and provide forensic analysis, it is essential for security personnel to know the source of the event, particularly in the case of centralized logging.\n\nAssociating information about the source of the event within the application provides a means of investigating an attack; recognizing resource utilization or capacity thresholds; or identifying an improperly configured application. \n\nSatisfies:FAU_GEN.1.2(1) \nReference:PP-MDM-412060",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server produces audit records containing information to establish the source of the events.\n\nIf the UEM server does not produce audit records containing information to establish the source of the events, this is a finding.",
            "FixText": "Configure the UEM server to be configured to produce audit records containing information to establish the source of the events.",
            "CCI": "CCI-000133"
        },
        {
            "VulnID": "V-234332",
            "RuleID": "SV-234332r617355_rule",
            "StigID": "SRG-APP-000099-UEM-000059",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000099",
            "RuleTitle": "The UEM server must be configured to produce audit records that contain information to establish the outcome of the events.",
            "Description": "<VulnDiscussion>Without information about the outcome of events, security personnel cannot make an accurate assessment as to whether an attack was successful or if changes were made to the security state of the system.\n\nEvent outcomes can include indicators of event success or failure and event-specific results (e.g., the security state of the information system after the event occurred). As such, they also provide a means to measure the impact of an event and help authorized personnel to determine the appropriate response. \n\nSatisfies:FAU_GEN.1.2(1) \nReference:PP-MDM-412060</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Without information about the outcome of events, security personnel cannot make an accurate assessment as to whether an attack was successful or if changes were made to the security state of the system.\n\nEvent outcomes can include indicators of event success or failure and event-specific results (e.g., the security state of the information system after the event occurred). As such, they also provide a means to measure the impact of an event and help authorized personnel to determine the appropriate response. \n\nSatisfies:FAU_GEN.1.2(1) \nReference:PP-MDM-412060",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server produces audit records that contain information to establish the outcome of the events.\n\nIf the UEM server does not produce audit records that contain information to establish the outcome of the events, this is a finding.",
            "FixText": "Configure the UEM server to be configured to produce audit records that contain information to establish the outcome of the events.",
            "CCI": "CCI-000134"
        },
        {
            "VulnID": "V-234333",
            "RuleID": "SV-234333r617355_rule",
            "StigID": "SRG-APP-000100-UEM-000060",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000100",
            "RuleTitle": "The UEM server must be configured to generate audit records containing information that establishes the identity of any individual or process associated with the event.",
            "Description": "<VulnDiscussion>Without information that establishes the identity of the subjects (i.e., users or processes acting on behalf of users) associated with the events, security personnel cannot determine responsibility for the potentially harmful event.\n\nEvent identifiers (if authenticated or otherwise known) include, but are not limited to, user database tables, primary key values, user names, or process identifiers. \n\nSatisfies:FAU_GEN.1.2(1) \nReference:PP-MDM-412060</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Without information that establishes the identity of the subjects (i.e., users or processes acting on behalf of users) associated with the events, security personnel cannot determine responsibility for the potentially harmful event.\n\nEvent identifiers (if authenticated or otherwise known) include, but are not limited to, user database tables, primary key values, user names, or process identifiers. \n\nSatisfies:FAU_GEN.1.2(1) \nReference:PP-MDM-412060",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server generates audit records containing information that establishes the identity of any individual or process associated with the event.\n\nIf the UEM server does not generate audit records containing information that establishes the identity of any individual or process associated with the event, this is a finding.",
            "FixText": "Configure the UEM server to be configured to generate audit records containing information that establishes the identity of any individual or process associated with the event.",
            "CCI": "CCI-001487"
        },
        {
            "VulnID": "V-234334",
            "RuleID": "SV-234334r617355_rule",
            "StigID": "SRG-APP-000101-UEM-000061",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000101",
            "RuleTitle": "The UEM server must be configured to generate audit records containing the full-text recording of privileged commands or the individual identities of group account users.",
            "Description": "<VulnDiscussion>Reconstruction of harmful events or forensic analysis is not possible if audit records do not contain enough information. \n\nOrganizations consider limiting the additional audit information to only that information explicitly needed for specific audit requirements. The additional information required is dependent on the type of information (i.e., sensitivity of the data and the environment within which it resides). At a minimum, the organization must audit either full-text recording of privileged commands or the individual identities of group users, or both. The organization must maintain audit trails in sufficient detail to reconstruct events to determine the cause and impact of compromise. \n\nIn addition, the application must have the capability to include organization-defined additional, more detailed information in the audit records for audit events. \n\nSatisfies:FAU_GEN.1.2(1) \nReference:PP-MDM-412060</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Reconstruction of harmful events or forensic analysis is not possible if audit records do not contain enough information. \n\nOrganizations consider limiting the additional audit information to only that information explicitly needed for specific audit requirements. The additional information required is dependent on the type of information (i.e., sensitivity of the data and the environment within which it resides). At a minimum, the organization must audit either full-text recording of privileged commands or the individual identities of group users, or both. The organization must maintain audit trails in sufficient detail to reconstruct events to determine the cause and impact of compromise. \n\nIn addition, the application must have the capability to include organization-defined additional, more detailed information in the audit records for audit events. \n\nSatisfies:FAU_GEN.1.2(1) \nReference:PP-MDM-412060",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server generates audit records containing the full-text recording of privileged commands or the individual identities of group account users.\n\nIf the UEM server does not generate audit records containing the full-text recording of privileged commands or the individual identities of group account users, this is a finding.",
            "FixText": "Configure the UEM server to be configured to generate audit records containing the full-text recording of privileged commands or the individual identities of group account users.",
            "CCI": "CCI-000135"
        },
        {
            "VulnID": "V-234335",
            "RuleID": "SV-234335r617355_rule",
            "StigID": "SRG-APP-000108-UEM-000062",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000108",
            "RuleTitle": "The UEM SRG must alert the ISSO and SA (at a minimum) in the event of an audit processing failure.",
            "Description": "<VulnDiscussion>It is critical for the appropriate personnel to be aware if a system is at risk of failing to process audit logs as required. Without this notification, the security personnel may be unaware of an impending failure of the audit capability and system operation may be adversely affected. \n\nAudit processing failures include software/hardware errors, failures in the audit capturing mechanisms, and audit storage capacity being reached or exceeded.\n\nThis requirement applies to each audit data storage repository (i.e., distinct information system component where audit records are stored), the centralized audit storage capacity of organizations (i.e., all audit data storage repositories combined), or both. \n\nSatisfies:FAU_ALT_EXT.1.1 \nReference:PP-MDM-412059</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "It is critical for the appropriate personnel to be aware if a system is at risk of failing to process audit logs as required. Without this notification, the security personnel may be unaware of an impending failure of the audit capability and system operation may be adversely affected. \n\nAudit processing failures include software/hardware errors, failures in the audit capturing mechanisms, and audit storage capacity being reached or exceeded.\n\nThis requirement applies to each audit data storage repository (i.e., distinct information system component where audit records are stored), the centralized audit storage capacity of organizations (i.e., all audit data storage repositories combined), or both. \n\nSatisfies:FAU_ALT_EXT.1.1 \nReference:PP-MDM-412059",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server alerts the ISSO and SA (at a minimum) in the event of an audit processing failure.\n\nIf the UEM server does not alert the ISSO and SA (at a minimum) in the event of an audit processing failure, this is a finding.",
            "FixText": "Configure the UEM server to alert the ISSO and SA (at a minimum) in the event of an audit processing failure.",
            "CCI": "CCI-000139"
        },
        {
            "VulnID": "V-234340",
            "RuleID": "SV-234340r617403_rule",
            "StigID": "SRG-APP-000116-UEM-000067",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000116",
            "RuleTitle": "The UEM server must use host operating system clocks to generate time stamps for audit records.",
            "Description": "<VulnDiscussion>Without an internal clock used as the reference for the time stored on each event to provide a trusted common reference for the time, forensic analysis would be impeded. Determining the correct time a particular event occurred on a system is critical when conducting forensic analysis and investigating system events. \n\nIf the internal clock is not used, the system may not be able to provide time stamps for log messages. Additionally, externally generated time stamps may not be accurate. Applications can use the capability of an operating system or purpose-built module for this purpose. \n\nSatisfies: OE.TIMESTAMP, FAU_GEN.1.2(1)</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Without an internal clock used as the reference for the time stored on each event to provide a trusted common reference for the time, forensic analysis would be impeded. Determining the correct time a particular event occurred on a system is critical when conducting forensic analysis and investigating system events. \n\nIf the internal clock is not used, the system may not be able to provide time stamps for log messages. Additionally, externally generated time stamps may not be accurate. Applications can use the capability of an operating system or purpose-built module for this purpose. \n\nSatisfies: OE.TIMESTAMP, FAU_GEN.1.2(1)",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server uses host operating system clocks to generate time stamps for audit records.\n\nIf the UEM server does not use host operating system clocks to generate time stamps for audit records, this is a finding",
            "FixText": "Configure the UEM server to use host operating system clocks to generate time stamps for audit records.",
            "CCI": "CCI-000159"
        },
        {
            "VulnID": "V-234341",
            "RuleID": "SV-234341r617355_rule",
            "StigID": "SRG-APP-000118-UEM-000068",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000118",
            "RuleTitle": "The UEM server must protect audit information from any type of unauthorized read access.",
            "Description": "<VulnDiscussion>If audit data were to become compromised, then competent forensic analysis and discovery of the true source of potentially malicious system activity is difficult if not impossible to achieve. In addition, access to audit records provides information an attacker could potentially use to his or her advantage.\n\nTo ensure the veracity of audit data, the information system and/or the application must protect audit information from any and all unauthorized access. This includes read, write, and copy access.\n\nThis requirement can be achieved through multiple methods, which will depend upon system architecture and design. Commonly employed methods for protecting audit information include least privilege permissions as well as restricting the location and number of log file repositories.\n\nAdditionally, applications with user interfaces to audit records must not allow for the unfettered manipulation of or access to those records via the application. If the application provides access to the audit data, the application becomes accountable for ensuring audit information is protected from unauthorized access.\n\nAudit information includes all information (e.g., audit records, audit settings, and audit reports) needed to successfully audit information system activity. \n\nSatisfies:FIA_UAU.1.2, FMT_SMR.1.1(1)</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "If audit data were to become compromised, then competent forensic analysis and discovery of the true source of potentially malicious system activity is difficult if not impossible to achieve. In addition, access to audit records provides information an attacker could potentially use to his or her advantage.\n\nTo ensure the veracity of audit data, the information system and/or the application must protect audit information from any and all unauthorized access. This includes read, write, and copy access.\n\nThis requirement can be achieved through multiple methods, which will depend upon system architecture and design. Commonly employed methods for protecting audit information include least privilege permissions as well as restricting the location and number of log file repositories.\n\nAdditionally, applications with user interfaces to audit records must not allow for the unfettered manipulation of or access to those records via the application. If the application provides access to the audit data, the application becomes accountable for ensuring audit information is protected from unauthorized access.\n\nAudit information includes all information (e.g., audit records, audit settings, and audit reports) needed to successfully audit information system activity. \n\nSatisfies:FIA_UAU.1.2, FMT_SMR.1.1(1)",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server protects audit information from any type of unauthorized read access.\n\nIf the UEM server does not protect audit information from any type of unauthorized read access, this is a finding",
            "FixText": "Configure the UEM server to protect audit information from any type of unauthorized read access.",
            "CCI": "CCI-000162"
        },
        {
            "VulnID": "V-234342",
            "RuleID": "SV-234342r617355_rule",
            "StigID": "SRG-APP-000119-UEM-000069",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000119",
            "RuleTitle": "The UEM server must protect audit information from unauthorized modification.",
            "Description": "<VulnDiscussion>If audit data were to become compromised, then forensic analysis and discovery of the true source of potentially malicious system activity is impossible to achieve. \n\nTo ensure the veracity of audit data, the information system and/or the application must protect audit information from unauthorized modification. \n\nThis requirement can be achieved through multiple methods, which will depend upon system architecture and design. Some commonly employed methods include ensuring log files receive the proper file system permissions, and limiting log data locations. \n\nApplications providing a user interface to audit data will leverage user permissions and roles identifying the user accessing the data and the corresponding rights that the user enjoys in order to make access decisions regarding the modification of audit data.\n\nAudit information includes all information (e.g., audit records, audit settings, and audit reports) needed to successfully audit information system activity. \n\nSatisfies:FIA_UAU.1.2, FMT_SMR.1.1(1)</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "If audit data were to become compromised, then forensic analysis and discovery of the true source of potentially malicious system activity is impossible to achieve. \n\nTo ensure the veracity of audit data, the information system and/or the application must protect audit information from unauthorized modification. \n\nThis requirement can be achieved through multiple methods, which will depend upon system architecture and design. Some commonly employed methods include ensuring log files receive the proper file system permissions, and limiting log data locations. \n\nApplications providing a user interface to audit data will leverage user permissions and roles identifying the user accessing the data and the corresponding rights that the user enjoys in order to make access decisions regarding the modification of audit data.\n\nAudit information includes all information (e.g., audit records, audit settings, and audit reports) needed to successfully audit information system activity. \n\nSatisfies:FIA_UAU.1.2, FMT_SMR.1.1(1)",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server protects audit information from unauthorized modification.\n\nIf the UEM server does not protect audit information from unauthorized modification, this is a finding.",
            "FixText": "Configure the UEM server to protect audit information from unauthorized modification.",
            "CCI": "CCI-000163"
        },
        {
            "VulnID": "V-234343",
            "RuleID": "SV-234343r617355_rule",
            "StigID": "SRG-APP-000120-UEM-000070",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000120",
            "RuleTitle": "The UEM server must protect audit information from unauthorized deletion.",
            "Description": "<VulnDiscussion>If audit data were to become compromised, then forensic analysis and discovery of the true source of potentially malicious system activity is impossible to achieve. \n\nTo ensure the veracity of audit data, the information system and/or the application must protect audit information from unauthorized deletion. This requirement can be achieved through multiple methods, which will depend upon system architecture and design. \n\nSome commonly employed methods include: ensuring log files receive the proper file system permissions utilizing file system protections, restricting access, and backing up log data to ensure log data is retained.\n\nApplications providing a user interface to audit data will leverage user permissions and roles identifying the user accessing the data and the corresponding rights the user enjoys in order make access decisions regarding the deletion of audit data.\n\nAudit information includes all information (e.g., audit records, audit settings, and audit reports) needed to successfully audit information system activity. Audit information may include data from other applications or be included with the audit application itself. \n\nSatisfies:FIA_UAU.1.2, FMT_SMR.1.1(1)</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "If audit data were to become compromised, then forensic analysis and discovery of the true source of potentially malicious system activity is impossible to achieve. \n\nTo ensure the veracity of audit data, the information system and/or the application must protect audit information from unauthorized deletion. This requirement can be achieved through multiple methods, which will depend upon system architecture and design. \n\nSome commonly employed methods include: ensuring log files receive the proper file system permissions utilizing file system protections, restricting access, and backing up log data to ensure log data is retained.\n\nApplications providing a user interface to audit data will leverage user permissions and roles identifying the user accessing the data and the corresponding rights the user enjoys in order make access decisions regarding the deletion of audit data.\n\nAudit information includes all information (e.g., audit records, audit settings, and audit reports) needed to successfully audit information system activity. Audit information may include data from other applications or be included with the audit application itself. \n\nSatisfies:FIA_UAU.1.2, FMT_SMR.1.1(1)",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server protects audit information from unauthorized deletion.\n\nIf the UEM server does not protect audit information from unauthorized deletion, this is a finding",
            "FixText": "Configure the UEM server to protect audit information from unauthorized deletion.",
            "CCI": "CCI-000164"
        },
        {
            "VulnID": "V-234347",
            "RuleID": "SV-234347r617355_rule",
            "StigID": "SRG-APP-000125-UEM-000074",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000125",
            "RuleTitle": "The UEM server must back up audit records at least every seven days onto a log management server.",
            "Description": "<VulnDiscussion>Protection of log data includes ensuring log data is not accidentally lost or deleted. Backing up audit records to a different system or onto separate media than the system being audited on an organizationally defined frequency helps ensure, in the event of a catastrophic system failure, the audit records will be retained. \n\nThis helps to ensure a compromise of the information system being audited does not also result in a compromise of the audit records.\n\nThis requirement only applies to applications that have a native backup capability for audit records. Operating system backup requirements cover applications that do not provide native backup functions. \n\nSatisfies:FAU_STG_EXT.1.1, FMT_SMF.1.1(2) Refinement b</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Protection of log data includes ensuring log data is not accidentally lost or deleted. Backing up audit records to a different system or onto separate media than the system being audited on an organizationally defined frequency helps ensure, in the event of a catastrophic system failure, the audit records will be retained. \n\nThis helps to ensure a compromise of the information system being audited does not also result in a compromise of the audit records.\n\nThis requirement only applies to applications that have a native backup capability for audit records. Operating system backup requirements cover applications that do not provide native backup functions. \n\nSatisfies:FAU_STG_EXT.1.1, FMT_SMF.1.1(2) Refinement b",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server backs up audit records at least every seven days onto a log management server.\n\nIf the UEM server does not back up audit records at least every seven days onto a log management server, this is a finding.",
            "FixText": "Configure the UEM server to back up audit records at least every seven days onto a log management server.",
            "CCI": "CCI-001348"
        },
        {
            "VulnID": "V-234349",
            "RuleID": "SV-234349r617355_rule",
            "StigID": "SRG-APP-000131-UEM-000076",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000131",
            "RuleTitle": "The UEM server must prevent the installation of patches, service packs, or application components without verification the software component has been digitally signed using a certificate that is recognized and approved by the organization.",
            "Description": "<VulnDiscussion>Changes to any software components can have significant effects on the overall security of the application. Verifying software components have been digitally signed using a certificate that is recognized and approved by the organization ensures the software has not been tampered with and that it has been provided by a trusted vendor. \n\nAccordingly, patches, service packs, or application components must be signed with a certificate recognized and approved by the organization. \n\nVerifying the authenticity of the software prior to installation validates the integrity of the patch or upgrade received from a vendor. This ensures the software has not been tampered with and that it has been provided by a trusted vendor. Self-signed certificates are disallowed by this requirement. The application should not have to verify the software again. This requirement does not mandate DoD certificates for this purpose; however, the certificate used to verify the software must be from an approved CA. \n\nSatisfies:FIA_X509_EXT.1.1(1)</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Changes to any software components can have significant effects on the overall security of the application. Verifying software components have been digitally signed using a certificate that is recognized and approved by the organization ensures the software has not been tampered with and that it has been provided by a trusted vendor. \n\nAccordingly, patches, service packs, or application components must be signed with a certificate recognized and approved by the organization. \n\nVerifying the authenticity of the software prior to installation validates the integrity of the patch or upgrade received from a vendor. This ensures the software has not been tampered with and that it has been provided by a trusted vendor. Self-signed certificates are disallowed by this requirement. The application should not have to verify the software again. This requirement does not mandate DoD certificates for this purpose; however, the certificate used to verify the software must be from an approved CA. \n\nSatisfies:FIA_X509_EXT.1.1(1)",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server prevents the installation of patches, service packs, or application components without verification the software component has been digitally signed using a certificate that is recognized and approved by the organization.\n\nIf the UEM server does not prevent the installation of patches, service packs, or application components without verification the software component has been digitally signed using a certificate that is recognized and approved by the organization, this is a finding.",
            "FixText": "Configure the UEM server to prevent the installation of patches, service packs, or application components without verification the software component has been digitally signed using a certificate that is recognized and approved by the organization.",
            "CCI": "CCI-001749"
        },
        {
            "VulnID": "V-234351",
            "RuleID": "SV-234351r617355_rule",
            "StigID": "SRG-APP-000133-UEM-000078",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000133",
            "RuleTitle": "The UEM server must limit privileges to change the software resident within software libraries.",
            "Description": "<VulnDiscussion>If the application were to allow any user to make changes to software libraries, then those changes might be implemented without undergoing the appropriate testing and approvals that are part of a robust change management process.\n\nThis requirement applies to applications with software libraries that are accessible and configurable, as in the case of interpreted languages. Software libraries also include privileged programs, which execute with escalated privileges. Only qualified and authorized individuals will be allowed to obtain access to information system components for purposes of initiating changes, including upgrades and modifications. \n\nSatisfies:FMT_SMR.1.1(1), FPT_TUD_EXT.1.2</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "If the application were to allow any user to make changes to software libraries, then those changes might be implemented without undergoing the appropriate testing and approvals that are part of a robust change management process.\n\nThis requirement applies to applications with software libraries that are accessible and configurable, as in the case of interpreted languages. Software libraries also include privileged programs, which execute with escalated privileges. Only qualified and authorized individuals will be allowed to obtain access to information system components for purposes of initiating changes, including upgrades and modifications. \n\nSatisfies:FMT_SMR.1.1(1), FPT_TUD_EXT.1.2",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server limits privileges to change the software resident within software libraries.\n\nIf the UEM server does not limit privileges to change the software resident within software libraries, this is a finding.",
            "FixText": "Configure the UEM server to limit privileges to change the software resident within software libraries.",
            "CCI": "CCI-001499"
        },
        {
            "VulnID": "V-234352",
            "RuleID": "SV-234352r617355_rule",
            "StigID": "SRG-APP-000141-UEM-000079",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000141",
            "RuleTitle": "The UEM server must be configured to disable non-essential capabilities.",
            "Description": "<VulnDiscussion>It is detrimental for applications to provide, or install by default, functionality exceeding requirements or mission objectives. These unnecessary capabilities or services are often overlooked and therefore may remain unsecured. They increase the risk to the platform by providing additional attack vectors.\n\nApplications are capable of providing a wide variety of functions and services. Some of the functions and services, provided by default, may not be necessary to support essential organizational operations (e.g., key missions, functions). \n\nExamples of non-essential capabilities include, but are not limited to, advertising software or browser plug-ins not related to requirements or providing a wide array of functionality not required for every mission, but cannot be disabled. \n\nSatisfies:FMT_SMF.1.1(2) c.2 \nReference:PP-MDM-411064</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "It is detrimental for applications to provide, or install by default, functionality exceeding requirements or mission objectives. These unnecessary capabilities or services are often overlooked and therefore may remain unsecured. They increase the risk to the platform by providing additional attack vectors.\n\nApplications are capable of providing a wide variety of functions and services. Some of the functions and services, provided by default, may not be necessary to support essential organizational operations (e.g., key missions, functions). \n\nExamples of non-essential capabilities include, but are not limited to, advertising software or browser plug-ins not related to requirements or providing a wide array of functionality not required for every mission, but cannot be disabled. \n\nSatisfies:FMT_SMF.1.1(2) c.2 \nReference:PP-MDM-411064",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server has disabled non-essential capabilities.\n\nIf the UEM server has not disabled non-essential capabilities, this is a finding.",
            "FixText": "Configure the UEM server to be configured to disable non-essential capabilities.",
            "CCI": "CCI-000381"
        },
        {
            "VulnID": "V-234353",
            "RuleID": "SV-234353r617355_rule",
            "StigID": "SRG-APP-000142-UEM-000080",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000142",
            "RuleTitle": "The firewall protecting the UEM server platform must be configured so only DoD-approved ports, protocols, and services are enabled. (See the DoD Ports, Protocols, Services Management [PPSM] Category Assurance Levels [CAL] list for DoD-approved ports, protocols, and services).",
            "Description": "<VulnDiscussion>All ports, protocols, and services used on DoD networks must be approved and registered via the DoD PPSM process. This is to ensure a risk assessment has been completed before a new port, protocol, or service is configured on a DoD network and has been approved by proper DoD authorities. Otherwise, the new port, protocol, or service could cause a vulnerability to the DoD network, which could be exploited by an adversary. \n\nSatisfies:FMT_SMF.1.1(2) Refinement b \nReference:PP-MDM-431006</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "All ports, protocols, and services used on DoD networks must be approved and registered via the DoD PPSM process. This is to ensure a risk assessment has been completed before a new port, protocol, or service is configured on a DoD network and has been approved by proper DoD authorities. Otherwise, the new port, protocol, or service could cause a vulnerability to the DoD network, which could be exploited by an adversary. \n\nSatisfies:FMT_SMF.1.1(2) Refinement b \nReference:PP-MDM-431006",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the firewall protecting the UEM server platform is configured so that only DoD-approved ports, protocols, and services are enabled. (See the DoD PPSM CAL list for DoD-approved ports, protocols, and services).\n\nIf the firewall protecting the UEM server platform is not configured so that only DoD-approved ports, protocols, and services are enabled, this is a finding.",
            "FixText": "Configure the firewall protecting the UEM server platform so that only DoD-approved ports, protocols, and services are enabled. (See the DoD PPSM CAL list for DoD-approved ports, protocols, and services).",
            "CCI": "CCI-000382"
        },
        {
            "VulnID": "V-234354",
            "RuleID": "SV-234354r617397_rule",
            "StigID": "SRG-APP-000142-UEM-000081",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000142",
            "RuleTitle": "The UEM server must be configured to use only documented platform APIs.",
            "Description": "<VulnDiscussion>Authenticity protection provides protection against man-in-the-middle attacks/session hijacking and the insertion of false information into sessions.\n\nApplication communication sessions are protected utilizing transport encryption protocols, such as TLS. TLS provides web applications with a means to authenticate user sessions and encrypt application traffic. Session authentication can be single (one-way) or mutual (two-way) in nature. Single authentication authenticates the server for the client, whereas mutual authentication provides a means for both the client and the server to authenticate each other. \n\nThis requirement applies to applications that utilize communications sessions. This includes, but is not limited to, web-based applications and Service-Oriented Architectures (SOA). \n\nThis requirement addresses communications protection at the application session, versus the network packet, and establishes grounds for confidence at both ends of communications sessions in ongoing identities of other parties and in the validity of information transmitted. Depending on the required degree of confidentiality and integrity, web services/SOA will require the use of TLS mutual authentication (two-way/bidirectional). \n\nSatisfies:FPT_API_EXT.1.1</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Authenticity protection provides protection against man-in-the-middle attacks/session hijacking and the insertion of false information into sessions.\n\nApplication communication sessions are protected utilizing transport encryption protocols, such as TLS. TLS provides web applications with a means to authenticate user sessions and encrypt application traffic. Session authentication can be single (one-way) or mutual (two-way) in nature. Single authentication authenticates the server for the client, whereas mutual authentication provides a means for both the client and the server to authenticate each other. \n\nThis requirement applies to applications that utilize communications sessions. This includes, but is not limited to, web-based applications and Service-Oriented Architectures (SOA). \n\nThis requirement addresses communications protection at the application session, versus the network packet, and establishes grounds for confidence at both ends of communications sessions in ongoing identities of other parties and in the validity of information transmitted. Depending on the required degree of confidentiality and integrity, web services/SOA will require the use of TLS mutual authentication (two-way/bidirectional). \n\nSatisfies:FPT_API_EXT.1.1",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server uses only documented platform APIs.\n\nIf the UEM server does not use only documented platform APIs, this is a finding.",
            "FixText": "Configure the UEM server to be configured to use only documented platform APIs.",
            "CCI": "CCI-000382"
        },
        {
            "VulnID": "V-234355",
            "RuleID": "SV-234355r617404_rule",
            "StigID": "SRG-APP-000148-UEM-000082",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000148",
            "RuleTitle": "The UEM server must uniquely identify and authenticate organizational users (or processes acting on behalf of organizational users).",
            "Description": "<VulnDiscussion>To ensure accountability and prevent unauthenticated access, organizational users must be identified and authenticated to prevent potential misuse and compromise of the system. \n\nOrganizational users include organizational employees or individuals the organization deems to have equivalent status of employees (e.g., contractors). Organizational users (and any processes acting on behalf of users) must be uniquely identified and authenticated for all accesses, except the following.\n\n(i) Accesses explicitly identified and documented by the organization. Organizations document specific user actions that can be performed on the information system without identification or authentication; and \n(ii) Accesses that occur through authorized use of group authenticators without individual authentication. Organizations may require unique identification of individuals in group accounts (e.g., shared privilege accounts) or for detailed accountability of individual activity. \n\nSatisfies: FIA \nReference:PP-MDM-414003</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "To ensure accountability and prevent unauthenticated access, organizational users must be identified and authenticated to prevent potential misuse and compromise of the system. \n\nOrganizational users include organizational employees or individuals the organization deems to have equivalent status of employees (e.g., contractors). Organizational users (and any processes acting on behalf of users) must be uniquely identified and authenticated for all accesses, except the following.\n\n(i) Accesses explicitly identified and documented by the organization. Organizations document specific user actions that can be performed on the information system without identification or authentication; and \n(ii) Accesses that occur through authorized use of group authenticators without individual authentication. Organizations may require unique identification of individuals in group accounts (e.g., shared privilege accounts) or for detailed accountability of individual activity. \n\nSatisfies: FIA \nReference:PP-MDM-414003",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Requirement is Not Applicable when UEM server is configured to use DoD Central Directory Service for administrator account authentication.\n\nVerify the UEM server uniquely identifies and authenticates organizational users (or processes acting on behalf of organizational users).\n\nIf the UEM server does not uniquely identify and authenticate organizational users (or processes acting on behalf of organizational users), this is a finding.",
            "FixText": "Configure the UEM server to uniquely identify and authenticate organizational users (or processes acting on behalf of organizational users).",
            "CCI": "CCI-000764"
        },
        {
            "VulnID": "V-234356",
            "RuleID": "SV-234356r617405_rule",
            "StigID": "SRG-APP-000149-UEM-000083",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000149",
            "RuleTitle": "The UEM server must be configured to use a DoD Central Directory Service to provide multifactor authentication for network access to privileged and non-privileged accounts.",
            "Description": "<VulnDiscussion>A comprehensive account management process that includes automation helps to ensure the accounts designated as requiring attention are consistently and promptly addressed. If an attacker compromises an account, the entire MDM server infrastructure is at risk. Providing automated support functions for the management of accounts will ensure only active accounts will be granted access with the proper authorization levels. These objectives are best achieved by configuring the MDM server to leverage an enterprise authentication mechanism (e.g., Microsoft Active Directory Kerberos). \n\nSatisfies: FIA \nReference:PP-MDM-414003</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "A comprehensive account management process that includes automation helps to ensure the accounts designated as requiring attention are consistently and promptly addressed. If an attacker compromises an account, the entire MDM server infrastructure is at risk. Providing automated support functions for the management of accounts will ensure only active accounts will be granted access with the proper authorization levels. These objectives are best achieved by configuring the MDM server to leverage an enterprise authentication mechanism (e.g., Microsoft Active Directory Kerberos). \n\nSatisfies: FIA \nReference:PP-MDM-414003",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server uses a DoD Central Directory Service to provide multifactor authentication for network access to privileged and non-privileged accounts.\n\nIf the UEM server does not use a DoD Central Directory Service to provide multifactor authentication for network access to privileged and non-privileged accounts, this is a finding.",
            "FixText": "Configure the UEM server to use a DoD Central Directory Service to provide multifactor authentication for network access to privileged and non-privileged accounts.",
            "CCI": "CCI-000765"
        },
        {
            "VulnID": "V-234358",
            "RuleID": "SV-234358r617355_rule",
            "StigID": "SRG-APP-000151-UEM-000085",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000151",
            "RuleTitle": "All UEM server local accounts created during application installation and configuration must be removed. \n\nNote: In this context local accounts refers to user and or administrator accounts on the server that use user name and password for user access and authentication.",
            "Description": "<VulnDiscussion>A comprehensive account management process that includes automation helps to ensure the accounts designated as requiring attention are consistently and promptly addressed. If an attacker compromises an account, the entire MDM server infrastructure is at risk. Providing automated support functions for the management of accounts will ensure only active accounts will be granted access with the proper authorization levels. These objectives are best achieved by configuring the MDM server to leverage an enterprise authentication mechanism (e.g., Microsoft Active Directory Kerberos). \n\nSatisfies:FMT_SMF.1.1(2) b / IA-5(1)(a) \nReference:PP-MDM-431007</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "A comprehensive account management process that includes automation helps to ensure the accounts designated as requiring attention are consistently and promptly addressed. If an attacker compromises an account, the entire MDM server infrastructure is at risk. Providing automated support functions for the management of accounts will ensure only active accounts will be granted access with the proper authorization levels. These objectives are best achieved by configuring the MDM server to leverage an enterprise authentication mechanism (e.g., Microsoft Active Directory Kerberos). \n\nSatisfies:FMT_SMF.1.1(2) b / IA-5(1)(a) \nReference:PP-MDM-431007",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify all UEM server local accounts created during application installation and configuration have been removed. \n\nNote: In this context \"local\" accounts refers to user and or administrator accounts on the server that use user name and password for user access and authentication.\n\nIf all UEM server local accounts created during application installation and configuration have not been removed, this is a finding.",
            "FixText": "Remove all UEM server local accounts created during application installation. \n\nNote: In this context \"local\" accounts refers to user and or administrator accounts on the server that use user name and password for user access and authentication.",
            "CCI": "CCI-000767"
        },
        {
            "VulnID": "V-234360",
            "RuleID": "SV-234360r617406_rule",
            "StigID": "SRG-APP-000153-UEM-000087",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000153",
            "RuleTitle": "The UEM server must ensure users are authenticated with an individual authenticator prior to using a group authenticator.",
            "Description": "<VulnDiscussion>To ensure individual accountability and prevent unauthorized access, application users must be individually identified and authenticated. \n\nIndividual accountability mandates that each user is uniquely identified. A group authenticator is a shared account or some other form of authentication that allows multiple unique individuals to access the application using a single account. \n\nIf an application allows or provides for group authenticators, it must first individually authenticate users prior to implementing group authenticator functionality. \n\nSome applications may not have the need to provide a group authenticator; this is considered a matter of application design. In those instances where the application design includes the use of a group authenticator, this requirement will apply.\n\nThere may also be instances when specific user actions need to be performed on the information system without unique user identification or authentication. An example of this type of access is a web server which contains publicly releasable information. \n\nSatisfies: FIA \nReference:PP-MDM-414003</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "To ensure individual accountability and prevent unauthorized access, application users must be individually identified and authenticated. \n\nIndividual accountability mandates that each user is uniquely identified. A group authenticator is a shared account or some other form of authentication that allows multiple unique individuals to access the application using a single account. \n\nIf an application allows or provides for group authenticators, it must first individually authenticate users prior to implementing group authenticator functionality. \n\nSome applications may not have the need to provide a group authenticator; this is considered a matter of application design. In those instances where the application design includes the use of a group authenticator, this requirement will apply.\n\nThere may also be instances when specific user actions need to be performed on the information system without unique user identification or authentication. An example of this type of access is a web server which contains publicly releasable information. \n\nSatisfies: FIA \nReference:PP-MDM-414003",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Requirement is Not Applicable when UEM server is configured to use DoD Central Directory Service for administrator account authentication.\n\nVerify the UEM server ensures users are authenticated with an individual authenticator prior to using a group authenticator.\n\nIf the UEM server does not ensure users are authenticated with an individual authenticator prior to using a group authenticator, this is a finding.",
            "FixText": "Configure the UEM server to ensure users are authenticated with an individual authenticator prior to using a group authenticator.",
            "CCI": "CCI-000770"
        },
        {
            "VulnID": "V-234361",
            "RuleID": "SV-234361r617355_rule",
            "StigID": "SRG-APP-000154-UEM-000088",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000154",
            "RuleTitle": "The UEM server must be configured to use DoD PKI for multifactor authentication. This requirement is included in SRG-APP-000149.",
            "Description": "<VulnDiscussion>Using an authentication device, such as a CAC or token that is separate from the information system, ensures that even if the information system is compromised, that compromise will not affect credentials stored on the authentication device. \n\nMultifactor solutions that require devices separate from information systems gaining access include, for example, hardware tokens providing time-based or challenge-response authenticators and smart cards, such as the U.S. Government Personal Identity Verification card and the DoD common access card.\n\nA privileged account is any information system account with authorizations of a privileged user. \n\nNetwork access is any access to an application by a user (or process acting on behalf of a user) where said access is obtained through a network connection.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Using an authentication device, such as a CAC or token that is separate from the information system, ensures that even if the information system is compromised, that compromise will not affect credentials stored on the authentication device. \n\nMultifactor solutions that require devices separate from information systems gaining access include, for example, hardware tokens providing time-based or challenge-response authenticators and smart cards, such as the U.S. Government Personal Identity Verification card and the DoD common access card.\n\nA privileged account is any information system account with authorizations of a privileged user. \n\nNetwork access is any access to an application by a user (or process acting on behalf of a user) where said access is obtained through a network connection.",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server uses DoD PKI for multifactor authentication.\n\nIf the UEM server does not use DoD PKI for multifactor authentication, this is a finding.",
            "FixText": "Configure the UEM server to use DoD PKI for multifactor authentication.",
            "CCI": "CCI-001936"
        },
        {
            "VulnID": "V-234363",
            "RuleID": "SV-234363r617407_rule",
            "StigID": "SRG-APP-000156-UEM-000090",
            "Severity": "high",
            "Cat": "CAT I",
            "Classification": "",
            "GroupTitle": "SRG-APP-000156",
            "RuleTitle": "The UEM server must use FIPS-validated SHA-2 or higher hash function to provide replay-resistant authentication mechanisms for network access to privileged accounts.",
            "Description": "<VulnDiscussion>A replay attack may enable an unauthorized user to gain access to the application. Authentication sessions between the authenticator and the application validating the user credentials must not be vulnerable to a replay attack.\n\nAnti-replay is a cryptographically based mechanism; thus, it must use FIPS-approved algorithms. An authentication process resists replay attacks if it is impractical to achieve a successful authentication by recording and replaying a previous authentication message. Note that the anti-replay service is implicit when data contains monotonically increasing sequence numbers and data integrity is assured. Use of DoD PKI is inherently compliant with this requirement for user and device access. Use of Transport Layer Security (TLS), including application protocols, such as HTTPS and DNSSEC, that use TLS/SSL as the underlying security protocol is also complaint.\n\nNote: Although allowed by SP800-131Ar1 for some applications, SHA-1 is considered a compromised hashing standard and is being phased out of use by industry and government standards.\n\nConfigure the information system to use the hash message authentication code (HMAC) algorithm for authentication services to Kerberos, SSH, web management tool, and any other access method. \n\nSatisfies: FIA \nReference:PP-MDM-414003</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "A replay attack may enable an unauthorized user to gain access to the application. Authentication sessions between the authenticator and the application validating the user credentials must not be vulnerable to a replay attack.\n\nAnti-replay is a cryptographically based mechanism; thus, it must use FIPS-approved algorithms. An authentication process resists replay attacks if it is impractical to achieve a successful authentication by recording and replaying a previous authentication message. Note that the anti-replay service is implicit when data contains monotonically increasing sequence numbers and data integrity is assured. Use of DoD PKI is inherently compliant with this requirement for user and device access. Use of Transport Layer Security (TLS), including application protocols, such as HTTPS and DNSSEC, that use TLS/SSL as the underlying security protocol is also complaint.\n\nNote: Although allowed by SP800-131Ar1 for some applications, SHA-1 is considered a compromised hashing standard and is being phased out of use by industry and government standards.\n\nConfigure the information system to use the hash message authentication code (HMAC) algorithm for authentication services to Kerberos, SSH, web management tool, and any other access method. \n\nSatisfies: FIA \nReference:PP-MDM-414003",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Requirement is Not Applicable when UEM server is configured to use DoD Central Directory Service for administrator account authentication.\n\nVerify the UEM server uses FIPS-validated SHA-2 or higher hash function to provide replay-resistant authentication mechanisms for network access to privileged accounts.\n\nIf the UEM server does not use FIPS-validated SHA-2 or higher hash function to provide replay-resistant authentication mechanisms for network access to privileged accounts, this is a finding.",
            "FixText": "Configure the UEM server to use FIPS-validated SHA-2 or higher hash function to provide replay-resistant authentication mechanisms for network access to privileged accounts.",
            "CCI": "CCI-001941"
        },
        {
            "VulnID": "V-234364",
            "RuleID": "SV-234364r617408_rule",
            "StigID": "SRG-APP-000157-UEM-000091",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000157",
            "RuleTitle": "The UEM server must implement replay-resistant authentication mechanisms for network access to non-privileged accounts.",
            "Description": "<VulnDiscussion>A replay attack may enable an unauthorized user to gain access to the application. Authentication sessions between the authenticator and the application validating the user credentials must not be vulnerable to a replay attack.\n\nAn authentication process resists replay attacks if it is impractical to achieve a successful authentication by recording and replaying a previous authentication message. \n\nA non-privileged account is any operating system account with authorizations of a non-privileged user. \n\nTechniques used to address this include protocols using nonces (e.g., numbers generated for a specific one-time use) or challenges (e.g., TLS, WS_Security). Additional techniques include time-synchronous or challenge-response one-time authenticators. \n\nSatisfies: FIA \nReference:PP-MDM-414003</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "A replay attack may enable an unauthorized user to gain access to the application. Authentication sessions between the authenticator and the application validating the user credentials must not be vulnerable to a replay attack.\n\nAn authentication process resists replay attacks if it is impractical to achieve a successful authentication by recording and replaying a previous authentication message. \n\nA non-privileged account is any operating system account with authorizations of a non-privileged user. \n\nTechniques used to address this include protocols using nonces (e.g., numbers generated for a specific one-time use) or challenges (e.g., TLS, WS_Security). Additional techniques include time-synchronous or challenge-response one-time authenticators. \n\nSatisfies: FIA \nReference:PP-MDM-414003",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Requirement is Not Applicable when UEM server is configured to use DoD Central Directory Service for administrator account authentication.\n\nVerify the UEM server implements replay-resistant authentication mechanisms for network access to non-privileged accounts.\n\nIf the UEM server does not implement replay-resistant authentication mechanisms for network access to non-privileged accounts, this is a finding.",
            "FixText": "Configure the UEM server to implement replay-resistant authentication mechanisms for network access to non-privileged accounts.",
            "CCI": "CCI-001942"
        },
        {
            "VulnID": "V-234366",
            "RuleID": "SV-234366r617355_rule",
            "StigID": "SRG-APP-000163-UEM-000093",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000163",
            "RuleTitle": "The UEM server must disable identifiers (individuals, groups, roles, and devices) after 35 days of inactivity.",
            "Description": "<VulnDiscussion>Inactive identifiers pose a risk to systems and applications. Attackers that are able to exploit an inactive identifier can potentially obtain and maintain undetected access to the application. Owners of inactive accounts will not notice if unauthorized access to their user account has been obtained. \n\nApplications need to track periods of inactivity and disable application identifiers after 35 days of inactivity. \n\nManagement of user identifiers is not applicable to shared information system accounts (e.g., guest and anonymous accounts). It is commonly the case that a user account is the name of an information system account associated with an individual.\n\nTo avoid having to build complex user management capabilities directly into their application, wise developers leverage the underlying OS or other user account management infrastructure (AD, LDAP) that is already in place within the organization and meets organizational user account management requirements.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Inactive identifiers pose a risk to systems and applications. Attackers that are able to exploit an inactive identifier can potentially obtain and maintain undetected access to the application. Owners of inactive accounts will not notice if unauthorized access to their user account has been obtained. \n\nApplications need to track periods of inactivity and disable application identifiers after 35 days of inactivity. \n\nManagement of user identifiers is not applicable to shared information system accounts (e.g., guest and anonymous accounts). It is commonly the case that a user account is the name of an information system account associated with an individual.\n\nTo avoid having to build complex user management capabilities directly into their application, wise developers leverage the underlying OS or other user account management infrastructure (AD, LDAP) that is already in place within the organization and meets organizational user account management requirements.",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Requirement is Not Applicable when UEM server is configured to use DoD Central Directory Service for administrator account authentication.\n\nVerify the UEM server disables identifiers (individuals, groups, roles, and devices) after 35 days of inactivity.\n\nIf the UEM server does not disable identifiers (individuals, groups, roles, and devices) after 35 days of inactivity, this is a finding.",
            "FixText": "Configure the UEM server to disable identifiers (individuals, groups, roles, and devices) after 35 days of inactivity.",
            "CCI": "CCI-000795"
        },
        {
            "VulnID": "V-234367",
            "RuleID": "SV-234367r617355_rule",
            "StigID": "SRG-APP-000164-UEM-000094",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000164",
            "RuleTitle": "The UEM server must enforce a minimum 15-character password length.",
            "Description": "<VulnDiscussion>The shorter the password, the lower the number of possible combinations that need to be tested before the password is compromised.\n\nPassword complexity, or strength, is a measure of the effectiveness of a password in resisting attempts at guessing and brute-force attacks. Password length is one factor of several that helps to determine strength and how long it takes to crack a password. The shorter the password, the lower the number of possible combinations that need to be tested before the password is compromised. \n\nUse of more characters in a password helps to exponentially increase the time and/or resources required to compromise the password. \n\nSatisfies:FMT_SMF.1(2)b \nReference:PP-MDM-431018</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "The shorter the password, the lower the number of possible combinations that need to be tested before the password is compromised.\n\nPassword complexity, or strength, is a measure of the effectiveness of a password in resisting attempts at guessing and brute-force attacks. Password length is one factor of several that helps to determine strength and how long it takes to crack a password. The shorter the password, the lower the number of possible combinations that need to be tested before the password is compromised. \n\nUse of more characters in a password helps to exponentially increase the time and/or resources required to compromise the password. \n\nSatisfies:FMT_SMF.1(2)b \nReference:PP-MDM-431018",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server enforces a minimum 15-character password length.\n\nIf the UEM server does not enforce a minimum 15-character password length, this is a finding.",
            "FixText": "Configure the UEM server to enforce a minimum 15-character password length.",
            "CCI": "CCI-000205"
        },
        {
            "VulnID": "V-234368",
            "RuleID": "SV-234368r617355_rule",
            "StigID": "SRG-APP-000165-UEM-000095",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000165",
            "RuleTitle": "The UEM server must prohibit password reuse for a minimum of five generations.",
            "Description": "<VulnDiscussion>Password complexity, or strength, is a measure of the effectiveness of a password in resisting attempts at guessing and brute-force attacks. \n\nTo meet password policy requirements, passwords need to be changed at specific policy-based intervals. \n\nIf the information system or application allows the user to consecutively reuse their password when that password has exceeded its defined lifetime, the end result is a password that is not changed as per policy requirements. \n\nSatisfies:FMT_SMF.1(2)b \nReference:PP-MDM-431025</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Password complexity, or strength, is a measure of the effectiveness of a password in resisting attempts at guessing and brute-force attacks. \n\nTo meet password policy requirements, passwords need to be changed at specific policy-based intervals. \n\nIf the information system or application allows the user to consecutively reuse their password when that password has exceeded its defined lifetime, the end result is a password that is not changed as per policy requirements. \n\nSatisfies:FMT_SMF.1(2)b \nReference:PP-MDM-431025",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server prohibits password reuse for a minimum of five generations.\n\nIf the UEM server does not prohibit password reuse for a minimum of five generations, this is a finding.",
            "FixText": "Configure the UEM server to prohibit password reuse for a minimum of five generations.",
            "CCI": "CCI-000200"
        },
        {
            "VulnID": "V-234369",
            "RuleID": "SV-234369r617355_rule",
            "StigID": "SRG-APP-000166-UEM-000096",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000166",
            "RuleTitle": "The UEM server must enforce password complexity by requiring that at least one uppercase character be used.",
            "Description": "<VulnDiscussion>Use of a complex password helps to increase the time and resources required to compromise the password. Password complexity, or strength, is a measure of the effectiveness of a password in resisting attempts at guessing and brute-force attacks.\n\nPassword complexity is one factor of several that determine how long it takes to crack a password. The more complex the password is, the greater the number of possible combinations that need to be tested before the password is compromised. \n\nSatisfies:FMT_SMF.1(2)b \nReference:PP-MDM-431020</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Use of a complex password helps to increase the time and resources required to compromise the password. Password complexity, or strength, is a measure of the effectiveness of a password in resisting attempts at guessing and brute-force attacks.\n\nPassword complexity is one factor of several that determine how long it takes to crack a password. The more complex the password is, the greater the number of possible combinations that need to be tested before the password is compromised. \n\nSatisfies:FMT_SMF.1(2)b \nReference:PP-MDM-431020",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server enforces password complexity by requiring that at least one uppercase character be used.\n\nIf the UEM server does not enforce password complexity by requiring that at least one uppercase character be used, this is a finding.",
            "FixText": "Configure the UEM server to enforce password complexity by requiring that at least one uppercase character be used.",
            "CCI": "CCI-000192"
        },
        {
            "VulnID": "V-234370",
            "RuleID": "SV-234370r617355_rule",
            "StigID": "SRG-APP-000167-UEM-000097",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000167",
            "RuleTitle": "The UEM server must enforce password complexity by requiring that at least one lowercase character be used.",
            "Description": "<VulnDiscussion>Use of a complex password helps to increase the time and resources required to compromise the password. Password complexity, or strength, is a measure of the effectiveness of a password in resisting attempts at guessing and brute-force attacks. \n\nPassword complexity is one factor of several that determine how long it takes to crack a password. The more complex the password, the greater the number of possible combinations that need to be tested before the password is compromised. \n\nSatisfies:FMT_SMF.1(2)b \nReference:PP-MDM-431019</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Use of a complex password helps to increase the time and resources required to compromise the password. Password complexity, or strength, is a measure of the effectiveness of a password in resisting attempts at guessing and brute-force attacks. \n\nPassword complexity is one factor of several that determine how long it takes to crack a password. The more complex the password, the greater the number of possible combinations that need to be tested before the password is compromised. \n\nSatisfies:FMT_SMF.1(2)b \nReference:PP-MDM-431019",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server enforces password complexity by requiring that at least one lowercase character be used.\n\nIf the UEM server does not enforce password complexity by requiring that at least one lowercase character be used, this is a finding.",
            "FixText": "Configure the UEM server to enforce password complexity by requiring that at least one lowercase character be used.",
            "CCI": "CCI-000193"
        },
        {
            "VulnID": "V-234371",
            "RuleID": "SV-234371r617355_rule",
            "StigID": "SRG-APP-000168-UEM-000098",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000168",
            "RuleTitle": "The UEM server must enforce password complexity by requiring that at least one numeric character be used.",
            "Description": "<VulnDiscussion>Use of a complex password helps to increase the time and resources required to compromise the password. Password complexity, or strength, is a measure of the effectiveness of a password in resisting attempts at guessing and brute-force attacks. \n\nPassword complexity is one factor of several that determine how long it takes to crack a password. The more complex the password, the greater the number of possible combinations that need to be tested before the password is compromised. \n\nSatisfies:FMT_SMF.1(2)b \nReference:PP-MDM-431021</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Use of a complex password helps to increase the time and resources required to compromise the password. Password complexity, or strength, is a measure of the effectiveness of a password in resisting attempts at guessing and brute-force attacks. \n\nPassword complexity is one factor of several that determine how long it takes to crack a password. The more complex the password, the greater the number of possible combinations that need to be tested before the password is compromised. \n\nSatisfies:FMT_SMF.1(2)b \nReference:PP-MDM-431021",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server enforces password complexity by requiring that at least one numeric character be used.\n\nIf the UEM server does not enforce password complexity by requiring that at least one numeric character be used, this is a finding.",
            "FixText": "Configure the UEM server to enforce password complexity by requiring that at least one numeric character be used.",
            "CCI": "CCI-000194"
        },
        {
            "VulnID": "V-234372",
            "RuleID": "SV-234372r617355_rule",
            "StigID": "SRG-APP-000169-UEM-000099",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000169",
            "RuleTitle": "The UEM server must enforce password complexity by requiring that at least one special character be used.",
            "Description": "<VulnDiscussion>Use of a complex password helps to increase the time and resources required to compromise the password. Password complexity, or strength, is a measure of the effectiveness of a password in resisting attempts at guessing and brute-force attacks. \n\nPassword complexity is one factor in determining how long it takes to crack a password. The more complex the password, the greater the number of possible combinations that need to be tested before the password is compromised. \n\nSpecial characters are those characters that are not alphanumeric. Examples include: ~ ! @ # $ % ^ *. \n\nSatisfies:FMT_SMF.1(2)b \nReference:PP-MDM-431022</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Use of a complex password helps to increase the time and resources required to compromise the password. Password complexity, or strength, is a measure of the effectiveness of a password in resisting attempts at guessing and brute-force attacks. \n\nPassword complexity is one factor in determining how long it takes to crack a password. The more complex the password, the greater the number of possible combinations that need to be tested before the password is compromised. \n\nSpecial characters are those characters that are not alphanumeric. Examples include: ~ ! @ # $ % ^ *. \n\nSatisfies:FMT_SMF.1(2)b \nReference:PP-MDM-431022",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server enforces password complexity by requiring that at least one special character be used.\n\nIf the UEM server does not enforce password complexity by requiring that at least one special character be used, this is a finding.",
            "FixText": "Configure the UEM server to enforce password complexity by requiring that at least one special character be used.",
            "CCI": "CCI-001619"
        },
        {
            "VulnID": "V-234373",
            "RuleID": "SV-234373r617355_rule",
            "StigID": "SRG-APP-000170-UEM-000100",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000170",
            "RuleTitle": "The UEM server must require the change of at least 15 of the total number of characters when passwords are changed.",
            "Description": "<VulnDiscussion>If the application allows the user to consecutively reuse extensive portions of passwords, this increases the chances of password compromise by increasing the window of opportunity for attempts at guessing and brute-force attacks.\n\nThe number of changed characters refers to the number of changes required with respect to the total number of positions in the current password. In other words, characters may be the same within the two passwords; however, the positions of the like characters must be different.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "If the application allows the user to consecutively reuse extensive portions of passwords, this increases the chances of password compromise by increasing the window of opportunity for attempts at guessing and brute-force attacks.\n\nThe number of changed characters refers to the number of changes required with respect to the total number of positions in the current password. In other words, characters may be the same within the two passwords; however, the positions of the like characters must be different.",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server requires the change of at least 15 of the total number of characters when passwords are changed.\n\nIf the UEM server does not require the change of at least 15 of the total number of characters when passwords are changed, this is a finding.",
            "FixText": "Configure the UEM server to require the change of at least 15 of the total number of characters when passwords are changed.",
            "CCI": "CCI-000195"
        },
        {
            "VulnID": "V-234374",
            "RuleID": "SV-234374r617355_rule",
            "StigID": "SRG-APP-000171-UEM-000101",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000171",
            "RuleTitle": "For UEM server using password authentication, the application must store only cryptographic representations of passwords.",
            "Description": "<VulnDiscussion>Passwords need to be protected at all times, and encryption is the standard method for protecting passwords. If passwords are not encrypted, they can be plainly read and easily compromised. Use of passwords for authentication is intended only for limited situations and should not be used as a replacement for two-factor CAC-enabled authentication. \n\nExamples of situations where a user ID and password might be used include:\n\n- When the user does not use a CAC and is not a current DoD employee, member of the military, or DoD contractor.\n\n- When a user has been officially designated as temporarily unable to present a CAC for some reason (lost, damaged, not yet issued, broken card reader) (i.e., Temporary Exception User) and to satisfy urgent organizational needs must be temporarily permitted to use user ID/password authentication until the problem with CAC use has been remedied.\n\n- When the application is publicly available and or hosting publicly releasable data requiring some degree of need-to-know protection.\n\nIf the password is already encrypted and not a plaintext password, this meets this requirement. Implementation of this requirement requires configuration of FIPS-approved cipher block algorithm and block cipher modes for encryption. This method uses a one-way hashing encryption algorithm with a salt value to validate a user's password without having to store the actual password. Performance and time required to access are factors that must be considered, and the one-way hash is the most feasible means of securing the password and providing an acceptable measure of password security.\n\nVerifying the user knows a password is performed using a password verifier. In its simplest form, a password verifier is a computational function that is capable of creating a hash of a password and determining if the value provided by the user matches the hash. A more secure version of verifying a user knowing a password is to store the result of an iterating hash function and a large random salt value as follows:\n\nH0 = H(pwd, H(salt))\nHn = H(Hn-1,H(salt))\n\nIn the above, \"n\" is a cryptographically-strong random [*3] number. \"Hn\" is stored along with the salt. When the application wishes to verify that the user knows a password, it simply repeats the process and compares \"Hn\" with the stored \"Hn\". A salt is essentially a fixed-length cryptographically strong random value.\n\nAnother method is using a keyed-hash message authentication code (HMAC). HMAC calculates a message authentication code via a cryptographic hash function used in conjunction with an encryption key. The key must be protected as with any private key.\n\nThis requirement applies to all accounts including authentication server, AAA, and local account, including the root account and the account of last resort. \n\nSatisfies:FMT_SMF.1(2)b \nReference:PP-MDM-431008</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Passwords need to be protected at all times, and encryption is the standard method for protecting passwords. If passwords are not encrypted, they can be plainly read and easily compromised. Use of passwords for authentication is intended only for limited situations and should not be used as a replacement for two-factor CAC-enabled authentication. \n\nExamples of situations where a user ID and password might be used include:\n\n- When the user does not use a CAC and is not a current DoD employee, member of the military, or DoD contractor.\n\n- When a user has been officially designated as temporarily unable to present a CAC for some reason (lost, damaged, not yet issued, broken card reader) (i.e., Temporary Exception User) and to satisfy urgent organizational needs must be temporarily permitted to use user ID/password authentication until the problem with CAC use has been remedied.\n\n- When the application is publicly available and or hosting publicly releasable data requiring some degree of need-to-know protection.\n\nIf the password is already encrypted and not a plaintext password, this meets this requirement. Implementation of this requirement requires configuration of FIPS-approved cipher block algorithm and block cipher modes for encryption. This method uses a one-way hashing encryption algorithm with a salt value to validate a user's password without having to store the actual password. Performance and time required to access are factors that must be considered, and the one-way hash is the most feasible means of securing the password and providing an acceptable measure of password security.\n\nVerifying the user knows a password is performed using a password verifier. In its simplest form, a password verifier is a computational function that is capable of creating a hash of a password and determining if the value provided by the user matches the hash. A more secure version of verifying a user knowing a password is to store the result of an iterating hash function and a large random salt value as follows:\n\nH0 = H(pwd, H(salt))\nHn = H(Hn-1,H(salt))\n\nIn the above, \"n\" is a cryptographically-strong random [*3] number. \"Hn\" is stored along with the salt. When the application wishes to verify that the user knows a password, it simply repeats the process and compares \"Hn\" with the stored \"Hn\". A salt is essentially a fixed-length cryptographically strong random value.\n\nAnother method is using a keyed-hash message authentication code (HMAC). HMAC calculates a message authentication code via a cryptographic hash function used in conjunction with an encryption key. The key must be protected as with any private key.\n\nThis requirement applies to all accounts including authentication server, AAA, and local account, including the root account and the account of last resort. \n\nSatisfies:FMT_SMF.1(2)b \nReference:PP-MDM-431008",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "If the UEM server is using password authentication, verify the server stores only cryptographic representations of passwords.\n\nIf the UEM server is using password authentication but does not store only cryptographic representations of passwords, this is a finding.",
            "FixText": "For a UEM server using password authentication, configure the server to store only cryptographic representations of passwords.",
            "CCI": "CCI-000196"
        },
        {
            "VulnID": "V-234375",
            "RuleID": "SV-234375r617355_rule",
            "StigID": "SRG-APP-000172-UEM-000102",
            "Severity": "high",
            "Cat": "CAT I",
            "Classification": "",
            "GroupTitle": "SRG-APP-000172",
            "RuleTitle": "For UEM server using password authentication, the network element must use FIPS-validated SHA-2 or later protocol to protect the integrity of the password authentication process.",
            "Description": "<VulnDiscussion>Passwords need to be protected at all times, and encryption is the standard method for protecting passwords. If passwords are not encrypted, they can be plainly read (i.e., clear text) and easily compromised.\n\nThe information system must specify the hash algorithm used for authenticating passwords. Implementation of this requirement requires configuration of FIPS-approved cipher block algorithm and block cipher modes for encryption.\n\nNote: Although allowed by SP800-131Ar1 for some applications, SHA-1 is considered a compromised hashing standard and is being phased out of use by industry and government standards. Unless required for legacy use, DoD systems must not be configured to use SHA-1 for integrity of remote access sessions. \n\nThis requirement applies to all accounts, including authentication server; Authorization, Authentication, and Accounting (AAA); and local accounts such as the root account and the account of last resort.\n\nThis requirement only applies to components where this is specific to the function of the device (e.g., TLS VPN or ALG). This does not apply to authentication for the purpose of configuring the device itself (management). \n\nSatisfies:FIA_ENR_EXT.1.1, FCS_COP.1.1(2) Refinement</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Passwords need to be protected at all times, and encryption is the standard method for protecting passwords. If passwords are not encrypted, they can be plainly read (i.e., clear text) and easily compromised.\n\nThe information system must specify the hash algorithm used for authenticating passwords. Implementation of this requirement requires configuration of FIPS-approved cipher block algorithm and block cipher modes for encryption.\n\nNote: Although allowed by SP800-131Ar1 for some applications, SHA-1 is considered a compromised hashing standard and is being phased out of use by industry and government standards. Unless required for legacy use, DoD systems must not be configured to use SHA-1 for integrity of remote access sessions. \n\nThis requirement applies to all accounts, including authentication server; Authorization, Authentication, and Accounting (AAA); and local accounts such as the root account and the account of last resort.\n\nThis requirement only applies to components where this is specific to the function of the device (e.g., TLS VPN or ALG). This does not apply to authentication for the purpose of configuring the device itself (management). \n\nSatisfies:FIA_ENR_EXT.1.1, FCS_COP.1.1(2) Refinement",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "For UEM server using password authentication, verify the network element uses FIPS-validated SHA-2 or later protocol to protect the integrity of the password authentication process.\n\nIf UEM server using password authentication but the network element does not use FIPS-validated SHA-2 or later protocol to protect the integrity of the password authentication process, this is a finding.",
            "FixText": "For a UEM server using password authentication, configure the network element to use FIPS-validated SHA-2 or later protocol to protect the integrity of the password authentication process.",
            "CCI": "CCI-000197"
        },
        {
            "VulnID": "V-234376",
            "RuleID": "SV-234376r617355_rule",
            "StigID": "SRG-APP-000173-UEM-000103",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000173",
            "RuleTitle": "The UEM server must enforce 24 hours/1 day as the minimum password lifetime.",
            "Description": "<VulnDiscussion>Enforcing a minimum password lifetime helps prevent repeated password changes to defeat the password reuse or history enforcement requirement.\n\nRestricting this setting limits the user's ability to change their password. Passwords need to be changed at specific policy based intervals; however, if the application allows the user to immediately and continually change their password, then the password could be repeatedly changed in a short period of time to defeat the organization's policy regarding password reuse. \n\nSatisfies:FMT_SMF.1(2)b \nReference:PP-MDM-431023</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Enforcing a minimum password lifetime helps prevent repeated password changes to defeat the password reuse or history enforcement requirement.\n\nRestricting this setting limits the user's ability to change their password. Passwords need to be changed at specific policy based intervals; however, if the application allows the user to immediately and continually change their password, then the password could be repeatedly changed in a short period of time to defeat the organization's policy regarding password reuse. \n\nSatisfies:FMT_SMF.1(2)b \nReference:PP-MDM-431023",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server enforces 24 hours/1 day as the minimum password lifetime.\n\nIf the UEM server does not enforce 24 hours/1 day as the minimum password lifetime, this is a finding.",
            "FixText": "Configure the UEM server to enforce 24 hours/1 day as the minimum password lifetime.",
            "CCI": "CCI-000198"
        },
        {
            "VulnID": "V-234377",
            "RuleID": "SV-234377r617355_rule",
            "StigID": "SRG-APP-000174-UEM-000104",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000174",
            "RuleTitle": "The UEM server must enforce a 60-day maximum password lifetime restriction.",
            "Description": "<VulnDiscussion>Any password, no matter how complex, can eventually be cracked. Therefore, passwords need to be changed at specific intervals. \n\nOne method of minimizing this risk is to use complex passwords and periodically change them. If the application does not limit the lifetime of passwords and force users to change their passwords, there is the risk that the system and/or application passwords could be compromised. \n\nThis requirement does not include emergency administration accounts, which are meant for access to the application in case of failure. These accounts are not required to have maximum password lifetime restrictions. \n\nSatisfies:FMT_SMF.1(2)b \nReference:PP-MDM-431024</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Any password, no matter how complex, can eventually be cracked. Therefore, passwords need to be changed at specific intervals. \n\nOne method of minimizing this risk is to use complex passwords and periodically change them. If the application does not limit the lifetime of passwords and force users to change their passwords, there is the risk that the system and/or application passwords could be compromised. \n\nThis requirement does not include emergency administration accounts, which are meant for access to the application in case of failure. These accounts are not required to have maximum password lifetime restrictions. \n\nSatisfies:FMT_SMF.1(2)b \nReference:PP-MDM-431024",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server enforces a 60-day maximum password lifetime restriction.\n\nIf the UEM server does not enforce a 60-day maximum password lifetime restriction, this is a finding.",
            "FixText": "Configure the UEM server to enforce a 60-day maximum password lifetime restriction.",
            "CCI": "CCI-000199"
        },
        {
            "VulnID": "V-234378",
            "RuleID": "SV-234378r617412_rule",
            "StigID": "SRG-APP-000175-UEM-000105",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000175",
            "RuleTitle": "When using PKI-based authentication for user access, the UEM server must validate certificates by constructing a certification path (which includes status information) to an accepted trust anchor.",
            "Description": "<VulnDiscussion>Without path validation, an informed trust decision by the relying party cannot be made when presented with any certificate not already explicitly trusted. To meet this requirement, the information system must create trusted channels between itself and remote trusted authorized IT product (e.g., syslog server) entities that protect the confidentiality and integrity of communications. The information system must create trusted paths between itself and remote administrators and users that protect the confidentiality and integrity of communications.\n\nA trust anchor is an authoritative entity represented via a public key and associated data. It is most often used in the context of public key infrastructures, X.509 digital certificates, and DNSSEC. However, applications that do not use a trusted path are not approved for non-local and remote management of DoD information systems.\n\nUse of SSHv2 to establish a trusted channel is approved. Use of FTP, TELNET, HTTP, and SNMPV1 is not approved since they violate the trusted channel rule set. Use of web management tools that are not validated by common criteria my also violate trusted channel rule set.\n\nWhen there is a chain of trust, usually the top entity to be trusted becomes the trust anchor; it can be, for example, a Certification Authority (CA). A certification path starts with the subject certificate and proceeds through a number of intermediate certificates up to a trusted root certificate, typically issued by a trusted CA. \n\nThis requirement verifies that a certification path to an accepted trust anchor is used for certificate validation and that the path includes status information. Path validation is necessary for a relying party to make an informed trust decision when presented with any certificate not already explicitly trusted. Status information for certification paths includes certificate revocation lists or online certificate status protocol responses. Validation of the certificate status information is out of scope for this requirement. \n\nSatisfies:FIA_X509_EXT.1.1(1), FIA_X509_EXT.2.1, FIA_X509_EXT.2.2</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Without path validation, an informed trust decision by the relying party cannot be made when presented with any certificate not already explicitly trusted. To meet this requirement, the information system must create trusted channels between itself and remote trusted authorized IT product (e.g., syslog server) entities that protect the confidentiality and integrity of communications. The information system must create trusted paths between itself and remote administrators and users that protect the confidentiality and integrity of communications.\n\nA trust anchor is an authoritative entity represented via a public key and associated data. It is most often used in the context of public key infrastructures, X.509 digital certificates, and DNSSEC. However, applications that do not use a trusted path are not approved for non-local and remote management of DoD information systems.\n\nUse of SSHv2 to establish a trusted channel is approved. Use of FTP, TELNET, HTTP, and SNMPV1 is not approved since they violate the trusted channel rule set. Use of web management tools that are not validated by common criteria my also violate trusted channel rule set.\n\nWhen there is a chain of trust, usually the top entity to be trusted becomes the trust anchor; it can be, for example, a Certification Authority (CA). A certification path starts with the subject certificate and proceeds through a number of intermediate certificates up to a trusted root certificate, typically issued by a trusted CA. \n\nThis requirement verifies that a certification path to an accepted trust anchor is used for certificate validation and that the path includes status information. Path validation is necessary for a relying party to make an informed trust decision when presented with any certificate not already explicitly trusted. Status information for certification paths includes certificate revocation lists or online certificate status protocol responses. Validation of the certificate status information is out of scope for this requirement. \n\nSatisfies:FIA_X509_EXT.1.1(1), FIA_X509_EXT.2.1, FIA_X509_EXT.2.2",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Requirement is Not Applicable when UEM server is configured to use DoD Central Directory Service for administrator account authentication.\n\nWhen using PKI-based authentication for user access, verify the UEM server validates certificates by constructing a certification path (which includes status information) to an accepted trust anchor.\n\nIf the UEM server uses PKI-based authentication for user access but does not validate certificates by constructing a certification path (which includes status information) to an accepted trust anchor, this is a finding.",
            "FixText": "When using PKI-based authentication for user access, configure the UEM server to validate certificates by constructing a certification path (which includes status information) to an accepted trust anchor.",
            "CCI": "CCI-000185"
        },
        {
            "VulnID": "V-234379",
            "RuleID": "SV-234379r617355_rule",
            "StigID": "SRG-APP-000175-UEM-000106",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000175",
            "RuleTitle": "When the UEM server cannot establish a connection to determine the validity of a certificate, the server must be configured not to have the option to accept the certificate.",
            "Description": "<VulnDiscussion>When an UEM server accepts an unverified certificate, it may be trusting a malicious actor. For example, messages signed with an invalid certificate may contain links to malware, which could lead to the installation or distribution of that malware on DoD information systems, leading to compromise of DoD sensitive information and other attacks. \n\nSatisfies:FIA_X509_EXT.2.2 \nReference:PP-MDM-412003</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "When an UEM server accepts an unverified certificate, it may be trusting a malicious actor. For example, messages signed with an invalid certificate may contain links to malware, which could lead to the installation or distribution of that malware on DoD information systems, leading to compromise of DoD sensitive information and other attacks. \n\nSatisfies:FIA_X509_EXT.2.2 \nReference:PP-MDM-412003",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server does not automatically accept a certificate when it cannot establish a connection to determine the validity of a certificate.\n\nIf the UEM server automatically accepts a certificate when it cannot establish a connection to determine the validity of a certificate, this is a finding.",
            "FixText": "Configure the UEM server to not automatically accept a certificate when it cannot establish a connection to determine the validity of a certificate.",
            "CCI": "CCI-000185"
        },
        {
            "VulnID": "V-234380",
            "RuleID": "SV-234380r617355_rule",
            "StigID": "SRG-APP-000176-UEM-000107",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000176",
            "RuleTitle": "The UEM server, when using PKI-based authentication, must enforce authorized access to the corresponding private key.",
            "Description": "<VulnDiscussion>If the private key is discovered, an attacker can use the key to authenticate as an authorized user and gain access to the network infrastructure.\n\nThe cornerstone of the PKI is the private key used to encrypt or digitally sign information. \n\nIf the private key is stolen, this will lead to the compromise of the authentication and non-repudiation gained through PKI because the attacker can use the private key to digitally sign documents and pretend to be the authorized user. \n\nBoth the holders of a digital certificate and the issuing authority must protect the computers, storage devices, or whatever they use to keep the private keys. \n\nSatisfies:FIA_X509_EXT.1.1(1)</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "If the private key is discovered, an attacker can use the key to authenticate as an authorized user and gain access to the network infrastructure.\n\nThe cornerstone of the PKI is the private key used to encrypt or digitally sign information. \n\nIf the private key is stolen, this will lead to the compromise of the authentication and non-repudiation gained through PKI because the attacker can use the private key to digitally sign documents and pretend to be the authorized user. \n\nBoth the holders of a digital certificate and the issuing authority must protect the computers, storage devices, or whatever they use to keep the private keys. \n\nSatisfies:FIA_X509_EXT.1.1(1)",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Requirement is Not Applicable when UEM server is configured to use DoD Central Directory Service for administrator account authentication.\n\nVerify the he UEM server, when using PKI-based authentication, enforces authorized access to the corresponding private key.\n\nIf the UEM server, when using PKI-based authentication, does not enforce authorized access to the corresponding private key, this is a finding",
            "FixText": "Configure the UEM server, when using PKI-based authentication, to enforce authorized access to the corresponding private key.",
            "CCI": "CCI-000186"
        },
        {
            "VulnID": "V-234381",
            "RuleID": "SV-234381r617409_rule",
            "StigID": "SRG-APP-000177-UEM-000108",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000177",
            "RuleTitle": "The UEM server must map the authenticated identity to the individual user or group account for PKI-based authentication.",
            "Description": "<VulnDiscussion>Without mapping the certificate used to authenticate to the user account, the ability to determine the identity of the individual user or group will not be available for forensic analysis. \n\nSatisfies: FIA \nReference:PP-MDM-414003</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Without mapping the certificate used to authenticate to the user account, the ability to determine the identity of the individual user or group will not be available for forensic analysis. \n\nSatisfies: FIA \nReference:PP-MDM-414003",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Requirement is Not Applicable when UEM server is configured to use DoD Central Directory Service for administrator account authentication.\n\nVerify the UEM server maps the authenticated identity to the individual user or group account for PKI-based authentication.\n\nIf the UEM server does not map the authenticated identity to the individual user or group account for PKI-based authentication, this is a finding.",
            "FixText": "Configure the UEM server to map the authenticated identity to the individual user or group account for PKI-based authentication.",
            "CCI": "CCI-000187"
        },
        {
            "VulnID": "V-234382",
            "RuleID": "SV-234382r617355_rule",
            "StigID": "SRG-APP-000178-UEM-000109",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000178",
            "RuleTitle": "The UEM server must obscure feedback of authentication information during the authentication process to protect the information from possible exploitation/use by unauthorized individuals.",
            "Description": "<VulnDiscussion>To prevent the compromise of authentication information such as passwords during the authentication process, the feedback from the information system must not provide any information that would allow an unauthorized user to compromise the authentication mechanism. \n\nObfuscation of user-provided information when typed into the system is a method used in addressing this risk. \n\nFor example, displaying asterisks when a user types in a password is an example of obscuring feedback of authentication information. \n\nSatisfies:FMT_SMF.1(2)b \nReference:PP-MDM-431026</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "To prevent the compromise of authentication information such as passwords during the authentication process, the feedback from the information system must not provide any information that would allow an unauthorized user to compromise the authentication mechanism. \n\nObfuscation of user-provided information when typed into the system is a method used in addressing this risk. \n\nFor example, displaying asterisks when a user types in a password is an example of obscuring feedback of authentication information. \n\nSatisfies:FMT_SMF.1(2)b \nReference:PP-MDM-431026",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server obscures feedback of authentication information during the authentication process to protect the information from possible exploitation/use by unauthorized individuals.\n\nIf the UEM server does not obscure feedback of authentication information during the authentication process to protect the information from possible exploitation/use by unauthorized individuals, this is a finding.",
            "FixText": "Configure the UEM server to obscure feedback of authentication information during the authentication process to protect the information from possible exploitation/use by unauthorized individuals.",
            "CCI": "CCI-000206"
        },
        {
            "VulnID": "V-234383",
            "RuleID": "SV-234383r617355_rule",
            "StigID": "SRG-APP-000179-UEM-000110",
            "Severity": "high",
            "Cat": "CAT I",
            "Classification": "",
            "GroupTitle": "SRG-APP-000179",
            "RuleTitle": "The UEM server must use FIPS-validated SHA-2 or higher hash function to protect the integrity of keyed-hash message authentication code (HMAC), Key Derivation Functions (KDFs), Random Bit Generation, and hash-only applications.",
            "Description": "<VulnDiscussion>Without cryptographic integrity protections, information can be altered by unauthorized users without detection.\n\nNonlocal maintenance and diagnostic activities are activities conducted by individuals communicating through either an external network (e.g., the internet) or an internal network. \n\nNote: Although allowed by SP800-131Ar1 for some applications, SHA-1 is considered a compromised hashing standard and is being phased out of use by industry and government standards. Unless required for legacy use, DoD systems should not be configured to use SHA-1 for integrity of remote access sessions. \n\nTo protect the integrity of the authenticator and authentication mechanism used for the cryptographic module used by the network device, the application, operating system, or protocol must be configured to use one of the following hash functions for hashing the password or other authenticator in accordance with SP 800-131Ar1: SHA-224, SHA-256, SHA-384, SHA-512, SHA-512/224, SHA-512/256, SHA3-224, SHA3-256, SHA3-384, and SHA3-512.\n\nApplications also include HMAC, KDFs, Random Bit Generation, and hash-only applications (e.g., hashing passwords and use for compute a checksum). For digital signature verification, SP800-131Ar1 allows SHA-1 for legacy use only, but this is discouraged by DoD.\n\nSeparate requirements for configuring applications and protocols used by each product (e.g., SNMPv3, SSH, NTP, and other protocols and applications that require server/client authentication) are required to implement this requirement. \n\nSatisfies:FCS_COP.1.1(2)</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Without cryptographic integrity protections, information can be altered by unauthorized users without detection.\n\nNonlocal maintenance and diagnostic activities are activities conducted by individuals communicating through either an external network (e.g., the internet) or an internal network. \n\nNote: Although allowed by SP800-131Ar1 for some applications, SHA-1 is considered a compromised hashing standard and is being phased out of use by industry and government standards. Unless required for legacy use, DoD systems should not be configured to use SHA-1 for integrity of remote access sessions. \n\nTo protect the integrity of the authenticator and authentication mechanism used for the cryptographic module used by the network device, the application, operating system, or protocol must be configured to use one of the following hash functions for hashing the password or other authenticator in accordance with SP 800-131Ar1: SHA-224, SHA-256, SHA-384, SHA-512, SHA-512/224, SHA-512/256, SHA3-224, SHA3-256, SHA3-384, and SHA3-512.\n\nApplications also include HMAC, KDFs, Random Bit Generation, and hash-only applications (e.g., hashing passwords and use for compute a checksum). For digital signature verification, SP800-131Ar1 allows SHA-1 for legacy use only, but this is discouraged by DoD.\n\nSeparate requirements for configuring applications and protocols used by each product (e.g., SNMPv3, SSH, NTP, and other protocols and applications that require server/client authentication) are required to implement this requirement. \n\nSatisfies:FCS_COP.1.1(2)",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server uses FIPS-validated SHA-2 or higher hash function to protect the integrity of keyed-hash message authentication code (HMAC), Key Derivation Functions (KDFs), Random Bit Generation, and hash-only applications.\n\nIf the UEM server does not use FIPS-validated SHA-2 or higher hash function to protect the integrity of keyed-hash message authentication code (HMAC), Key Derivation Functions (KDFs), Random Bit Generation, and hash-only applications, this is a finding.",
            "FixText": "Configure the UEM server to use FIPS-validated SHA-2 or higher hash function to protect the integrity of keyed-hash message authentication code (HMAC), Key Derivation Functions (KDFs), Random Bit Generation, and hash-only applications.",
            "CCI": "CCI-000803"
        },
        {
            "VulnID": "V-234390",
            "RuleID": "SV-234390r617355_rule",
            "StigID": "SRG-APP-000191-UEM-000117",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000191",
            "RuleTitle": "The UEM server must be configured to provide a trusted communication channel between itself and authorized IT entities using [selection:\n-IPsec,\n-SSH,\n-mutually authenticated TLS, \n-mutually authenticated DTLS, \n-HTTPS].",
            "Description": "<VulnDiscussion>Examples of authorized IT entities: audit server, Active Directory, software update server, and database server.\n\nWithout confidentiality protection mechanisms, unauthorized individuals may gain access to sensitive information via a remote access session.\n\nNonlocal maintenance and diagnostic activities are activities conducted by individuals communicating through either an external network (e.g., the internet) or an internal network. \n\nSatisfies:FTP_ITC.1.1(1) Refinement \nReference:PP-MDM-412062</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Examples of authorized IT entities: audit server, Active Directory, software update server, and database server.\n\nWithout confidentiality protection mechanisms, unauthorized individuals may gain access to sensitive information via a remote access session.\n\nNonlocal maintenance and diagnostic activities are activities conducted by individuals communicating through either an external network (e.g., the internet) or an internal network. \n\nSatisfies:FTP_ITC.1.1(1) Refinement \nReference:PP-MDM-412062",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server provides a trusted communication channel between itself and authorized IT entities using [selection:\n-IPsec,\n-SSH,\n-mutually authenticated TLS, \n-mutually authenticated DTLS, \n-HTTPS].\n\nIf the UEM server does not provide a trusted communication channel between itself and authorized IT entities using [selection:\n-IPsec,\n-SSH,\n-mutually authenticated TLS, \n-mutually authenticated DTLS, \n-HTTPS], this is a finding.",
            "FixText": "Configure the UEM server to provide a trusted communication channel between itself and authorized IT entities using [selection:\n-IPsec,\n-SSH,\n-mutually authenticated TLS, \n-mutually authenticated DTLS, \n-HTTPS].",
            "CCI": "CCI-001135"
        },
        {
            "VulnID": "V-234391",
            "RuleID": "SV-234391r617355_rule",
            "StigID": "SRG-APP-000191-UEM-000118",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000191",
            "RuleTitle": "The UEM server must be configured to invoke either host-OS functionality or server functionality to provide a trusted communication channel between itself and remote administrators that provides assured identification of its endpoints and protection of the communicated data from modification and disclosure using [selection:-IPsec,-SSH,-TLS, -HTTPS].",
            "Description": "<VulnDiscussion>Without confidentiality protection mechanisms, unauthorized individuals may gain access to sensitive information via a remote access session.\n\nNonlocal maintenance and diagnostic activities are activities conducted by individuals communicating through either an external network (e.g., the internet) or an internal network. \n\nSatisfies:FTP_TRP.1.1(1) Refinement</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Without confidentiality protection mechanisms, unauthorized individuals may gain access to sensitive information via a remote access session.\n\nNonlocal maintenance and diagnostic activities are activities conducted by individuals communicating through either an external network (e.g., the internet) or an internal network. \n\nSatisfies:FTP_TRP.1.1(1) Refinement",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server invokes either host-OS functionality or server functionality to provide a trusted communication channel between itself and remote administrators that provides assured identification of its endpoints and protection of the communicated data from modification and disclosure using [selection:\n-IPsec,\n-SSH,\n-TLS, \n-HTTPS].\n\nIf the UEM server does not invoke either host-OS functionality or server functionality to provide a trusted communication channel between itself and remote administrators that provides assured identification of its endpoints and protection of the communicated data from modification and disclosure using [selection:\n-IPsec,\n-SSH,\n-TLS, \n-HTTPS], this is a finding.",
            "FixText": "Configure the UEM server to invoke either host-OS functionality or server functionality to provide a trusted communication channel between itself and remote administrators that provides assured identification of its endpoints and protection of the communicated data from modification and disclosure using [selection:\n-IPsec,\n-SSH,\n-TLS, \n-HTTPS].",
            "CCI": "CCI-001135"
        },
        {
            "VulnID": "V-234392",
            "RuleID": "SV-234392r617355_rule",
            "StigID": "SRG-APP-000191-UEM-000119",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000191",
            "RuleTitle": "The UEM server must be configured to invoke either host-OS functionality or server functionality to provide a trusted communication channel between itself and managed devices that provides assured identification of its endpoints and protection of the communicated data from modification and disclosure using [selection:-TLS, -HTTPS].",
            "Description": "<VulnDiscussion>Without confidentiality protection mechanisms, unauthorized individuals may gain access to sensitive information via a remote access session.\n\nNonlocal maintenance and diagnostic activities are activities conducted by individuals communicating through either an external network (e.g., the internet) or an internal network. \n\nSatisfies:FTP_TRP.1.1(2) Refinement</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Without confidentiality protection mechanisms, unauthorized individuals may gain access to sensitive information via a remote access session.\n\nNonlocal maintenance and diagnostic activities are activities conducted by individuals communicating through either an external network (e.g., the internet) or an internal network. \n\nSatisfies:FTP_TRP.1.1(2) Refinement",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server invokes either host-OS functionality or server functionality to provide a trusted communication channel between itself and managed devices that provides assured identification of its endpoints and protection of the communicated data from modification and disclosure using [selection:\n-TLS, \n-HTTPS].\n\nIf the UEM server does not invoke either host-OS functionality or server functionality to provide a trusted communication channel between itself and managed devices that provides assured identification of its endpoints and protection of the communicated data from modification and disclosure using [selection:\n-TLS, \n-HTTPS], this is a finding.",
            "FixText": "Configure the UEM server to invoke either host-OS functionality or server functionality to provide a trusted communication channel between itself and managed devices that provides assured identification of its endpoints and protection of the communicated data from modification and disclosure using [selection:\n-TLS, \n-HTTPS].",
            "CCI": "CCI-001135"
        },
        {
            "VulnID": "V-234405",
            "RuleID": "SV-234405r617355_rule",
            "StigID": "SRG-APP-000219-UEM-000132",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000219",
            "RuleTitle": "The UEM server must protect the authenticity of communications sessions.",
            "Description": "<VulnDiscussion>Authenticity protection provides protection against man-in-the-middle attacks/session hijacking and the insertion of false information into sessions.\n\nApplication communication sessions are protected utilizing transport encryption protocols, such as TLS. TLS provides web applications with a means to be able to authenticate user sessions and encrypt application traffic. Session authentication can be single (one-way) or mutual (two-way) in nature. Single authentication authenticates the server for the client, whereas mutual authentication provides a means for both the client and the server to authenticate each other. \n\nThis requirement applies to applications that utilize communications sessions. This includes, but is not limited to, web-based applications and Service-Oriented Architectures (SOA). \n\nThis requirement addresses communications protection at the application session, versus the network packet, and establishes grounds for confidence at both ends of communications sessions in ongoing identities of other parties and in the validity of information transmitted. Depending on the required degree of confidentiality and integrity, web services/SOA will require the use of TLS mutual authentication (two-way/bidirectional). \n\nSatisfies:FIA_ENR_EXT.1.1, FTP_TRP.1.1(2), FTP_TRP.1.1(1)</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Authenticity protection provides protection against man-in-the-middle attacks/session hijacking and the insertion of false information into sessions.\n\nApplication communication sessions are protected utilizing transport encryption protocols, such as TLS. TLS provides web applications with a means to be able to authenticate user sessions and encrypt application traffic. Session authentication can be single (one-way) or mutual (two-way) in nature. Single authentication authenticates the server for the client, whereas mutual authentication provides a means for both the client and the server to authenticate each other. \n\nThis requirement applies to applications that utilize communications sessions. This includes, but is not limited to, web-based applications and Service-Oriented Architectures (SOA). \n\nThis requirement addresses communications protection at the application session, versus the network packet, and establishes grounds for confidence at both ends of communications sessions in ongoing identities of other parties and in the validity of information transmitted. Depending on the required degree of confidentiality and integrity, web services/SOA will require the use of TLS mutual authentication (two-way/bidirectional). \n\nSatisfies:FIA_ENR_EXT.1.1, FTP_TRP.1.1(2), FTP_TRP.1.1(1)",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server protects the authenticity of communications sessions.\n\nIf the UEM server does not protect the authenticity of communications sessions, this is a finding.",
            "FixText": "Configure the UEM server to protect the authenticity of communications sessions.",
            "CCI": "CCI-001184"
        },
        {
            "VulnID": "V-234406",
            "RuleID": "SV-234406r617355_rule",
            "StigID": "SRG-APP-000220-UEM-000133",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000220",
            "RuleTitle": "The UEM server must invalidate session identifiers upon user logout or other session termination.",
            "Description": "<VulnDiscussion>Captured sessions can be reused in \"replay\" attacks. This requirement limits the ability of adversaries from capturing and continuing to employ previously valid session IDs.\n\nThis requirement focuses on communications protection for the application session rather than for the network packet. This requirement applies to applications that utilize communications sessions. This includes, but is not limited to, web-based applications and Service-Oriented Architectures (SOA). \n\nSession IDs are tokens generated by web applications to uniquely identify an application user's session. Applications will make application decisions and execute business logic based on the session ID. Unique session identifiers or IDs are the opposite of sequentially generated session IDs, which can be easily guessed by an attacker. Unique session IDs help to reduce predictability of said identifiers. When a user logs out, or when any other session termination event occurs, the application must terminate the user session to minimize the potential for an attacker to hijack that particular user session.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Captured sessions can be reused in \"replay\" attacks. This requirement limits the ability of adversaries from capturing and continuing to employ previously valid session IDs.\n\nThis requirement focuses on communications protection for the application session rather than for the network packet. This requirement applies to applications that utilize communications sessions. This includes, but is not limited to, web-based applications and Service-Oriented Architectures (SOA). \n\nSession IDs are tokens generated by web applications to uniquely identify an application user's session. Applications will make application decisions and execute business logic based on the session ID. Unique session identifiers or IDs are the opposite of sequentially generated session IDs, which can be easily guessed by an attacker. Unique session IDs help to reduce predictability of said identifiers. When a user logs out, or when any other session termination event occurs, the application must terminate the user session to minimize the potential for an attacker to hijack that particular user session.",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server invalidates session identifiers upon user logout or other session termination.\n\nIf the UEM server does not invalidate session identifiers upon user logout or other session termination, this is a finding.",
            "FixText": "Configure the UEM server to invalidate session identifiers upon user logout or other session termination.",
            "CCI": "CCI-001185"
        },
        {
            "VulnID": "V-234407",
            "RuleID": "SV-234407r617355_rule",
            "StigID": "SRG-APP-000223-UEM-000134",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000223",
            "RuleTitle": "The UEM server must recognize only system-generated session identifiers.",
            "Description": "<VulnDiscussion>Applications utilize sessions and session identifiers to control application behavior and user access. If an attacker can guess the session identifier, or can inject or manually insert session information, the session may be compromised.\n\nUnique session IDs address man-in-the-middle attacks, including session hijacking or insertion of false information into a session. If the attacker is unable to identify or guess the session information related to pending application traffic, they will have more difficulty in hijacking the session or otherwise manipulating valid sessions.\n\nThis requirement focuses on communications protection for the application session rather than for the network packet. This requirement applies to applications that utilize communications sessions. This includes, but is not limited to, web-based applications and Service-Oriented Architectures (SOA).</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Applications utilize sessions and session identifiers to control application behavior and user access. If an attacker can guess the session identifier, or can inject or manually insert session information, the session may be compromised.\n\nUnique session IDs address man-in-the-middle attacks, including session hijacking or insertion of false information into a session. If the attacker is unable to identify or guess the session information related to pending application traffic, they will have more difficulty in hijacking the session or otherwise manipulating valid sessions.\n\nThis requirement focuses on communications protection for the application session rather than for the network packet. This requirement applies to applications that utilize communications sessions. This includes, but is not limited to, web-based applications and Service-Oriented Architectures (SOA).",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server recognizes only system-generated session identifiers.\n\nIf the UEM server does not recognize only system-generated session identifiers, this is a finding.",
            "FixText": "Configure the UEM server to recognize only system-generated session identifiers.",
            "CCI": "CCI-001664"
        },
        {
            "VulnID": "V-234408",
            "RuleID": "SV-234408r617355_rule",
            "StigID": "SRG-APP-000224-UEM-000135",
            "Severity": "high",
            "Cat": "CAT I",
            "Classification": "",
            "GroupTitle": "SRG-APP-000224",
            "RuleTitle": "The UEM server must generate unique session identifiers using a FIPS-validated Random Number Generator (RNG) based on the Deterministic Random Bit Generators (DRBG) algorithm.",
            "Description": "<VulnDiscussion>Sequentially generated session IDs can be easily guessed by an attacker. Employing the concept of randomness in the generation of unique session identifiers helps to protect against brute-force attacks to determine future session identifiers.\n\nUnique session IDs address man-in-the-middle attacks, including session hijacking or insertion of false information into a session. If the attacker is unable to identify or guess the session information related to pending application traffic, they will have more difficulty in hijacking the session or otherwise manipulating valid sessions. \n\nThe DRBGs Hash_DRBG, HMAC_DRBG, and CTR_DRBG are recommended for use with RNGs. \n\nThis requirement is applicable to devices that use a web interface for device management. \n\nSatisfies:FCS_RBG_EXT.1.1, FIA_UAU.1.1, FIA_UAU.1.2</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Sequentially generated session IDs can be easily guessed by an attacker. Employing the concept of randomness in the generation of unique session identifiers helps to protect against brute-force attacks to determine future session identifiers.\n\nUnique session IDs address man-in-the-middle attacks, including session hijacking or insertion of false information into a session. If the attacker is unable to identify or guess the session information related to pending application traffic, they will have more difficulty in hijacking the session or otherwise manipulating valid sessions. \n\nThe DRBGs Hash_DRBG, HMAC_DRBG, and CTR_DRBG are recommended for use with RNGs. \n\nThis requirement is applicable to devices that use a web interface for device management. \n\nSatisfies:FCS_RBG_EXT.1.1, FIA_UAU.1.1, FIA_UAU.1.2",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server generates unique session identifiers using a FIPS-validated RNG based on the DRBG algorithm.\n\nIf the UEM server does not generate unique session identifiers using a FIPS-validated RNG based on the DRBG algorithm, this is a finding.",
            "FixText": "Configure the UEM server to generate unique session identifiers using a FIPS-validated RNG based on the DRBG algorithm.",
            "CCI": "CCI-001188"
        },
        {
            "VulnID": "V-234409",
            "RuleID": "SV-234409r617355_rule",
            "StigID": "SRG-APP-000225-UEM-000136",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000225",
            "RuleTitle": "The UEM server must fail to a secure state if system initialization fails, shutdown fails, or aborts fail.",
            "Description": "<VulnDiscussion>Failure to a known safe state helps prevent systems from failing to a state that may cause loss of data or unauthorized access to system resources. Applications or systems that fail suddenly and with no incorporated failure state planning may leave the hosting system available but with a reduced security protection capability. Preserving information system state information also facilitates system restart and return to the operational mode of the organization with less disruption of mission-essential processes. \n\nIn general, application security mechanisms should be designed so that a failure will follow the same execution path as disallowing the operation. For example, security methods, such as isAuthorized(), isAuthenticated(), and validate(), should all return false if there is an exception during processing. If security controls can throw exceptions, they must be very clear about exactly what that condition means. \n\nAbort refers to stopping a program or function before it has finished naturally. The term abort refers to both requested and unexpected terminations. \n\nSatisfies:FPT_TST_EXT.1.2</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Failure to a known safe state helps prevent systems from failing to a state that may cause loss of data or unauthorized access to system resources. Applications or systems that fail suddenly and with no incorporated failure state planning may leave the hosting system available but with a reduced security protection capability. Preserving information system state information also facilitates system restart and return to the operational mode of the organization with less disruption of mission-essential processes. \n\nIn general, application security mechanisms should be designed so that a failure will follow the same execution path as disallowing the operation. For example, security methods, such as isAuthorized(), isAuthenticated(), and validate(), should all return false if there is an exception during processing. If security controls can throw exceptions, they must be very clear about exactly what that condition means. \n\nAbort refers to stopping a program or function before it has finished naturally. The term abort refers to both requested and unexpected terminations. \n\nSatisfies:FPT_TST_EXT.1.2",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server fails to a secure state if system initialization fails, shutdown fails, or aborts fail.\n\nIf the UEM server does not fail to a secure state if system initialization fails, shutdown fails, or aborts fail, this is a finding.",
            "FixText": "Configure the UEM server to fail to a secure state if system initialization fails, shutdown fails, or aborts fail.",
            "CCI": "CCI-001190"
        },
        {
            "VulnID": "V-234410",
            "RuleID": "SV-234410r617413_rule",
            "StigID": "SRG-APP-000226-UEM-000137",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000226",
            "RuleTitle": "In the event of a system failure, the UEM server must preserve any information necessary to determine cause of failure and any information necessary to return to operations with least disruption to mission processes.",
            "Description": "<VulnDiscussion>Failure to a known state can address safety or security in accordance with the mission/business needs of the organization. Failure to a known secure state helps prevent a loss of confidentiality, integrity, or availability in the event of a failure of the information system or a component of the system. Preserving application state information helps to facilitate application restart and return to the operational mode of the organization with less disruption to mission-essential processes. \n\nSatisfies:FAU_GEN.1.1(1)</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Failure to a known state can address safety or security in accordance with the mission/business needs of the organization. Failure to a known secure state helps prevent a loss of confidentiality, integrity, or availability in the event of a failure of the information system or a component of the system. Preserving application state information helps to facilitate application restart and return to the operational mode of the organization with less disruption to mission-essential processes. \n\nSatisfies:FAU_GEN.1.1(1)",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server preserves any information necessary to determine cause of failure and any information necessary to return to operations with least disruption to mission processes, in the event of a system failure.\n\nIf the UEM server does not preserve any information necessary to determine cause of failure and any information necessary to return to operations with least disruption to mission processes, in the event of a system failure, this is a finding.",
            "FixText": "Configure the UEM server to preserve any information necessary to determine cause of failure and any information necessary to return to operations with least disruption to mission processes, in the event of a system failure.",
            "CCI": "CCI-001665"
        },
        {
            "VulnID": "V-234421",
            "RuleID": "SV-234421r617398_rule",
            "StigID": "SRG-APP-000251-UEM-000148",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000251",
            "RuleTitle": "The UEM server must check the validity of all data inputs.",
            "Description": "<VulnDiscussion>Invalid user input occurs when a user inserts data or characters into an application's data entry fields and the application is unprepared to process that data. This results in unanticipated application behavior, potentially leading to an application or information system compromise. Invalid input is one of the primary methods employed when attempting to compromise an application. \n\nChecking the valid syntax and semantics of information system inputs (e.g., character set, length, numerical range, and acceptable values) verifies that inputs match specified definitions for format and content. Software applications typically follow well-defined protocols that use structured messages (i.e., commands or queries) to communicate between software modules or system components. Structured messages can contain raw or unstructured data interspersed with metadata or control information. If software applications use attacker-supplied inputs to construct structured messages without properly encoding such messages, then the attacker could insert malicious commands or special characters that can cause the data to be interpreted as control information or metadata. Consequently, the module or component that receives the tainted output will perform the wrong operations or otherwise interpret the data incorrectly. Prescreening inputs prior to passing to interpreters prevents the content from being unintentionally interpreted as commands. Input validation helps to ensure accurate and correct inputs and prevent attacks such as cross-site scripting and a variety of injection attacks.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Invalid user input occurs when a user inserts data or characters into an application's data entry fields and the application is unprepared to process that data. This results in unanticipated application behavior, potentially leading to an application or information system compromise. Invalid input is one of the primary methods employed when attempting to compromise an application. \n\nChecking the valid syntax and semantics of information system inputs (e.g., character set, length, numerical range, and acceptable values) verifies that inputs match specified definitions for format and content. Software applications typically follow well-defined protocols that use structured messages (i.e., commands or queries) to communicate between software modules or system components. Structured messages can contain raw or unstructured data interspersed with metadata or control information. If software applications use attacker-supplied inputs to construct structured messages without properly encoding such messages, then the attacker could insert malicious commands or special characters that can cause the data to be interpreted as control information or metadata. Consequently, the module or component that receives the tainted output will perform the wrong operations or otherwise interpret the data incorrectly. Prescreening inputs prior to passing to interpreters prevents the content from being unintentionally interpreted as commands. Input validation helps to ensure accurate and correct inputs and prevent attacks such as cross-site scripting and a variety of injection attacks.",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server checks the validity of all data inputs.\n\nIf the UEM server does not check the validity of all data inputs, this is a finding.",
            "FixText": "Configure the UEM server to check the validity of all data inputs.",
            "CCI": "CCI-001310"
        },
        {
            "VulnID": "V-234424",
            "RuleID": "SV-234424r617355_rule",
            "StigID": "SRG-APP-000266-UEM-000151",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000266",
            "RuleTitle": "The UEM server must generate error messages that provide information necessary for corrective actions without revealing information that could be exploited by adversaries.",
            "Description": "<VulnDiscussion>Any application providing too much information in error messages risks compromising the data and security of the application and system. The structure and content of error messages needs to be carefully considered by the organization and development team. \n\nOrganizations carefully consider the structure/content of error messages. The extent to which information systems are able to identify and handle error conditions is guided by organizational policy and operational requirements. Information that could be exploited by adversaries includes, for example, erroneous logon attempts with passwords entered by mistake as the username, mission/business information that can be derived from (if not stated explicitly by) information recorded, and personal information, such as account numbers, social security numbers, and credit card numbers. \n\nSatisfies:FAU_ALT_EXT.1.1, FPT_TST_EXT.1, FAU_GEN.1.2(1), FIA_UAU.1.2, FMT_SMR.1.1(1)</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Any application providing too much information in error messages risks compromising the data and security of the application and system. The structure and content of error messages needs to be carefully considered by the organization and development team. \n\nOrganizations carefully consider the structure/content of error messages. The extent to which information systems are able to identify and handle error conditions is guided by organizational policy and operational requirements. Information that could be exploited by adversaries includes, for example, erroneous logon attempts with passwords entered by mistake as the username, mission/business information that can be derived from (if not stated explicitly by) information recorded, and personal information, such as account numbers, social security numbers, and credit card numbers. \n\nSatisfies:FAU_ALT_EXT.1.1, FPT_TST_EXT.1, FAU_GEN.1.2(1), FIA_UAU.1.2, FMT_SMR.1.1(1)",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server generates error messages that provide information necessary for corrective actions without revealing information that could be exploited by adversaries.\n\nIf the UEM server does not generate error messages that provide information necessary for corrective actions without revealing information that could be exploited by adversaries, this is a finding.",
            "FixText": "Configure the UEM server to generate error messages that provide information necessary for corrective actions without revealing information that could be exploited by adversaries.",
            "CCI": "CCI-001312"
        },
        {
            "VulnID": "V-234425",
            "RuleID": "SV-234425r617355_rule",
            "StigID": "SRG-APP-000267-UEM-000152",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000267",
            "RuleTitle": "The UEM server must reveal error messages only to the Information System Security Manager (ISSM) and Information System Security Officer (ISSO).",
            "Description": "<VulnDiscussion>Only authorized personnel should be aware of errors and the details of the errors. Error messages are an indicator of an organization's operational state or can identify the application. Additionally, Personally Identifiable Information (PII) and operational information must not be revealed through error messages to unauthorized personnel or their designated representatives.\n\nThe structure and content of error messages must be carefully considered by the organization and development team. The extent to which the information system is able to identify and handle error conditions is guided by organizational policy and operational requirements. \n\nSatisfies:FPT_TST_EXT.1, FAU_GEN.1.2(1), FIA_UAU.1.2, FMT_SMR.1.1(1)</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Only authorized personnel should be aware of errors and the details of the errors. Error messages are an indicator of an organization's operational state or can identify the application. Additionally, Personally Identifiable Information (PII) and operational information must not be revealed through error messages to unauthorized personnel or their designated representatives.\n\nThe structure and content of error messages must be carefully considered by the organization and development team. The extent to which the information system is able to identify and handle error conditions is guided by organizational policy and operational requirements. \n\nSatisfies:FPT_TST_EXT.1, FAU_GEN.1.2(1), FIA_UAU.1.2, FMT_SMR.1.1(1)",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server reveals error messages only to the ISSM and ISSO.\n\nIf the UEM server does not reveal error messages only to the ISSM and ISSO, this is a finding.",
            "FixText": "Configure the UEM server to reveal error messages only to the ISSM and ISSO.",
            "CCI": "CCI-001314"
        },
        {
            "VulnID": "V-234426",
            "RuleID": "SV-234426r617355_rule",
            "StigID": "SRG-APP-000268-UEM-000153",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000268",
            "RuleTitle": "The UEM server must, when a component failure is detected, activate an organization-defined alarm and/or automatically shut down the application or the component.",
            "Description": "<VulnDiscussion>Predictable failure prevention requires organizational planning to address system failure issues. If components key to maintaining systems security fail to function, the system could continue operating in an insecure state. The organization must be prepared and the application must support requirements that specify if the application must alarm for such conditions and/or automatically shut down the application or the system. \n\nThis can include conducting a graceful application shutdown to avoid losing information. Automatic or manual transfer of components from standby to active mode can occur, for example, upon detection of component failures. \n\nSatisfies:FAU_ALT_EXT.1.1, FAU_GEN.1.1(1), FMT_SMF.1.1(2)c.8 \nReference:PP-MDM-411065, PP-MDM-412000</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Predictable failure prevention requires organizational planning to address system failure issues. If components key to maintaining systems security fail to function, the system could continue operating in an insecure state. The organization must be prepared and the application must support requirements that specify if the application must alarm for such conditions and/or automatically shut down the application or the system. \n\nThis can include conducting a graceful application shutdown to avoid losing information. Automatic or manual transfer of components from standby to active mode can occur, for example, upon detection of component failures. \n\nSatisfies:FAU_ALT_EXT.1.1, FAU_GEN.1.1(1), FMT_SMF.1.1(2)c.8 \nReference:PP-MDM-411065, PP-MDM-412000",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server, when a component failure is detected, activates an organization-defined alarm and/or automatically shuts down the application or the component.\n\nIf the UEM server, when a component failure is detected, does not activate an organization-defined alarm and/or automatically shut down the application or the component, this is a finding.",
            "FixText": "Configure the UEM server to activate an organization-defined alarm and/or automatically shut down the application or the component when a component failure is detected.",
            "CCI": "CCI-001328"
        },
        {
            "VulnID": "V-234430",
            "RuleID": "SV-234430r617355_rule",
            "StigID": "SRG-APP-000275-UEM-000157",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000275",
            "RuleTitle": "The application must notify the Information System Security Manager (ISSM) and Information System Security Officer (ISSO) of failed security verification tests.",
            "Description": "<VulnDiscussion>If personnel are not notified of failed security verification tests, they will not be able to take corrective action and the unsecure condition(s) will remain. \n\nSecurity function is defined as the hardware, software, and/or firmware of the information system responsible for enforcing the system security policy and supporting the isolation of code and data on which the protection is based. Security functionality includes, but is not limited to, establishing system accounts, configuring access authorizations (i.e., permissions, privileges), setting events to be audited, and setting intrusion detection parameters.\n\nNotifications provided by information systems include messages to local computer consoles, and/or hardware indications, such as lights.\n\nThis requirement applies to applications performing security functions and the applications performing security function verification/testing. \n\nSatisfies:FAU_ALT_EXT.1.1, FAU_GEN.1.1(1), FMT_SMF.1.1(2)c.8 \nReference:PP-MDM-411065, PP-MDM-412000</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "If personnel are not notified of failed security verification tests, they will not be able to take corrective action and the unsecure condition(s) will remain. \n\nSecurity function is defined as the hardware, software, and/or firmware of the information system responsible for enforcing the system security policy and supporting the isolation of code and data on which the protection is based. Security functionality includes, but is not limited to, establishing system accounts, configuring access authorizations (i.e., permissions, privileges), setting events to be audited, and setting intrusion detection parameters.\n\nNotifications provided by information systems include messages to local computer consoles, and/or hardware indications, such as lights.\n\nThis requirement applies to applications performing security functions and the applications performing security function verification/testing. \n\nSatisfies:FAU_ALT_EXT.1.1, FAU_GEN.1.1(1), FMT_SMF.1.1(2)c.8 \nReference:PP-MDM-411065, PP-MDM-412000",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server notifies the ISSO and ISSM of failed security verification tests.\n\nIf the UEM server does not notify the ISSO and ISSM of failed security verification tests, this is a finding.",
            "FixText": "Configure the UEM server to notify the ISSO and ISSM of failed security verification tests.",
            "CCI": "CCI-001294"
        },
        {
            "VulnID": "V-234438",
            "RuleID": "SV-234438r617355_rule",
            "StigID": "SRG-APP-000291-UEM-000165",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000291",
            "RuleTitle": "The UEM server must notify system administrators and the Information System Security Officer (ISSO) when accounts are created.",
            "Description": "<VulnDiscussion>Once an attacker establishes access to an application, the attacker often attempts to create a persistent method of re-establishing access. One way to accomplish this is for the attacker to simply create a new account. Sending notification of account creation events to the system administrator and ISSO is one method for mitigating this risk.\n\nTo address access requirements, many application developers choose to integrate their applications with enterprise-level authentication/access/auditing mechanisms that meet or exceed access control policy requirements. Such integration allows the application developer to off-load those access control functions and focus on core application features and functionality. \n\nSatisfies:FAU_ALT_EXT.1.1, FAU_GEN.1.1(1), FMT_SMF.1.1(2)c.8 \nReference:PP-MDM-411065, PP-MDM-412000</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Once an attacker establishes access to an application, the attacker often attempts to create a persistent method of re-establishing access. One way to accomplish this is for the attacker to simply create a new account. Sending notification of account creation events to the system administrator and ISSO is one method for mitigating this risk.\n\nTo address access requirements, many application developers choose to integrate their applications with enterprise-level authentication/access/auditing mechanisms that meet or exceed access control policy requirements. Such integration allows the application developer to off-load those access control functions and focus on core application features and functionality. \n\nSatisfies:FAU_ALT_EXT.1.1, FAU_GEN.1.1(1), FMT_SMF.1.1(2)c.8 \nReference:PP-MDM-411065, PP-MDM-412000",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Requirement is Not Applicable when UEM server is configured to use DoD Central Directory Service for administrator account authentication.\n\nVerify the UEM server notify system administrators and ISSO when accounts are created.\n\nIf the UEM server does not notify system administrators and the ISSO when accounts are created, this is a finding.",
            "FixText": "Configure the UEM server to notify system administrators and the ISSO when accounts are created.",
            "CCI": "CCI-001683"
        },
        {
            "VulnID": "V-234439",
            "RuleID": "SV-234439r617355_rule",
            "StigID": "SRG-APP-000292-UEM-000166",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000292",
            "RuleTitle": "The UEM server must notify system administrators and the Information System Security Officer (ISSO) when accounts are modified.",
            "Description": "<VulnDiscussion>When application accounts are modified, user accessibility is affected. Accounts are utilized for identifying individual users or for identifying the application processes themselves. Sending notification of account modification events to the system administrator and ISSO is one method for mitigating this risk. Such a capability greatly reduces the risk that application accessibility will be negatively affected for extended periods of time and also provides logging that can be used for forensic purposes.\n\nTo address access requirements, many operating systems can be integrated with enterprise-level authentication/access/auditing mechanisms that meet or exceed access control policy requirements. \n\nSatisfies:FAU_ALT_EXT.1.1, FAU_GEN.1.1(1), FMT_SMF.1.1(2)c.8 \nReference:PP-MDM-411065, PP-MDM-412000</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "When application accounts are modified, user accessibility is affected. Accounts are utilized for identifying individual users or for identifying the application processes themselves. Sending notification of account modification events to the system administrator and ISSO is one method for mitigating this risk. Such a capability greatly reduces the risk that application accessibility will be negatively affected for extended periods of time and also provides logging that can be used for forensic purposes.\n\nTo address access requirements, many operating systems can be integrated with enterprise-level authentication/access/auditing mechanisms that meet or exceed access control policy requirements. \n\nSatisfies:FAU_ALT_EXT.1.1, FAU_GEN.1.1(1), FMT_SMF.1.1(2)c.8 \nReference:PP-MDM-411065, PP-MDM-412000",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Requirement is Not Applicable when UEM server is configured to use DoD Central Directory Service for administrator account authentication.\n\nVerify the UEM server notifies system administrators and the ISSO when accounts are modified.\n\nIf the UEM server does not notify system administrators and the ISSO when accounts are modified, this is a finding.",
            "FixText": "Configure the UEM server to notify system administrators and the ISSO when accounts are modified.",
            "CCI": "CCI-001684"
        },
        {
            "VulnID": "V-234440",
            "RuleID": "SV-234440r617355_rule",
            "StigID": "SRG-APP-000293-UEM-000167",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000293",
            "RuleTitle": "The UEM server must notify system administrators and the Information System Security Officer (ISSO) for account disabling actions.",
            "Description": "<VulnDiscussion>When application accounts are disabled, user accessibility is affected. Accounts are utilized for identifying individual users or for identifying the application processes themselves. Sending notification of account disabling events to the system administrator and ISSO is one method for mitigating this risk. Such a capability greatly reduces the risk that application accessibility will be negatively affected for extended periods of time and also provides logging that can be used for forensic purposes.\n\nTo address access requirements, many operating systems can be integrated with enterprise-level authentication/access/auditing mechanisms that meet or exceed access control policy requirements. \n\nSatisfies:FAU_ALT_EXT.1.1, FAU_GEN.1.1(1), FMT_SMF.1.1(2)c.8 \nReference:PP-MDM-411065, PP-MDM-412000</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "When application accounts are disabled, user accessibility is affected. Accounts are utilized for identifying individual users or for identifying the application processes themselves. Sending notification of account disabling events to the system administrator and ISSO is one method for mitigating this risk. Such a capability greatly reduces the risk that application accessibility will be negatively affected for extended periods of time and also provides logging that can be used for forensic purposes.\n\nTo address access requirements, many operating systems can be integrated with enterprise-level authentication/access/auditing mechanisms that meet or exceed access control policy requirements. \n\nSatisfies:FAU_ALT_EXT.1.1, FAU_GEN.1.1(1), FMT_SMF.1.1(2)c.8 \nReference:PP-MDM-411065, PP-MDM-412000",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Requirement is Not Applicable when UEM server is configured to use DoD Central Directory Service for administrator account authentication.\n\nVerify the UEM server notifies system administrators and the ISSO for account disabling actions.\n\nIf the UEM server does not notify system administrators and the ISSO for account disabling actions, this is a finding.",
            "FixText": "Configure the UEM server to notify system administrators and the ISSO for account disabling actions.",
            "CCI": "CCI-001685"
        },
        {
            "VulnID": "V-234441",
            "RuleID": "SV-234441r617414_rule",
            "StigID": "SRG-APP-000294-UEM-000168",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000294",
            "RuleTitle": "The UEM server must notify system administrators and the Information System Security Officer (ISSO) for account removal actions.",
            "Description": "<VulnDiscussion>When application accounts are removed, user accessibility is affected. Accounts are utilized for identifying users or for identifying the application processes themselves. Sending notification of account removal events to the system administrator and ISSO is one method for mitigating this risk. Such a capability greatly reduces the risk that application accessibility will be negatively affected for extended periods of time and also provides logging that can be used for forensic purposes.\n\nTo address access requirements, many operating systems can be integrated with enterprise-level authentication/access/auditing mechanisms that meet or exceed access control policy requirements. \n\nSatisfies:FAU_ALT_EXT.1.1, FAU_GEN.1.1(1), FMT_SMF.1.1(2)c.8 \nReference:PP-MDM-411065, PP-MDM-412000</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "When application accounts are removed, user accessibility is affected. Accounts are utilized for identifying users or for identifying the application processes themselves. Sending notification of account removal events to the system administrator and ISSO is one method for mitigating this risk. Such a capability greatly reduces the risk that application accessibility will be negatively affected for extended periods of time and also provides logging that can be used for forensic purposes.\n\nTo address access requirements, many operating systems can be integrated with enterprise-level authentication/access/auditing mechanisms that meet or exceed access control policy requirements. \n\nSatisfies:FAU_ALT_EXT.1.1, FAU_GEN.1.1(1), FMT_SMF.1.1(2)c.8 \nReference:PP-MDM-411065, PP-MDM-412000",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Requirement is Not Applicable when UEM server is configured to use DoD Central Directory Service for administrator account authentication.\n\nVerify the UEM server notifies system administrators and the ISSO for account removal actions.\n\nIf the UEM server does not notify system administrators and the ISSO for account removal actions, this is a finding.",
            "FixText": "Configure the UEM server to notify system administrators and the ISSO for account removal actions.",
            "CCI": "CCI-001686"
        },
        {
            "VulnID": "V-234442",
            "RuleID": "SV-234442r617355_rule",
            "StigID": "SRG-APP-000295-UEM-000169",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000295",
            "RuleTitle": "The UEM server must automatically terminate a user session after an organization-defined period of user inactivity.",
            "Description": "<VulnDiscussion>Automatic session termination addresses the termination of user-initiated logical sessions in contrast to the termination of network connections that are associated with communications sessions (i.e., network disconnect). A logical session (for local, network, and remote access) is initiated whenever a user (or process acting on behalf of a user) accesses an organizational information system. Such user sessions can be terminated (and thus terminate user access) without terminating network sessions.\n\nSession termination terminates all processes associated with a user's logical session except those processes that are specifically created by the user (i.e., session owner) to continue after the session is terminated. \n\nConditions or trigger events requiring automatic session termination can include, for example, organization-defined periods of user inactivity, targeted responses to certain types of incidents, and time-of-day restrictions on information system use.\n\nThis capability is typically reserved for specific application system functionality where the system owner, data owner, or organization requires additional assurance. Based upon requirements and events specified by the data or application owner, the application developer must incorporate logic into the application that will provide a control mechanism that disconnects users upon the defined event trigger. The methods for incorporating this requirement will be determined and specified on a case-by-case basis during the application design and development stages. \n\nSatisfies:FMT_SMF.1.1(2) b \nReference:PP-MDM-431014</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Automatic session termination addresses the termination of user-initiated logical sessions in contrast to the termination of network connections that are associated with communications sessions (i.e., network disconnect). A logical session (for local, network, and remote access) is initiated whenever a user (or process acting on behalf of a user) accesses an organizational information system. Such user sessions can be terminated (and thus terminate user access) without terminating network sessions.\n\nSession termination terminates all processes associated with a user's logical session except those processes that are specifically created by the user (i.e., session owner) to continue after the session is terminated. \n\nConditions or trigger events requiring automatic session termination can include, for example, organization-defined periods of user inactivity, targeted responses to certain types of incidents, and time-of-day restrictions on information system use.\n\nThis capability is typically reserved for specific application system functionality where the system owner, data owner, or organization requires additional assurance. Based upon requirements and events specified by the data or application owner, the application developer must incorporate logic into the application that will provide a control mechanism that disconnects users upon the defined event trigger. The methods for incorporating this requirement will be determined and specified on a case-by-case basis during the application design and development stages. \n\nSatisfies:FMT_SMF.1.1(2) b \nReference:PP-MDM-431014",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server automatically terminates a user session after an organization-defined period of user inactivity.\n\nIf the UEM server does not automatically terminate a user session after an organization-defined period of user inactivity, this is a finding.",
            "FixText": "Configure the UEM server to automatically terminate a user session after an organization-defined period of user inactivity.",
            "CCI": "CCI-002361"
        },
        {
            "VulnID": "V-234443",
            "RuleID": "SV-234443r617355_rule",
            "StigID": "SRG-APP-000296-UEM-000170",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000296",
            "RuleTitle": "The UEM server must provide logout capability for user-initiated communication sessions.",
            "Description": "<VulnDiscussion>If a user cannot explicitly end an application session, the session may remain open and be exploited by an attacker; this is referred to as a zombie session.\n\nInformation resources to which users gain access via authentication include, for example, local workstations, databases, and password-protected websites/web-based services. However, for some types of interactive sessions including, for example, file transfer protocol (FTP) sessions, information systems typically send logout messages as final messages prior to terminating sessions. \n\nSatisfies:FMT_SMF.1.1(2) b \nReference:PP-MDM-431015</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "If a user cannot explicitly end an application session, the session may remain open and be exploited by an attacker; this is referred to as a zombie session.\n\nInformation resources to which users gain access via authentication include, for example, local workstations, databases, and password-protected websites/web-based services. However, for some types of interactive sessions including, for example, file transfer protocol (FTP) sessions, information systems typically send logout messages as final messages prior to terminating sessions. \n\nSatisfies:FMT_SMF.1.1(2) b \nReference:PP-MDM-431015",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server provides a logout capability for user-initiated communication sessions.\n\nIf the UEM server does not provide a logout capability for user-initiated communication sessions, this is a finding.",
            "FixText": "Configure the UEM server to provide a logout capability for user-initiated communication sessions.",
            "CCI": "CCI-002363"
        },
        {
            "VulnID": "V-234444",
            "RuleID": "SV-234444r617355_rule",
            "StigID": "SRG-APP-000297-UEM-000171",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000297",
            "RuleTitle": "The UEM server must display an explicit logout message to users indicating the reliable termination of authenticated communications sessions.",
            "Description": "<VulnDiscussion>If a user cannot explicitly end an application session, the session may remain open and be exploited by an attacker; this is referred to as a zombie session. Users need to be aware of whether or not the session has been terminated.\n\nInformation resources to which users gain access via authentication include, for example, local workstations, databases, and password-protected websites/web-based services. Logout messages for web page access, for example, can be displayed after authenticated sessions have been terminated. However, for some types of interactive sessions including, for example, file transfer protocol (FTP) sessions, information systems typically send logout messages as final messages prior to terminating sessions.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "If a user cannot explicitly end an application session, the session may remain open and be exploited by an attacker; this is referred to as a zombie session. Users need to be aware of whether or not the session has been terminated.\n\nInformation resources to which users gain access via authentication include, for example, local workstations, databases, and password-protected websites/web-based services. Logout messages for web page access, for example, can be displayed after authenticated sessions have been terminated. However, for some types of interactive sessions including, for example, file transfer protocol (FTP) sessions, information systems typically send logout messages as final messages prior to terminating sessions.",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server displays an explicit logout message to users indicating the reliable termination of authenticated communications sessions.\n\nIf the UEM server does not display an explicit logout message to users indicating the reliable termination of authenticated communications sessions, this is a finding.",
            "FixText": "Configure the UEM server to display an explicit logout message to users indicating the reliable termination of authenticated communications sessions.",
            "CCI": "CCI-002364"
        },
        {
            "VulnID": "V-234465",
            "RuleID": "SV-234465r617355_rule",
            "StigID": "SRG-APP-000319-UEM-000192",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000319",
            "RuleTitle": "The UEM server must automatically audit account-enabling actions.",
            "Description": "<VulnDiscussion>Once an attacker establishes access to an application, the attacker often attempts to create a persistent method of re-establishing access. One way to accomplish this is for the attacker to simply enable a new or disabled account. Automatically auditing account enabling actions provides logging that can be used for forensic purposes.\n\nTo address access requirements, many application developers choose to integrate their applications with enterprise-level authentication/access/auditing mechanisms that meet or exceed access control policy requirements. Such integration allows the application developer to off-load those access control functions and focus on core application features and functionality. \n\nSatisfies:FAU_ALT_EXT.1.1, FAU_GEN.1.1(1), FMT_SMF.1.1(2)c.8 \nReference:PP-MDM-411065, PP-MDM-412000</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Once an attacker establishes access to an application, the attacker often attempts to create a persistent method of re-establishing access. One way to accomplish this is for the attacker to simply enable a new or disabled account. Automatically auditing account enabling actions provides logging that can be used for forensic purposes.\n\nTo address access requirements, many application developers choose to integrate their applications with enterprise-level authentication/access/auditing mechanisms that meet or exceed access control policy requirements. Such integration allows the application developer to off-load those access control functions and focus on core application features and functionality. \n\nSatisfies:FAU_ALT_EXT.1.1, FAU_GEN.1.1(1), FMT_SMF.1.1(2)c.8 \nReference:PP-MDM-411065, PP-MDM-412000",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Requirement is Not Applicable when the UEM server is configured to use DoD Central Directory Service for administrator account authentication.\n\nVerify the UEM server automatically audits account enabling actions.\n\nIf the UEM server does not automatically audit account enabling actions, this is a finding.",
            "FixText": "Configure the UEM server to automatically audit account enabling actions.",
            "CCI": "CCI-002130"
        },
        {
            "VulnID": "V-234466",
            "RuleID": "SV-234466r617399_rule",
            "StigID": "SRG-APP-000320-UEM-000193",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000320",
            "RuleTitle": "The UEM server must notify system administrator and Information System Security Officer (ISSO) of account enabling actions.",
            "Description": "<VulnDiscussion>Once an attacker establishes access to an application, the attacker often attempts to create a persistent method of re-establishing access. One way to accomplish this is for the attacker to simply enable a new or disabled account. Sending notification of account enabling events to the system administrator and ISSO is one method for mitigating this risk. Such a capability greatly reduces the risk that application accessibility will be negatively affected for extended periods of time and also provides logging that can be used for forensic purposes.\n\nIn order to detect and respond to events that affect user accessibility and application processing, applications must notify the appropriate individuals so they can investigate the event.\n\nTo address access requirements, many application developers choose to integrate their applications with enterprise-level authentication/access/auditing mechanisms that meet or exceed access control policy requirements. Such integration allows the application developer to off-load those access control functions and focus on core application features and functionality. \n\nSatisfies:FAU_ALT_EXT.1.1, FAU_GEN.1.1(1), FMT_SMF.1.1(2)c.8 \nReference:PP-MDM-411065, PP-MDM-412000</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Once an attacker establishes access to an application, the attacker often attempts to create a persistent method of re-establishing access. One way to accomplish this is for the attacker to simply enable a new or disabled account. Sending notification of account enabling events to the system administrator and ISSO is one method for mitigating this risk. Such a capability greatly reduces the risk that application accessibility will be negatively affected for extended periods of time and also provides logging that can be used for forensic purposes.\n\nIn order to detect and respond to events that affect user accessibility and application processing, applications must notify the appropriate individuals so they can investigate the event.\n\nTo address access requirements, many application developers choose to integrate their applications with enterprise-level authentication/access/auditing mechanisms that meet or exceed access control policy requirements. Such integration allows the application developer to off-load those access control functions and focus on core application features and functionality. \n\nSatisfies:FAU_ALT_EXT.1.1, FAU_GEN.1.1(1), FMT_SMF.1.1(2)c.8 \nReference:PP-MDM-411065, PP-MDM-412000",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Requirement is Not Applicable when the UEM server is configured to use DoD Central Directory Service for administrator account authentication.\n\nVerify the UEM server notifies the system administrator and the ISSO of account enabling actions.\n\nIf the UEM server does not notify the system administrator and the ISSO of account enabling actions, this is a finding.",
            "FixText": "Configure the UEM server to notify system administrator and the ISSO of account enabling actions.",
            "CCI": "CCI-002132"
        },
        {
            "VulnID": "V-234473",
            "RuleID": "SV-234473r617355_rule",
            "StigID": "SRG-APP-000327-UEM-000200",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000327",
            "RuleTitle": "The UEM server must employ an audited override of automated access control mechanisms under organization-defined conditions.",
            "Description": "<VulnDiscussion>Successful incident response and auditing relies on timely, accurate system information and analysis in order to allow the organization to identify and respond to potential incidents in a proficient manner. Actions that could adversely impact the system must be audited for forensic analysis. \n\nSatisfies:FAU_ALT_EXT.1.1, FAU_GEN.1.1(1), FMT_SMF.1.1(2)c.8 \nReference:PP-MDM-411065, PP-MDM-412000</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Successful incident response and auditing relies on timely, accurate system information and analysis in order to allow the organization to identify and respond to potential incidents in a proficient manner. Actions that could adversely impact the system must be audited for forensic analysis. \n\nSatisfies:FAU_ALT_EXT.1.1, FAU_GEN.1.1(1), FMT_SMF.1.1(2)c.8 \nReference:PP-MDM-411065, PP-MDM-412000",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server employs an audited override of automated access control mechanisms under organization-defined conditions.\n\nIf the UEM server does not employ an audited override of automated access control mechanisms under organization-defined conditions, this is a finding.",
            "FixText": "Configure the UEM server to employ an audited override of automated access control mechanisms under organization-defined conditions.",
            "CCI": "CCI-002186"
        },
        {
            "VulnID": "V-234475",
            "RuleID": "SV-234475r617355_rule",
            "StigID": "SRG-APP-000329-UEM-000202",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000329",
            "RuleTitle": "The UEM server must be configured to have at least one user in defined administrator roles.",
            "Description": "<VulnDiscussion>Having several administrative roles for the UEM server supports separation of duties. This allows administrator-level privileges to be granted granularly, such as giving application management privileges to one group and security policy privileges to another group. This helps prevent administrators from intentionally or inadvertently altering other settings and configurations of which they may not understand or approve, which can weaken overall security and increase the risk of compromise.\n\nDefined roles:\n- Server primary administrator: Responsible for server installation, initial configuration, and maintenance functions. Responsible for the setup and maintenance of security configuration administrator and auditor accounts. Responsible for the maintenance of applications in the MAS.\n- Security configuration administrator: Responsible for security configuration of the server, defining device user groups, setup and maintenance of device user group administrator accounts, and defining privileges of device user group administrators.\n- Device user group administrator: Responsible for maintenance of mobile device accounts, including setup, change of account configurations, and account deletion. Responsible for defining which apps user groups or individual users have access to in the MAS. Can only perform administrative functions assigned by the security configuration administrator.\n- Auditor: Responsible for reviewing and maintaining server and mobile device audit logs. \n\nSatisfies:FMT_SMR.1.1(1) \nReference:PP-MDM-411058</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Having several administrative roles for the UEM server supports separation of duties. This allows administrator-level privileges to be granted granularly, such as giving application management privileges to one group and security policy privileges to another group. This helps prevent administrators from intentionally or inadvertently altering other settings and configurations of which they may not understand or approve, which can weaken overall security and increase the risk of compromise.\n\nDefined roles:\n- Server primary administrator: Responsible for server installation, initial configuration, and maintenance functions. Responsible for the setup and maintenance of security configuration administrator and auditor accounts. Responsible for the maintenance of applications in the MAS.\n- Security configuration administrator: Responsible for security configuration of the server, defining device user groups, setup and maintenance of device user group administrator accounts, and defining privileges of device user group administrators.\n- Device user group administrator: Responsible for maintenance of mobile device accounts, including setup, change of account configurations, and account deletion. Responsible for defining which apps user groups or individual users have access to in the MAS. Can only perform administrative functions assigned by the security configuration administrator.\n- Auditor: Responsible for reviewing and maintaining server and mobile device audit logs. \n\nSatisfies:FMT_SMR.1.1(1) \nReference:PP-MDM-411058",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server has at least one user in defined administrator roles.\n\nIf the UEM server does not have at least one user in defined administrator roles, this is a finding.",
            "FixText": "Configure the UEM server to have at least one user in defined administrator roles.",
            "CCI": "CCI-002169"
        },
        {
            "VulnID": "V-234489",
            "RuleID": "SV-234489r617355_rule",
            "StigID": "SRG-APP-000343-UEM-000216",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000343",
            "RuleTitle": "The UEM server must audit the execution of privileged functions.",
            "Description": "<VulnDiscussion>Misuse of privileged functions, either intentionally or unintentionally by authorized users, or by unauthorized external entities that have compromised information system accounts, is a serious and ongoing concern and can have significant adverse impacts on organizations. Auditing the use of privileged functions is one way to detect such misuse, and identify the risk from insider threats and the advanced persistent threat. \n\nSatisfies:FAU_GEN.1.1(1), b.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Misuse of privileged functions, either intentionally or unintentionally by authorized users, or by unauthorized external entities that have compromised information system accounts, is a serious and ongoing concern and can have significant adverse impacts on organizations. Auditing the use of privileged functions is one way to detect such misuse, and identify the risk from insider threats and the advanced persistent threat. \n\nSatisfies:FAU_GEN.1.1(1), b.",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server audits the execution of privileged functions.\n\nIf the UEM server does not audit the execution of privileged functions, this is a finding.",
            "FixText": "Configure the UEM server to audit the execution of privileged functions.",
            "CCI": "CCI-002234"
        },
        {
            "VulnID": "V-234491",
            "RuleID": "SV-234491r617355_rule",
            "StigID": "SRG-APP-000345-UEM-000218",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000345",
            "RuleTitle": "The UEM server must automatically lock the account until the locked account is released by an administrator when three unsuccessful login attempts in 15 minutes are exceeded.",
            "Description": "<VulnDiscussion>By limiting the number of failed login attempts, the risk of unauthorized system access via user password guessing, otherwise known as brute forcing, is reduced. Limits are imposed by locking the account. \n\nSatisfies:FMT_SMF.1(2)b \nReference:PP-MDM-431030</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "By limiting the number of failed login attempts, the risk of unauthorized system access via user password guessing, otherwise known as brute forcing, is reduced. Limits are imposed by locking the account. \n\nSatisfies:FMT_SMF.1(2)b \nReference:PP-MDM-431030",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Requirement is Not Applicable when UEM server is configured to use DoD Central Directory Service for administrator account authentication.\n\nVerify the UEM server automatically locks the account until the locked account is released by an administrator when three unsuccessful login attempts in 15 minutes are exceeded.\n\nIf the UEM server does not automatically lock the account until the locked account is released by an administrator when three unsuccessful login attempts in 15 minutes are exceeded, this is a finding.",
            "FixText": "Configure the UEM server to automatically lock the account until the locked account is released by an administrator when three unsuccessful login attempts in 15 minutes are exceeded.",
            "CCI": "CCI-002238"
        },
        {
            "VulnID": "V-234500",
            "RuleID": "SV-234500r617411_rule",
            "StigID": "SRG-APP-000358-UEM-000228",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000358",
            "RuleTitle": "The UEM server must be configured to transfer UEM server logs to another server for storage, analysis, and reporting. Note: UEM server logs include logs of UEM events and logs transferred to the UEM server by UEM agents of managed devices.",
            "Description": "<VulnDiscussion>Information stored in one location is vulnerable to accidental or incidental deletion or alteration.\n\nOff-loading is a common process in information systems with limited audit storage capacity.\n\nNote: UEM server logs include logs of UEM events and logs transferred to the UEM server by UEM agents of managed devices. \n\nSatisfies:FMT_SMF.1.1(2) c.8, FAU_STG_EXT.1.1(1) \nReference:PP-MDM-411054</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Information stored in one location is vulnerable to accidental or incidental deletion or alteration.\n\nOff-loading is a common process in information systems with limited audit storage capacity.\n\nNote: UEM server logs include logs of UEM events and logs transferred to the UEM server by UEM agents of managed devices. \n\nSatisfies:FMT_SMF.1.1(2) c.8, FAU_STG_EXT.1.1(1) \nReference:PP-MDM-411054",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server transfers UEM server logs to another server for storage, analysis, and reporting.\n\nIf the UEM server does not transfer UEM server logs to another server for storage, analysis, and reporting, this is a finding.\n\nNote: UEM server logs include logs of UEM events and logs transferred to the UEM server by UEM agents of managed devices.",
            "FixText": "Configure the UEM server to be configured to transfer UEM server logs to another server for storage, analysis, and reporting.\n\nNote: UEM server logs include logs of UEM events and logs transferred to the UEM server by UEM agents of managed devices.",
            "CCI": "CCI-001851"
        },
        {
            "VulnID": "V-234516",
            "RuleID": "SV-234516r617355_rule",
            "StigID": "SRG-APP-000374-UEM-000244",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000374",
            "RuleTitle": "The UEM server must be configured to record time stamps for audit records that can be mapped to Coordinated Universal Time (UTC) or Greenwich Mean Time (GMT).",
            "Description": "<VulnDiscussion>If time stamps are not consistently applied and there is no common time reference, it is difficult to perform forensic analysis.\n\nTime stamps generated by the application include date and time. Time is commonly expressed in UTC, a modern continuation of GMT, or local time with an offset from UTC. \n\nSatisfies:FAU_GEN.1.2(1)</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "If time stamps are not consistently applied and there is no common time reference, it is difficult to perform forensic analysis.\n\nTime stamps generated by the application include date and time. Time is commonly expressed in UTC, a modern continuation of GMT, or local time with an offset from UTC. \n\nSatisfies:FAU_GEN.1.2(1)",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server records time stamps for audit records that can be mapped to UTC or GMT.\n\nIf the UEM server does not record time stamps for audit records that can be mapped to UTC or GMT, this is a finding.",
            "FixText": "Configure the UEM server to be configured to record time stamps for audit records that can be mapped to UTC or GMT.",
            "CCI": "CCI-001890"
        },
        {
            "VulnID": "V-234517",
            "RuleID": "SV-234517r617355_rule",
            "StigID": "SRG-APP-000375-UEM-000245",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000375",
            "RuleTitle": "The UEM server must be configured to record time stamps for audit records that meet a granularity of one second for a minimum degree of precision.",
            "Description": "<VulnDiscussion>Without sufficient granularity of time stamps, it is not possible to adequately determine the chronological order of records. \n\nTime stamps generated by the application include date and time. Granularity of time measurements refers to the degree of synchronization between information system clocks and reference clocks.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Without sufficient granularity of time stamps, it is not possible to adequately determine the chronological order of records. \n\nTime stamps generated by the application include date and time. Granularity of time measurements refers to the degree of synchronization between information system clocks and reference clocks.",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server records time stamps for audit records that meet a granularity of one second for a minimum degree of precision.\n\nIf the UEM server does not record time stamps for audit records that meet a granularity of one second for a minimum degree of precision, this is a finding.",
            "FixText": "Configure the UEM server to be configured to record time stamps for audit records that meet a granularity of one second for a minimum degree of precision.",
            "CCI": "CCI-001889"
        },
        {
            "VulnID": "V-234519",
            "RuleID": "SV-234519r617355_rule",
            "StigID": "SRG-APP-000377-UEM-000247",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000377",
            "RuleTitle": "The UEM server must verify the digital signature of software before installation and alert the Information System Security Officer (ISSO), Information System Security Manager (ISSM), and other designated personnel if unauthorized software is detected.",
            "Description": "<VulnDiscussion>Unauthorized software not only increases risk by increasing the number of potential vulnerabilities, it also can contain malicious code. Sending an alert (in real time) when unauthorized software is detected allows designated personnel to take action on the installation of unauthorized software.\n\nThis requirement applies to configuration management applications or similar types of applications designed to manage system processes and configurations (e.g., HBSS and software wrappers). \n\nSatisfies:FPT_TUD_EXT.1.3</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Unauthorized software not only increases risk by increasing the number of potential vulnerabilities, it also can contain malicious code. Sending an alert (in real time) when unauthorized software is detected allows designated personnel to take action on the installation of unauthorized software.\n\nThis requirement applies to configuration management applications or similar types of applications designed to manage system processes and configurations (e.g., HBSS and software wrappers). \n\nSatisfies:FPT_TUD_EXT.1.3",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server verifies the digital signature of software before installation and alert the ISSM, ISSO, and other designated personnel if unauthorized software is detected.\n\nIf the UEM server does not verify the digital signature of software before installation and alert the ISSM, ISSO, and other designated personnel if unauthorized software is detected, this is a finding.",
            "FixText": "Configure the UEM server to verify the digital signature of software before installation and alert the ISSM, ISSO, and other designated personnel if unauthorized software is detected.",
            "CCI": "CCI-001811"
        },
        {
            "VulnID": "V-234520",
            "RuleID": "SV-234520r617355_rule",
            "StigID": "SRG-APP-000378-UEM-000248",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000378",
            "RuleTitle": "The UEM server must prohibit user installation of software by an administrator without the appropriate assigned permission for software installation.",
            "Description": "<VulnDiscussion>Allowing regular users to install software, without explicit privileges, creates the risk that untested or potentially malicious software will be installed on the system. Explicit privileges (escalated or administrative privileges) provide the regular user with explicit capabilities and control that exceeds the rights of a regular user.\n\nApplication functionality will vary, and while users are not permitted to install unapproved applications, there may be instances where the organization allows the user to install approved software packages such as from an approved software repository. \n\nThe application must enforce software installation by users based upon what types of software installations are permitted (e.g., updates and security patches to existing software) and what types of installations are prohibited (e.g., software whose pedigree with regard to being potentially malicious is unknown or suspect) by the organization. \n\nThis requirement applies, for example, to applications that provide the ability to extend application functionality (e.g., plug-ins, add-ons) and software management applications. \n\nSatisfies:FPT_TUD_EXT.1.2</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Allowing regular users to install software, without explicit privileges, creates the risk that untested or potentially malicious software will be installed on the system. Explicit privileges (escalated or administrative privileges) provide the regular user with explicit capabilities and control that exceeds the rights of a regular user.\n\nApplication functionality will vary, and while users are not permitted to install unapproved applications, there may be instances where the organization allows the user to install approved software packages such as from an approved software repository. \n\nThe application must enforce software installation by users based upon what types of software installations are permitted (e.g., updates and security patches to existing software) and what types of installations are prohibited (e.g., software whose pedigree with regard to being potentially malicious is unknown or suspect) by the organization. \n\nThis requirement applies, for example, to applications that provide the ability to extend application functionality (e.g., plug-ins, add-ons) and software management applications. \n\nSatisfies:FPT_TUD_EXT.1.2",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server prohibits user installation of software by an administrator without the appropriate assigned permission for software installation.\n\nIf the UEM server does not prohibit user installation of software by an administrator without the appropriate assigned permission for software installation, this is a finding.",
            "FixText": "Configure the UEM server to prohibit user installation of software by an administrator without the appropriate assigned permission for software installation.",
            "CCI": "CCI-001812"
        },
        {
            "VulnID": "V-234521",
            "RuleID": "SV-234521r617355_rule",
            "StigID": "SRG-APP-000378-UEM-000249",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000378",
            "RuleTitle": "The UEM server must be configured to only allow enrolled devices that are compliant with UEM policies and assigned to a user in the application access group to download applications.",
            "Description": "<VulnDiscussion>If the application install policy is not enforced, malicious applications and vulnerable applications can be installed on managed mobile devices, which could compromise DoD data. \n\nSatisfies:FMT_MOF.1.1(3) \nReference:PP-MDM-423206</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "If the application install policy is not enforced, malicious applications and vulnerable applications can be installed on managed mobile devices, which could compromise DoD data. \n\nSatisfies:FMT_MOF.1.1(3) \nReference:PP-MDM-423206",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server allows only enrolled devices that are compliant with UEM policies and assigned to a user in the application access group to download applications.\n\nIf the UEM server does not allow only enrolled devices that are compliant with UEM policies and assigned to a user in the application access group to download applications, this is a finding.",
            "FixText": "Configure the UEM server to allow only enrolled devices that are compliant with UEM policies and assigned to a user in the application access group to download applications.",
            "CCI": "CCI-001812"
        },
        {
            "VulnID": "V-234523",
            "RuleID": "SV-234523r617355_rule",
            "StigID": "SRG-APP-000380-UEM-000251",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000380",
            "RuleTitle": "The UEM server must enforce access restrictions associated with changes to the server configuration.",
            "Description": "<VulnDiscussion>Failure to provide logical access restrictions associated with changes to application configuration may have significant effects on the overall security of the system. \n\nWhen dealing with access restrictions pertaining to change control, it should be noted that any changes to the hardware, software, and/or firmware components of the information system and/or application can potentially have significant effects on the overall security of the system. \n\nAccordingly, only qualified and authorized individuals should be allowed to obtain access to application components for the purposes of initiating changes, including upgrades and modifications. \n\nLogical access restrictions include, for example, controls that restrict access to workflow automation, media libraries, abstract layers (e.g., changes implemented into third-party interfaces rather than directly into information systems), and change windows (e.g., changes occur only during specified times, making unauthorized changes easy to discover). \n\nSatisfies:FMT_SMR.1.1(1)</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Failure to provide logical access restrictions associated with changes to application configuration may have significant effects on the overall security of the system. \n\nWhen dealing with access restrictions pertaining to change control, it should be noted that any changes to the hardware, software, and/or firmware components of the information system and/or application can potentially have significant effects on the overall security of the system. \n\nAccordingly, only qualified and authorized individuals should be allowed to obtain access to application components for the purposes of initiating changes, including upgrades and modifications. \n\nLogical access restrictions include, for example, controls that restrict access to workflow automation, media libraries, abstract layers (e.g., changes implemented into third-party interfaces rather than directly into information systems), and change windows (e.g., changes occur only during specified times, making unauthorized changes easy to discover). \n\nSatisfies:FMT_SMR.1.1(1)",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server enforces access restrictions associated with changes to the server configuration.\n\nIf the UEM server does not enforce access restrictions associated with changes to the server configuration, this is a finding.",
            "FixText": "Configure the UEM server to enforce access restrictions associated with changes to the server configuration.",
            "CCI": "CCI-001813"
        },
        {
            "VulnID": "V-234524",
            "RuleID": "SV-234524r617355_rule",
            "StigID": "SRG-APP-000381-UEM-000252",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000381",
            "RuleTitle": "The UEM server must audit the enforcement actions used to restrict access associated with changes to the application.",
            "Description": "<VulnDiscussion>Without auditing the enforcement of access restrictions against changes to the application configuration, it will be difficult to identify attempted attacks and an audit trail will not be available for forensic investigation for after-the-fact actions. \n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact. \n\nSatisfies:FAU_ALT_EXT.1.1, FAU_GEN.1.1(1), FMT_SMF.1.1(2)c.8 \nReference:PP-MDM-411065, PP-MDM-412000</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Without auditing the enforcement of access restrictions against changes to the application configuration, it will be difficult to identify attempted attacks and an audit trail will not be available for forensic investigation for after-the-fact actions. \n\nEnforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact. \n\nSatisfies:FAU_ALT_EXT.1.1, FAU_GEN.1.1(1), FMT_SMF.1.1(2)c.8 \nReference:PP-MDM-411065, PP-MDM-412000",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server audits the enforcement actions used to restrict access associated with changes to the application.\n\nIf the UEM server does not audit the enforcement actions used to restrict access associated with changes to the application, this is a finding.",
            "FixText": "Configure the UEM server to audit the enforcement actions used to restrict access associated with changes to the application.",
            "CCI": "CCI-001814"
        },
        {
            "VulnID": "V-234526",
            "RuleID": "SV-234526r617355_rule",
            "StigID": "SRG-APP-000383-UEM-000254",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000383",
            "RuleTitle": "The UEM server must disable organization-defined functions, ports, protocols, and services (within the application) deemed unnecessary and/or non-secure.",
            "Description": "<VulnDiscussion>Removal of unneeded or non-secure functions, ports, protocols, and services mitigate the risk of unauthorized connection of devices, unauthorized transfer of information, or other exploitation of these resources.\n\nExamples include unneeded listening ports.\n\nThe organization must perform a periodic scan/review of the application (as required by CCI-000384) and disable functions, ports, protocols, and services deemed to be unneeded or non-secure. \n\nSatisfies:FMT_SMF.1.1(2) Refinement b \nReference:PP-MDM-431006</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Removal of unneeded or non-secure functions, ports, protocols, and services mitigate the risk of unauthorized connection of devices, unauthorized transfer of information, or other exploitation of these resources.\n\nExamples include unneeded listening ports.\n\nThe organization must perform a periodic scan/review of the application (as required by CCI-000384) and disable functions, ports, protocols, and services deemed to be unneeded or non-secure. \n\nSatisfies:FMT_SMF.1.1(2) Refinement b \nReference:PP-MDM-431006",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server disables organization-defined functions, ports, protocols, and services (within the application) deemed unnecessary and/or non-secure.\n\nIf the UEM server does not disable organization-defined functions, ports, protocols, and services (within the application) deemed unnecessary and/or non-secure, this is a finding.",
            "FixText": "Configure the UEM server to disable organization-defined functions, ports, protocols, and services (within the application) deemed unnecessary and/or non-secure.",
            "CCI": "CCI-001762"
        },
        {
            "VulnID": "V-234532",
            "RuleID": "SV-234532r617355_rule",
            "StigID": "SRG-APP-000389-UEM-000260",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000389",
            "RuleTitle": "The UEM server must require users (administrators) to reauthenticate when roles change.",
            "Description": "<VulnDiscussion>Without reauthentication, users may access resources or perform tasks for which they do not have authorization. \n\nWhen applications provide the capability to change security roles or escalate the functional capability of the application, it is critical the user reauthenticate.\n\nIn addition to the reauthentication requirements associated with session locks, organizations may require reauthentication of individuals and/or devices in other situations, including (but not limited to) the following circumstances.\n\n(i) When authenticators change; \n(ii) When roles change; \n(iii) When security categories of information systems change; \n(iv) When the execution of privileged functions occurs; \n(v) After a fixed period of time; or\n(vi) Periodically.\n\nWithin the DoD, the minimum circumstances requiring reauthentication are privilege escalation and role changes. \n\nSatisfies:FMT_SMF.1.1(2) b \nReference:PP-MDM-431016</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Without reauthentication, users may access resources or perform tasks for which they do not have authorization. \n\nWhen applications provide the capability to change security roles or escalate the functional capability of the application, it is critical the user reauthenticate.\n\nIn addition to the reauthentication requirements associated with session locks, organizations may require reauthentication of individuals and/or devices in other situations, including (but not limited to) the following circumstances.\n\n(i) When authenticators change; \n(ii) When roles change; \n(iii) When security categories of information systems change; \n(iv) When the execution of privileged functions occurs; \n(v) After a fixed period of time; or\n(vi) Periodically.\n\nWithin the DoD, the minimum circumstances requiring reauthentication are privilege escalation and role changes. \n\nSatisfies:FMT_SMF.1.1(2) b \nReference:PP-MDM-431016",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server requires users (administrators) to reauthenticate when roles change.\n\nIf the UEM server does not require users (administrators) to reauthenticate when roles change, this is a finding.",
            "FixText": "Configure the UEM server to require users (administrators) to reauthenticate when roles change.",
            "CCI": "CCI-002038"
        },
        {
            "VulnID": "V-234533",
            "RuleID": "SV-234533r617355_rule",
            "StigID": "SRG-APP-000390-UEM-000261",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000390",
            "RuleTitle": "The UEM server must require end-point devices to reauthenticate when organization-defined circumstances or situations requiring reauthentication.",
            "Description": "<VulnDiscussion>This requirement refers to the end-point device user reauthenticating to the device.  The following are examples of organization-defined circumstances or situations requiring reauthentication: \n\n(i) After a screen lock; \n(ii) After device reboot; \n(iii) Before installation of new device policy or profile;\n(iv) Before executing a device reset or wipe. \n\nSatisfies:FMT_SMF.1.1(2) b \nReference:PP-MDM-431016</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "This requirement refers to the end-point device user reauthenticating to the device.  The following are examples of organization-defined circumstances or situations requiring reauthentication: \n\n(i) After a screen lock; \n(ii) After device reboot; \n(iii) Before installation of new device policy or profile;\n(iv) Before executing a device reset or wipe. \n\nSatisfies:FMT_SMF.1.1(2) b \nReference:PP-MDM-431016",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server requires end-point devices to reauthenticate when organization-defined circumstances or situations requiring reauthentication.\n\nIf the UEM server does not require end-point devices to reauthenticate when organization-defined circumstances or situations requiring reauthentication, this is a finding.",
            "FixText": "Configure the UEM server to require end-point devices to reauthenticate when organization-defined circumstances or situations requiring reauthentication.",
            "CCI": "CCI-002039"
        },
        {
            "VulnID": "V-234538",
            "RuleID": "SV-234538r617415_rule",
            "StigID": "SRG-APP-000395-UEM-000266",
            "Severity": "high",
            "Cat": "CAT I",
            "Classification": "",
            "GroupTitle": "SRG-APP-000395",
            "RuleTitle": "Before establishing a connection to any endpoint device being managed, the UEM server must establish a trusted path between the server and endpoint that provides assured identification of the end point using a bidirectional authentication mechanism configured with a FIPS-validated Advanced Encryption Standard (AES) cipher block algorithm to authenticate with the device.",
            "Description": "<VulnDiscussion>Without device-to-device authentication, communications with malicious devices may be established. Bidirectional authentication provides stronger safeguards to validate the identity of other devices for connections that are of greater risk. Currently, DoD requires the use of AES for bidirectional authentication since it is the only FIPS-validated AES cipher block algorithm. \n\nFor distributed architectures (e.g., service-oriented architectures), the decisions regarding the validation of authentication claims may be made by services separate from the services acting on those decisions. In such situations, it is necessary to provide authentication decisions (as opposed to the actual authenticators) to the services that need to act on those decisions.\n\nA local connection is any connection with a device communicating without the use of a network. A network connection is any connection with a device that communicates through a network (e.g., local area or wide area network; the internet). A remote connection is any connection with a device communicating through an external network (e.g., the internet).\n\nBecause of the challenges of applying this requirement on a large scale, organizations are encouraged to apply the requirement only to those limited number (and type) of devices that truly need to support this capability. \n\nSatisfies:FIA_X509_EXT.1(1), FIA_ENR_EXT.1.1</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Without device-to-device authentication, communications with malicious devices may be established. Bidirectional authentication provides stronger safeguards to validate the identity of other devices for connections that are of greater risk. Currently, DoD requires the use of AES for bidirectional authentication since it is the only FIPS-validated AES cipher block algorithm. \n\nFor distributed architectures (e.g., service-oriented architectures), the decisions regarding the validation of authentication claims may be made by services separate from the services acting on those decisions. In such situations, it is necessary to provide authentication decisions (as opposed to the actual authenticators) to the services that need to act on those decisions.\n\nA local connection is any connection with a device communicating without the use of a network. A network connection is any connection with a device that communicates through a network (e.g., local area or wide area network; the internet). A remote connection is any connection with a device communicating through an external network (e.g., the internet).\n\nBecause of the challenges of applying this requirement on a large scale, organizations are encouraged to apply the requirement only to those limited number (and type) of devices that truly need to support this capability. \n\nSatisfies:FIA_X509_EXT.1(1), FIA_ENR_EXT.1.1",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server establishes a trusted path between the server and endpoint that provides assured identification of the end point using a bidirectional authentication mechanism configured with a FIPS-validated Advanced Encryption Standard (AES) cipher block algorithm to authenticate with the device before establishing a connection to any endpoint device being managed. \n\nIf the UEM server does not establish a trusted path between the server and endpoint that provides assured identification of the end point using a bidirectional authentication mechanism configured with a FIPS-validated Advanced Encryption Standard (AES) cipher block algorithm to authenticate with the device before establishing a connection to any endpoint device being managed, this is a finding.",
            "FixText": "Configure the UEM server to establish a trusted path between the server and endpoint that provides assured identification of the end point using a bidirectional authentication mechanism configured with a FIPS-validated Advanced Encryption Standard (AES) cipher block algorithm to authenticate with the device before establishing a connection to any endpoint device being managed.",
            "CCI": "CCI-001967"
        },
        {
            "VulnID": "V-234543",
            "RuleID": "SV-234543r617355_rule",
            "StigID": "SRG-APP-000400-UEM-000271",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000400",
            "RuleTitle": "The UEM server must prohibit the use of cached authenticators after an organization-defined time period.",
            "Description": "<VulnDiscussion>If cached authentication information is out-of-date, the validity of the authentication information may be questionable.\n\nAccording to the CNSS 1253, the IA-5(13) control which is tied to this requirement is not defined at the DoD-level. The organization should specify this value based on numerous factors, including the application in question, the data it hosts and the associated exposures/risks.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "If cached authentication information is out-of-date, the validity of the authentication information may be questionable.\n\nAccording to the CNSS 1253, the IA-5(13) control which is tied to this requirement is not defined at the DoD-level. The organization should specify this value based on numerous factors, including the application in question, the data it hosts and the associated exposures/risks.",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Requirement is Not Applicable when the UEM server is configured to use DoD Central Directory Service for administrator account authentication.\n\nVerify the UEM server prohibits the use of cached authenticators after an organization-defined time period.\n\nIf the UEM server does not prohibit the use of cached authenticators after an organization-defined time period, this is a finding.",
            "FixText": "Configure the UEM server to prohibit the use of cached authenticators after an organization-defined time period.",
            "CCI": "CCI-002007"
        },
        {
            "VulnID": "V-234544",
            "RuleID": "SV-234544r617355_rule",
            "StigID": "SRG-APP-000401-UEM-000272",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000401",
            "RuleTitle": "The UEM server, for PKI-based authentication, must implement a local cache of revocation data to support path discovery and validation in case of the inability to access revocation information via the network.",
            "Description": "<VulnDiscussion>Without configuring a local cache of revocation data, there is the potential to allow access to users who are no longer authorized (users with revoked certificates).</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Without configuring a local cache of revocation data, there is the potential to allow access to users who are no longer authorized (users with revoked certificates).",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server, for PKI-based authentication, implements a local cache of revocation data to support path discovery and validation in case of the inability to access revocation information via the network.\n\nIf the UEM server, for PKI-based authentication, does not implement a local cache of revocation data to support path discovery and validation in case of the inability to access revocation information via the network, this is a finding.",
            "FixText": "Configure the UEM server to implement a local cache of revocation data to support path discovery and validation in case of the inability to access revocation information via the network for PKI-based authentication.",
            "CCI": "CCI-001991"
        },
        {
            "VulnID": "V-234555",
            "RuleID": "SV-234555r617355_rule",
            "StigID": "SRG-APP-000412-UEM-000283",
            "Severity": "high",
            "Cat": "CAT I",
            "Classification": "",
            "GroupTitle": "SRG-APP-000412",
            "RuleTitle": "The UEM server must configure web management tools with FIPS-validated Advanced Encryption Standard (AES) cipher block algorithm to protect the confidentiality of maintenance and diagnostic communications for nonlocal maintenance sessions.",
            "Description": "<VulnDiscussion>Without confidentiality protection mechanisms, unauthorized individuals may gain access to sensitive information via a remote access session.\n\nNonlocal maintenance and diagnostic activities are activities conducted by individuals communicating through either an external network (e.g., the internet) or an internal network.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Without confidentiality protection mechanisms, unauthorized individuals may gain access to sensitive information via a remote access session.\n\nNonlocal maintenance and diagnostic activities are activities conducted by individuals communicating through either an external network (e.g., the internet) or an internal network.",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server web management tools use a FIPS-validated Advanced Encryption Standard (AES) cipher block algorithm to protect the confidentiality of maintenance and diagnostic communications for nonlocal maintenance sessions.\n\nIf the UEM server web management tools do not use FIPS-validated Advanced Encryption Standard (AES) cipher block algorithms to protect the confidentiality of maintenance and diagnostic communications for nonlocal maintenance sessions, this is a finding.",
            "FixText": "Configure the UEM server web management tools with a FIPS-validated Advanced Encryption Standard (AES) cipher block algorithm to protect the confidentiality of maintenance and diagnostic communications for nonlocal maintenance sessions.",
            "CCI": "CCI-003123"
        },
        {
            "VulnID": "V-234556",
            "RuleID": "SV-234556r617355_rule",
            "StigID": "SRG-APP-000413-UEM-000284",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000413",
            "RuleTitle": "The UEM server must verify remote disconnection when non-local maintenance and diagnostic sessions are terminated.",
            "Description": "<VulnDiscussion>If the remote connection is not closed and verified as closed, the session may remain open and be exploited by an attacker; this is referred to as a zombie session. Remote connections must be disconnected and verified as disconnected when non-local maintenance sessions have been terminated and are no longer available for use.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "If the remote connection is not closed and verified as closed, the session may remain open and be exploited by an attacker; this is referred to as a zombie session. Remote connections must be disconnected and verified as disconnected when non-local maintenance sessions have been terminated and are no longer available for use.",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server verifies remote disconnection when non-local maintenance and diagnostic sessions are terminated.\n\nIf the UEM server does not verify remote disconnection when non-local maintenance and diagnostic sessions are terminated, this is a finding.",
            "FixText": "Configure the UEM server to verify remote disconnection when non-local maintenance and diagnostic sessions are terminated.",
            "CCI": "CCI-002891"
        },
        {
            "VulnID": "V-234573",
            "RuleID": "SV-234573r617355_rule",
            "StigID": "SRG-APP-000427-UEM-000298",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000427",
            "RuleTitle": "The UEM server must only allow the use of DoD PKI established certificate authorities for verification of the establishment of protected sessions.",
            "Description": "<VulnDiscussion>Untrusted Certificate Authorities (CA) can issue certificates, but they may be issued by organizations or individuals that seek to compromise DoD systems or by organizations with insufficient security controls. If the CA used for verifying the certificate is not a DoD-approved CA, trust of this CA has not been established.\n\nThe DoD will only accept PKI certificates obtained from a DoD-approved internal or external certificate authority. Reliance on CAs for the establishment of secure sessions includes, for example, the use of TLS certificates. \n\nThis requirement focuses on communications protection for the application session rather than for the network packet.\n\nThis requirement applies to applications that utilize communications sessions. This includes, but is not limited to, web-based applications and Service-Oriented Architectures (SOA). \n\nSatisfies:FIA_X509_EXT.1.1(1)</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Untrusted Certificate Authorities (CA) can issue certificates, but they may be issued by organizations or individuals that seek to compromise DoD systems or by organizations with insufficient security controls. If the CA used for verifying the certificate is not a DoD-approved CA, trust of this CA has not been established.\n\nThe DoD will only accept PKI certificates obtained from a DoD-approved internal or external certificate authority. Reliance on CAs for the establishment of secure sessions includes, for example, the use of TLS certificates. \n\nThis requirement focuses on communications protection for the application session rather than for the network packet.\n\nThis requirement applies to applications that utilize communications sessions. This includes, but is not limited to, web-based applications and Service-Oriented Architectures (SOA). \n\nSatisfies:FIA_X509_EXT.1.1(1)",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server allows only DoD-PKI established certificate authorities for verification of the establishment of protected sessions.\n\nIf the UEM server does not allow only DoD-PKI established certificate authorities for verification of the establishment of protected sessions, this is a finding.",
            "FixText": "Configure the UEM server to allow only DoD-PKI established certificate authorities for verification of the establishment of protected sessions.",
            "CCI": "CCI-002470"
        },
        {
            "VulnID": "V-234574",
            "RuleID": "SV-234574r617355_rule",
            "StigID": "SRG-APP-000427-UEM-000299",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000427",
            "RuleTitle": "The UEM server must be configured to use X.509v3 certificates for code signing for system software updates.",
            "Description": "<VulnDiscussion>It is critical that the UEM server validate code signing certificates for key activities such as code signing for system software updates, code signing for integrity verification, and policy signing. Otherwise, there is no assurance that a malicious actor has not inserted itself in the process of packaging the code or policy. For example, messages signed with an invalid certificate may contain links to malware, which could lead to the installation or distribution of that malware on DoD information systems, leading to compromise of DoD sensitive information and other attacks. Therefore, the MDM server must have the capability to enforce a policy for this control. \n\nSatisfies:FMT_SMF.1.1(2) c.8, FIA_X509_EXT.2.1 \nReference:PP-MDM-412002</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "It is critical that the UEM server validate code signing certificates for key activities such as code signing for system software updates, code signing for integrity verification, and policy signing. Otherwise, there is no assurance that a malicious actor has not inserted itself in the process of packaging the code or policy. For example, messages signed with an invalid certificate may contain links to malware, which could lead to the installation or distribution of that malware on DoD information systems, leading to compromise of DoD sensitive information and other attacks. Therefore, the MDM server must have the capability to enforce a policy for this control. \n\nSatisfies:FMT_SMF.1.1(2) c.8, FIA_X509_EXT.2.1 \nReference:PP-MDM-412002",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server uses X.509v3 certificates for code signing for system software updates.\n\nIf the UEM server does not use X.509v3 certificates for code signing for system software updates, this is a finding.",
            "FixText": "Configure the UEM server to use X.509v3 certificates for code signing for system software updates.",
            "CCI": "CCI-002470"
        },
        {
            "VulnID": "V-234575",
            "RuleID": "SV-234575r617355_rule",
            "StigID": "SRG-APP-000427-UEM-000300",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000427",
            "RuleTitle": "The UEM server must be configured to use X.509v3 certificates for code signing for integrity verification.",
            "Description": "<VulnDiscussion>It is critical that the UEM server validate code signing certificates for key activities such as code signing for system software updates, code signing for integrity verification, and policy signing. Otherwise, there is no assurance that a malicious actor has not inserted itself in the process of packaging the code or policy. For example, messages signed with an invalid certificate may contain links to malware, which could lead to the installation or distribution of that malware on DoD information systems, leading to compromise of DoD sensitive information and other attacks. Therefore, the MDM server must have the capability to enforce a policy for this control. \n\nSatisfies:FMT_SMF.1.1(2) c.8, FIA_X509_EXT.2.1 \nReference:PP-MDM-412002</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "It is critical that the UEM server validate code signing certificates for key activities such as code signing for system software updates, code signing for integrity verification, and policy signing. Otherwise, there is no assurance that a malicious actor has not inserted itself in the process of packaging the code or policy. For example, messages signed with an invalid certificate may contain links to malware, which could lead to the installation or distribution of that malware on DoD information systems, leading to compromise of DoD sensitive information and other attacks. Therefore, the MDM server must have the capability to enforce a policy for this control. \n\nSatisfies:FMT_SMF.1.1(2) c.8, FIA_X509_EXT.2.1 \nReference:PP-MDM-412002",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server uses X.509v3 certificates for code signing for integrity verification.\n\nIf the UEM server does not use X.509v3 certificates for code signing for integrity verification, this is a finding.",
            "FixText": "Configure the UEM server to use X.509v3 certificates for code signing for integrity verification.",
            "CCI": "CCI-002470"
        },
        {
            "VulnID": "V-234588",
            "RuleID": "SV-234588r617355_rule",
            "StigID": "SRG-APP-000439-UEM-000313",
            "Severity": "high",
            "Cat": "CAT I",
            "Classification": "",
            "GroupTitle": "SRG-APP-000439",
            "RuleTitle": "The UEM server must connect to [assignment: [list of applications]] and managed mobile devices with an authenticated and secure (encrypted) connection to protect the confidentiality and integrity of transmitted information.",
            "Description": "<VulnDiscussion>Applications may include the following: update server, database, and enterprise directory service. Without protection of the transmitted information, confidentiality and integrity may be compromised since unprotected communications can be intercepted and either read or altered. \n\nThis requirement applies only to those applications that are either distributed or can allow access to data non-locally. Use of this requirement will be limited to situations where the data owner has a strict requirement for ensuring data integrity and confidentiality is maintained at every step of the data transfer and handling process. When transmitting data, applications need to leverage transmission protection mechanisms, such as TLS, TLS VPNs, or IPSEC.\n\nCommunication paths outside the physical protection of a controlled boundary are exposed to the possibility of interception and modification. Protecting the confidentiality and integrity of organizational information can be accomplished by physical means (e.g., employing physical distribution systems) or by logical means (e.g., employing cryptographic techniques). If physical means of protection are employed, then logical means (cryptography) do not have to be employed, and vice versa.\n\nThis requirement applies to any application to which the server connects (for example SQL server, Active Directory). \n\nSatisfies:FMT_SMF.1.1(2) b, FTP_ITC.1.1(1), FTP_ITC.1.2(1), FTP_ITC.1.3(1)  \nReference:PP-MDM-431009</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Applications may include the following: update server, database, and enterprise directory service. Without protection of the transmitted information, confidentiality and integrity may be compromised since unprotected communications can be intercepted and either read or altered. \n\nThis requirement applies only to those applications that are either distributed or can allow access to data non-locally. Use of this requirement will be limited to situations where the data owner has a strict requirement for ensuring data integrity and confidentiality is maintained at every step of the data transfer and handling process. When transmitting data, applications need to leverage transmission protection mechanisms, such as TLS, TLS VPNs, or IPSEC.\n\nCommunication paths outside the physical protection of a controlled boundary are exposed to the possibility of interception and modification. Protecting the confidentiality and integrity of organizational information can be accomplished by physical means (e.g., employing physical distribution systems) or by logical means (e.g., employing cryptographic techniques). If physical means of protection are employed, then logical means (cryptography) do not have to be employed, and vice versa.\n\nThis requirement applies to any application to which the server connects (for example SQL server, Active Directory). \n\nSatisfies:FMT_SMF.1.1(2) b, FTP_ITC.1.1(1), FTP_ITC.1.2(1), FTP_ITC.1.3(1)  \nReference:PP-MDM-431009",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server connects to applications and managed mobile devices with an authenticated and secure (encrypted) connection to protect the confidentiality and integrity of transmitted information.\n\nIf the UEM server does not connect to applications and managed mobile devices with an authenticated and secure (encrypted) connection to protect the confidentiality and integrity of transmitted information, this is a finding.",
            "FixText": "Configure the UEM server to connect to applications and managed mobile devices with an authenticated and secure (encrypted) connection to protect the confidentiality and integrity of transmitted information.",
            "CCI": "CCI-002418"
        },
        {
            "VulnID": "V-234596",
            "RuleID": "SV-234596r617355_rule",
            "StigID": "SRG-APP-000447-UEM-000321",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000447",
            "RuleTitle": "The UEM server must be configured to write to the server event log when invalid inputs are received.",
            "Description": "<VulnDiscussion>A common vulnerability of applications is unpredictable behavior when invalid inputs are received. This requirement guards against adverse or unintended system behavior caused by invalid inputs, where information system responses to the invalid input may be disruptive or cause the system to fail into an unsafe state.\n\nThe behavior will be derived from the organizational and system requirements and includes, but is not limited to, notification of the appropriate personnel, creating an audit record, and rejecting invalid input. \n\nSatisfies:FPT_TST_EXT.1.2</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "A common vulnerability of applications is unpredictable behavior when invalid inputs are received. This requirement guards against adverse or unintended system behavior caused by invalid inputs, where information system responses to the invalid input may be disruptive or cause the system to fail into an unsafe state.\n\nThe behavior will be derived from the organizational and system requirements and includes, but is not limited to, notification of the appropriate personnel, creating an audit record, and rejecting invalid input. \n\nSatisfies:FPT_TST_EXT.1.2",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server writes to the server event log when invalid inputs are received.\n\nIf the UEM server does not write to the server event log when invalid inputs are received, this is a finding.",
            "FixText": "Configure the UEM server to write to the server event log when invalid inputs are received.",
            "CCI": "CCI-002754"
        },
        {
            "VulnID": "V-234603",
            "RuleID": "SV-234603r617355_rule",
            "StigID": "SRG-APP-000454-UEM-000328",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000454",
            "RuleTitle": "The UEM server must remove old software components after updated versions have been installed.",
            "Description": "<VulnDiscussion>Previous versions of software components that are not removed from the information system after updates have been installed may be exploited by adversaries. Some information technology products may remove older versions of software automatically from the information system.\n\nIf the update is due to a security issue with the old version of the app, the old version is not reinstalled. If rollback files are used by the server, they must be stored so as to not be easily accessible to the production system, or cannot be accidentally installed on the operational system, and then must be deleted after a short period of time defined by the organization.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Previous versions of software components that are not removed from the information system after updates have been installed may be exploited by adversaries. Some information technology products may remove older versions of software automatically from the information system.\n\nIf the update is due to a security issue with the old version of the app, the old version is not reinstalled. If rollback files are used by the server, they must be stored so as to not be easily accessible to the production system, or cannot be accidentally installed on the operational system, and then must be deleted after a short period of time defined by the organization.",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server removes old software components after updated versions have been installed.\n\nIf the UEM server does not remove old software components after updated versions have been installed, this is a finding.",
            "FixText": "Configure the UEM server to remove old software components after updated versions have been installed.",
            "CCI": "CCI-002617"
        },
        {
            "VulnID": "V-234605",
            "RuleID": "SV-234605r617355_rule",
            "StigID": "SRG-APP-000456-UEM-000330",
            "Severity": "high",
            "Cat": "CAT I",
            "Classification": "",
            "GroupTitle": "SRG-APP-000456",
            "RuleTitle": "The UEM server must be maintained at a supported version.",
            "Description": "<VulnDiscussion>The UEM vendor maintains specific product versions for a specific period of time. MDM/EMM server versions no longer supported by the vendor will not receive security updates for new vulnerabilities, which leaves them subject to exploitation. \n\nSatisfies:FPT_TUD_EXT.1.1, FPT_TUD_EXT.1.2 \nReference:PP-MDM-414005</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "The UEM vendor maintains specific product versions for a specific period of time. MDM/EMM server versions no longer supported by the vendor will not receive security updates for new vulnerabilities, which leaves them subject to exploitation. \n\nSatisfies:FPT_TUD_EXT.1.1, FPT_TUD_EXT.1.2 \nReference:PP-MDM-414005",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server is maintained at a supported version.\n\nIf the UEM server is not maintained at a supported version, this is a finding.",
            "FixText": "Configure the UEM server to be maintained at a supported version.",
            "CCI": "CCI-002605"
        },
        {
            "VulnID": "V-234622",
            "RuleID": "SV-234622r617355_rule",
            "StigID": "SRG-APP-000472-UEM-000347",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000472",
            "RuleTitle": "The UEM server must be configured with the periodicity of the following commands to the agent of six hours or less:  - query connectivity status - query the current version of the managed device firmware/software - query the current version of installed mobile applications - read audit logs kept by the managed device.",
            "Description": "<VulnDiscussion>Without verification, security functions may not operate correctly and this failure may go unnoticed. \n\nSecurity function is defined as the hardware, software, and/or firmware of the information system responsible for enforcing the system security policy and supporting the isolation of code and data on which the protection is based. Security functionality includes, but is not limited to, establishing system accounts, configuring access authorizations (i.e., permissions, privileges), setting events to be audited, and setting intrusion detection parameters.\n\nThis requirement applies to applications performing security functions and the applications performing security function verification/testing. \n\nSatisfies:FAU_NET_EXT.1.1, FMT_SMF.1.1(2) c.3 \nReference:PP-MDM-411057</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Without verification, security functions may not operate correctly and this failure may go unnoticed. \n\nSecurity function is defined as the hardware, software, and/or firmware of the information system responsible for enforcing the system security policy and supporting the isolation of code and data on which the protection is based. Security functionality includes, but is not limited to, establishing system accounts, configuring access authorizations (i.e., permissions, privileges), setting events to be audited, and setting intrusion detection parameters.\n\nThis requirement applies to applications performing security functions and the applications performing security function verification/testing. \n\nSatisfies:FAU_NET_EXT.1.1, FMT_SMF.1.1(2) c.3 \nReference:PP-MDM-411057",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server is configured with the periodicity of the following commands to the agent of six hours or less: \n- query connectivity status;\n- query the current version of the managed device firmware/software;\n- query the current version of installed mobile applications;\n- read audit logs kept by the managed device.\n\nIf the UEM server is not configured with the periodicity of the following commands to the agent of six hours or less: \n- query connectivity status;\n- query the current version of the managed device firmware/software;\n- query the current version of installed mobile applications;\n- read audit logs kept by the managed device,\nthis is a finding.",
            "FixText": "Configure the UEM server with the periodicity of the following commands to the agent of six hours or less: \n- query connectivity status;\n- query the current version of the managed device firmware/software;\n- query the current version of installed mobile applications;\n- read audit logs kept by the managed device.",
            "CCI": "CCI-002696"
        },
        {
            "VulnID": "V-234623",
            "RuleID": "SV-234623r617355_rule",
            "StigID": "SRG-APP-000473-UEM-000348",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000473",
            "RuleTitle": "The UEM server must run a suite of self-tests during initial start-up (power on) to demonstrate correct operation of the server.",
            "Description": "<VulnDiscussion>Without verification, security functions may not operate correctly and this failure may go unnoticed. \n\nSecurity function is defined as the hardware, software, and/or firmware of the information system responsible for enforcing the system security policy and supporting the isolation of code and data on which the protection is based. Security functionality includes, but is not limited to, establishing system accounts, configuring access authorizations (i.e., permissions, privileges), setting events to be audited, and setting intrusion detection parameters.\n\nNotifications provided by information systems include, for example, electronic alerts to system administrators, messages to local computer consoles, and/or hardware indications, such as lights.\n\nThis requirement applies to applications performing security functions and the applications performing security function verification/testing. \n\nSatisfies:FPT_TST_EXT.1.1</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Without verification, security functions may not operate correctly and this failure may go unnoticed. \n\nSecurity function is defined as the hardware, software, and/or firmware of the information system responsible for enforcing the system security policy and supporting the isolation of code and data on which the protection is based. Security functionality includes, but is not limited to, establishing system accounts, configuring access authorizations (i.e., permissions, privileges), setting events to be audited, and setting intrusion detection parameters.\n\nNotifications provided by information systems include, for example, electronic alerts to system administrators, messages to local computer consoles, and/or hardware indications, such as lights.\n\nThis requirement applies to applications performing security functions and the applications performing security function verification/testing. \n\nSatisfies:FPT_TST_EXT.1.1",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server runs a suite of self-tests during initial start-up (power on) to demonstrate correct operation of the server.\n\nIf the UEM server does not run a suite of self-tests during initial start-up (power on) to demonstrate correct operation of the server, this is a finding.",
            "FixText": "Configure the UEM server to run a suite of self-tests during initial start-up (power on) to demonstrate correct operation of the server.",
            "CCI": "CCI-002699"
        },
        {
            "VulnID": "V-234624",
            "RuleID": "SV-234624r617355_rule",
            "StigID": "SRG-APP-000474-UEM-000349",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000474",
            "RuleTitle": "The UEM server must alert the system administrator when anomalies in the operation of security functions are discovered.",
            "Description": "<VulnDiscussion>If anomalies are not acted upon, security functions may fail to secure the system. \n\nSecurity function is defined as the hardware, software, and/or firmware of the information system responsible for enforcing the system security policy and supporting the isolation of code and data on which the protection is based. Security functionality includes, but is not limited to, establishing system accounts, configuring access authorizations (i.e., permissions, privileges), setting events to be audited, and setting intrusion detection parameters.\n\nNotifications provided by information systems include messages to local computer consoles, and/or hardware indications, such as lights.\n\nThis requirement applies to applications performing security functions and the applications performing security function verification/testing. \n\nSatisfies:FAU_ALT_EXT.1.1 c.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "If anomalies are not acted upon, security functions may fail to secure the system. \n\nSecurity function is defined as the hardware, software, and/or firmware of the information system responsible for enforcing the system security policy and supporting the isolation of code and data on which the protection is based. Security functionality includes, but is not limited to, establishing system accounts, configuring access authorizations (i.e., permissions, privileges), setting events to be audited, and setting intrusion detection parameters.\n\nNotifications provided by information systems include messages to local computer consoles, and/or hardware indications, such as lights.\n\nThis requirement applies to applications performing security functions and the applications performing security function verification/testing. \n\nSatisfies:FAU_ALT_EXT.1.1 c.",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server alerts the system administrator when anomalies in the operation of security functions are discovered.\n\nIf the UEM server does not alert the system administrator when anomalies in the operation of security functions are discovered, this is a finding.",
            "FixText": "Configure the UEM server to alert the system administrator when anomalies in the operation of security functions are discovered.",
            "CCI": "CCI-002702"
        },
        {
            "VulnID": "V-234629",
            "RuleID": "SV-234629r617355_rule",
            "StigID": "SRG-APP-000479-UEM-000354",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000479",
            "RuleTitle": "The UEM server must be configured to verify software updates to the server using a digital signature mechanism prior to installing those updates.",
            "Description": "<VulnDiscussion>Unauthorized modifications to software or firmware may be indicative of a sophisticated, targeted cyber-attack. Cryptographic authentication includes, for example, verifying that software or firmware components have been digitally signed using certificates recognized and approved by organizations. Code signing is an effective method to protect against malicious code. \n\nSatisfies:FPT_TUD_EXT.1.3</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Unauthorized modifications to software or firmware may be indicative of a sophisticated, targeted cyber-attack. Cryptographic authentication includes, for example, verifying that software or firmware components have been digitally signed using certificates recognized and approved by organizations. Code signing is an effective method to protect against malicious code. \n\nSatisfies:FPT_TUD_EXT.1.3",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server verifies software updates to the server using a digital signature mechanism prior to installing those updates.\n\nIf the UEM server does not verify software updates to the server using a digital signature mechanism prior to installing those updates, this is a finding.",
            "FixText": "Configure the UEM server to verify software updates to the server using a digital signature mechanism prior to installing those updates.",
            "CCI": "CCI-002740"
        },
        {
            "VulnID": "V-234642",
            "RuleID": "SV-234642r617355_rule",
            "StigID": "SRG-APP-000492-UEM-000367",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000492",
            "RuleTitle": "The UEM server must generate audit records when successful/unsuccessful attempts to access security objects occur.",
            "Description": "<VulnDiscussion>Without generating audit records specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident, or identify those responsible for one. \n\nAudit records can be generated from various components within the information system (e.g., module or policy filter). \n\nSatisfies:FAU_ALT_EXT.1.1, FAU_GEN.1.1(1), FMT_SMF.1.1(2)c.8 \nReference:PP-MDM-411065, PP-MDM-412000</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Without generating audit records specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident, or identify those responsible for one. \n\nAudit records can be generated from various components within the information system (e.g., module or policy filter). \n\nSatisfies:FAU_ALT_EXT.1.1, FAU_GEN.1.1(1), FMT_SMF.1.1(2)c.8 \nReference:PP-MDM-411065, PP-MDM-412000",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server generates audit records when successful/unsuccessful attempts to access security objects occur.\n\nIf the UEM server does not generate audit records when successful/unsuccessful attempts to access security objects occur, this is a finding.",
            "FixText": "Configure the UEM server to generate audit records when successful/unsuccessful attempts to access security objects occur.",
            "CCI": "CCI-000172"
        },
        {
            "VulnID": "V-234645",
            "RuleID": "SV-234645r617401_rule",
            "StigID": "SRG-APP-000495-UEM-000370",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000495",
            "RuleTitle": "The UEM server must generate audit records when successful/unsuccessful attempts to modify privileges occur.",
            "Description": "<VulnDiscussion>Without generating audit records that are specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident, or identify those responsible for one. \n\nAudit records can be generated from various components within the information system (e.g., module or policy filter). \n\nSatisfies:FAU_ALT_EXT.1.1, FAU_GEN.1.1(1), FMT_SMF.1.1(2)c.8 \nReference:PP-MDM-411065, PP-MDM-412000</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Without generating audit records that are specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident, or identify those responsible for one. \n\nAudit records can be generated from various components within the information system (e.g., module or policy filter). \n\nSatisfies:FAU_ALT_EXT.1.1, FAU_GEN.1.1(1), FMT_SMF.1.1(2)c.8 \nReference:PP-MDM-411065, PP-MDM-412000",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server generates audit records when successful/unsuccessful attempts to modify privileges occur.\n\nIf the UEM server does not generate audit records when successful/unsuccessful attempts to modify privileges occur, this is a finding.",
            "FixText": "Configure the UEM server to generate audit records when successful/unsuccessful attempts to modify privileges occur.",
            "CCI": "CCI-000172"
        },
        {
            "VulnID": "V-234646",
            "RuleID": "SV-234646r617355_rule",
            "StigID": "SRG-APP-000496-UEM-000371",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000496",
            "RuleTitle": "The UEM server must generate audit records when successful/unsuccessful attempts to modify security objects occur.",
            "Description": "<VulnDiscussion>Without generating audit records that are specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident, or identify those responsible for one. \n\nAudit records can be generated from various components within the information system (e.g., module or policy filter). \n\nSatisfies:FAU_ALT_EXT.1.1, FAU_GEN.1.1(1), FMT_SMF.1.1(2)c.8 \nReference:PP-MDM-411065, PP-MDM-412000</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Without generating audit records that are specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident, or identify those responsible for one. \n\nAudit records can be generated from various components within the information system (e.g., module or policy filter). \n\nSatisfies:FAU_ALT_EXT.1.1, FAU_GEN.1.1(1), FMT_SMF.1.1(2)c.8 \nReference:PP-MDM-411065, PP-MDM-412000",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server generates audit records when successful/unsuccessful attempts to modify security objects occur.\n\nIf the UEM server does not generate audit records when successful/unsuccessful attempts to modify security objects occur, this is a finding.",
            "FixText": "Configure the UEM server to generate audit records when successful/unsuccessful attempts to modify security objects occur.",
            "CCI": "CCI-000172"
        },
        {
            "VulnID": "V-234649",
            "RuleID": "SV-234649r617355_rule",
            "StigID": "SRG-APP-000499-UEM-000374",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000499",
            "RuleTitle": "The UEM server must generate audit records when successful/unsuccessful attempts to delete privileges occur.",
            "Description": "<VulnDiscussion>Without generating audit records that are specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident, or identify those responsible for one. \n\nAudit records can be generated from various components within the information system (e.g., module or policy filter). \n\nSatisfies:FAU_ALT_EXT.1.1, FAU_GEN.1.1(1), FMT_SMF.1.1(2)c.8 \nReference:PP-MDM-411065, PP-MDM-412000</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Without generating audit records that are specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident, or identify those responsible for one. \n\nAudit records can be generated from various components within the information system (e.g., module or policy filter). \n\nSatisfies:FAU_ALT_EXT.1.1, FAU_GEN.1.1(1), FMT_SMF.1.1(2)c.8 \nReference:PP-MDM-411065, PP-MDM-412000",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server generates audit records when successful/unsuccessful attempts to delete privileges occur.\n\nIf the UEM server does not generate audit records when successful/unsuccessful attempts to delete privileges occur, this is a finding.",
            "FixText": "Configure the UEM server to generate audit records when successful/unsuccessful attempts to delete privileges occur.",
            "CCI": "CCI-000172"
        },
        {
            "VulnID": "V-234651",
            "RuleID": "SV-234651r617355_rule",
            "StigID": "SRG-APP-000501-UEM-000376",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000501",
            "RuleTitle": "The UEM server must generate audit records when successful/unsuccessful attempts to delete security objects occur.",
            "Description": "<VulnDiscussion>Without generating audit records that are specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident, or identify those responsible for one. \n\nAudit records can be generated from various components within the information system (e.g., module or policy filter). \n\nSatisfies:FAU_ALT_EXT.1.1, FAU_GEN.1.1(1), FMT_SMF.1.1(2)c.8 \nReference:PP-MDM-411065, PP-MDM-412000</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Without generating audit records that are specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident, or identify those responsible for one. \n\nAudit records can be generated from various components within the information system (e.g., module or policy filter). \n\nSatisfies:FAU_ALT_EXT.1.1, FAU_GEN.1.1(1), FMT_SMF.1.1(2)c.8 \nReference:PP-MDM-411065, PP-MDM-412000",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server generates audit records when successful/unsuccessful attempts to delete security objects occur.\n\nIf the UEM server does not generate audit records when successful/unsuccessful attempts to delete security objects occur, this is a finding.",
            "FixText": "Configure the UEM server to generate audit records when successful/unsuccessful attempts to delete security objects occur.",
            "CCI": "CCI-000172"
        },
        {
            "VulnID": "V-234653",
            "RuleID": "SV-234653r617355_rule",
            "StigID": "SRG-APP-000503-UEM-000378",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000503",
            "RuleTitle": "The UEM server must generate audit records when successful/unsuccessful logon attempts occur.",
            "Description": "<VulnDiscussion>Without generating audit records that are specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident, or identify those responsible for one. \n\nAudit records can be generated from various components within the information system (e.g., module or policy filter). \n\nSatisfies:FAU_ALT_EXT.1.1, FAU_GEN.1.1(1), FMT_SMF.1.1(2)c.8 \nReference:PP-MDM-411065, PP-MDM-412000</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Without generating audit records that are specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident, or identify those responsible for one. \n\nAudit records can be generated from various components within the information system (e.g., module or policy filter). \n\nSatisfies:FAU_ALT_EXT.1.1, FAU_GEN.1.1(1), FMT_SMF.1.1(2)c.8 \nReference:PP-MDM-411065, PP-MDM-412000",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server generates audit records when successful/unsuccessful logon attempts occur.\n\nIf the UEM server does not generate audit records when successful/unsuccessful logon attempts occur, this is a finding.",
            "FixText": "Configure the UEM server to generate audit records when successful/unsuccessful logon attempts occur.",
            "CCI": "CCI-000172"
        },
        {
            "VulnID": "V-234654",
            "RuleID": "SV-234654r617355_rule",
            "StigID": "SRG-APP-000504-UEM-000379",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000504",
            "RuleTitle": "The UEM server must generate audit records for privileged activities or other system-level access.",
            "Description": "<VulnDiscussion>Without generating audit records that are specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident, or identify those responsible for one. \n\nAudit records can be generated from various components within the information system (e.g., module or policy filter). \n\nSatisfies:FAU_ALT_EXT.1.1, FAU_GEN.1.1(1), FMT_SMF.1.1(2)c.8 \nReference:PP-MDM-411065, PP-MDM-412000</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Without generating audit records that are specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident, or identify those responsible for one. \n\nAudit records can be generated from various components within the information system (e.g., module or policy filter). \n\nSatisfies:FAU_ALT_EXT.1.1, FAU_GEN.1.1(1), FMT_SMF.1.1(2)c.8 \nReference:PP-MDM-411065, PP-MDM-412000",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server generates audit records for privileged activities or other system-level access.\n\nIf the UEM server does not generate audit records for privileged activities or other system-level access, this is a finding.",
            "FixText": "Configure the UEM server to generate audit records for privileged activities or other system-level access.",
            "CCI": "CCI-000172"
        },
        {
            "VulnID": "V-234655",
            "RuleID": "SV-234655r617355_rule",
            "StigID": "SRG-APP-000505-UEM-000380",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000505",
            "RuleTitle": "The UEM server must generate audit records showing starting and ending time for user access to the system.",
            "Description": "<VulnDiscussion>Without generating audit records that are specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident, or identify those responsible for one. \n\nAudit records can be generated from various components within the information system (e.g., module or policy filter). \n\nSatisfies:FAU_ALT_EXT.1.1, FAU_GEN.1.1(1), FMT_SMF.1.1(2)c.8 \nReference:PP-MDM-411065, PP-MDM-412000</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Without generating audit records that are specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident, or identify those responsible for one. \n\nAudit records can be generated from various components within the information system (e.g., module or policy filter). \n\nSatisfies:FAU_ALT_EXT.1.1, FAU_GEN.1.1(1), FMT_SMF.1.1(2)c.8 \nReference:PP-MDM-411065, PP-MDM-412000",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server generates audit records showing starting and ending time for user access to the system.\n\nIf the UEM server does not generate audit records showing starting and ending time for user access to the system, this is a finding.",
            "FixText": "Configure the UEM server to generate audit records showing starting and ending time for user access to the system.",
            "CCI": "CCI-000172"
        },
        {
            "VulnID": "V-234656",
            "RuleID": "SV-234656r617355_rule",
            "StigID": "SRG-APP-000506-UEM-000381",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000506",
            "RuleTitle": "The UEM server must generate audit records when concurrent logons from different workstations occur.",
            "Description": "<VulnDiscussion>Without generating audit records that are specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident, or identify those responsible for one. \n\nAudit records can be generated from various components within the information system (e.g., module or policy filter). \n\nSatisfies:FAU_ALT_EXT.1.1, FAU_GEN.1.1(1), FMT_SMF.1.1(2)c.8 \nReference:PP-MDM-411065, PP-MDM-412000</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Without generating audit records that are specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident, or identify those responsible for one. \n\nAudit records can be generated from various components within the information system (e.g., module or policy filter). \n\nSatisfies:FAU_ALT_EXT.1.1, FAU_GEN.1.1(1), FMT_SMF.1.1(2)c.8 \nReference:PP-MDM-411065, PP-MDM-412000",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server generates audit records when concurrent logons from different workstations occur.\n\nIf the UEM server does not generate audit records when concurrent logons from different workstations occur, this is a finding.",
            "FixText": "Configure the UEM server to generate audit records when concurrent logons from different workstations occur.",
            "CCI": "CCI-000172"
        },
        {
            "VulnID": "V-234657",
            "RuleID": "SV-234657r617355_rule",
            "StigID": "SRG-APP-000507-UEM-000382",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000507",
            "RuleTitle": "The UEM server must generate audit records when successful/unsuccessful accesses to objects occur.",
            "Description": "<VulnDiscussion>Without generating audit records that are specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident, or identify those responsible for one. \n\nAudit records can be generated from various components within the information system (e.g., module or policy filter). \n\nSatisfies:FAU_ALT_EXT.1.1, FAU_GEN.1.1(1), FMT_SMF.1.1(2)c.8 \nReference:PP-MDM-411065, PP-MDM-412000</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Without generating audit records that are specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident, or identify those responsible for one. \n\nAudit records can be generated from various components within the information system (e.g., module or policy filter). \n\nSatisfies:FAU_ALT_EXT.1.1, FAU_GEN.1.1(1), FMT_SMF.1.1(2)c.8 \nReference:PP-MDM-411065, PP-MDM-412000",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server generates audit records when successful/unsuccessful accesses to objects occur.\n\nIf the UEM server does not generate audit records when successful/unsuccessful accesses to objects occur, this is a finding.",
            "FixText": "Configure the UEM server to generate audit records when successful/unsuccessful accesses to objects occur.",
            "CCI": "CCI-000172"
        },
        {
            "VulnID": "V-234658",
            "RuleID": "SV-234658r617355_rule",
            "StigID": "SRG-APP-000508-UEM-000383",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000508",
            "RuleTitle": "The UEM server must generate audit records for all direct access to the information system.",
            "Description": "<VulnDiscussion>Without generating audit records that are specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident, or identify those responsible for one. \n\nAudit records can be generated from various components within the information system (e.g., module or policy filter). \n\nSatisfies:FAU_ALT_EXT.1.1, FAU_GEN.1.1(1), FMT_SMF.1.1(2)c.8 \nReference:PP-MDM-411065, PP-MDM-412000</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Without generating audit records that are specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident, or identify those responsible for one. \n\nAudit records can be generated from various components within the information system (e.g., module or policy filter). \n\nSatisfies:FAU_ALT_EXT.1.1, FAU_GEN.1.1(1), FMT_SMF.1.1(2)c.8 \nReference:PP-MDM-411065, PP-MDM-412000",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server generates audit records for all direct access to the information system.\n\nIf the UEM server does not generate audit records for all direct access to the information system, this is a finding.",
            "FixText": "Configure the UEM server to generate audit records for all direct access to the information system.",
            "CCI": "CCI-000172"
        },
        {
            "VulnID": "V-234659",
            "RuleID": "SV-234659r617355_rule",
            "StigID": "SRG-APP-000509-UEM-000384",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000509",
            "RuleTitle": "The UEM server must generate audit records for all account creations, modifications, disabling, and termination events.",
            "Description": "<VulnDiscussion>Without generating audit records that are specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident, or identify those responsible for one. \n\nAudit records can be generated from various components within the information system (e.g., module or policy filter). \n\nSatisfies:FAU_ALT_EXT.1.1, FAU_GEN.1.1(1), FMT_SMF.1.1(2)c.8 \nReference:PP-MDM-411065, PP-MDM-412000</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Without generating audit records that are specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident, or identify those responsible for one. \n\nAudit records can be generated from various components within the information system (e.g., module or policy filter). \n\nSatisfies:FAU_ALT_EXT.1.1, FAU_GEN.1.1(1), FMT_SMF.1.1(2)c.8 \nReference:PP-MDM-411065, PP-MDM-412000",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Requirement is Not Applicable when UEM server is configured to use DoD Central Directory Service for administrator account authentication.\n\nVerify the UEM server generates audit records for all account creations, modifications, disabling, and termination events.\n\nIf the UEM server does not generate audit records for all account creations, modifications, disabling, and termination events, this is a finding.",
            "FixText": "Configure the UEM server to generate audit records for all account creations, modifications, disabling, and termination events.",
            "CCI": "CCI-000172"
        },
        {
            "VulnID": "V-234664",
            "RuleID": "SV-234664r617355_rule",
            "StigID": "SRG-APP-000514-UEM-000389",
            "Severity": "high",
            "Cat": "CAT I",
            "Classification": "",
            "GroupTitle": "SRG-APP-000514",
            "RuleTitle": "The UEM server must use a FIPS-validated cryptographic module to generate cryptographic hashes.",
            "Description": "<VulnDiscussion>FIPS 140-2 precludes the use of invalidated cryptography for the cryptographic protection of sensitive or valuable data within Federal systems. Unvalidated cryptography is viewed by NIST as providing no protection to the information or data. In effect, the data would be considered unprotected plaintext. If the agency specifies that the information or data be cryptographically protected, then FIPS 140-2 is applicable. In essence, if cryptography is required, it must be validated. Cryptographic modules that have been approved for classified use may be used in lieu of modules that have been validated against the FIPS 140-2 standard. \n\nThe cryptographic module used must have at least one validated hash algorithm. This validated hash algorithm must be used to generate cryptographic hashes for all cryptographic security function within the product being evaluated. \n\nSatisfies:FCS_COP.1.1(2)</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "FIPS 140-2 precludes the use of invalidated cryptography for the cryptographic protection of sensitive or valuable data within Federal systems. Unvalidated cryptography is viewed by NIST as providing no protection to the information or data. In effect, the data would be considered unprotected plaintext. If the agency specifies that the information or data be cryptographically protected, then FIPS 140-2 is applicable. In essence, if cryptography is required, it must be validated. Cryptographic modules that have been approved for classified use may be used in lieu of modules that have been validated against the FIPS 140-2 standard. \n\nThe cryptographic module used must have at least one validated hash algorithm. This validated hash algorithm must be used to generate cryptographic hashes for all cryptographic security function within the product being evaluated. \n\nSatisfies:FCS_COP.1.1(2)",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server uses a FIPS-validated cryptographic module to generate cryptographic hashes.\n\nIf the UEM server does not use a FIPS-validated cryptographic module to generate cryptographic hashes, this is a finding.",
            "FixText": "Configure the UEM server to use a FIPS-validated cryptographic module to generate cryptographic hashes.",
            "CCI": "CCI-002450"
        },
        {
            "VulnID": "V-234665",
            "RuleID": "SV-234665r617355_rule",
            "StigID": "SRG-APP-000515-UEM-000390",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000515",
            "RuleTitle": "The UEM server must, at a minimum, off-load audit logs of interconnected systems in real time and off-load standalone systems weekly.",
            "Description": "<VulnDiscussion>Information stored in one location is vulnerable to accidental or incidental deletion or alteration.\n\nOff-loading is a common process in information systems with limited audit storage capacity. \n\nSatisfies:FMT_SMF.1.1(2) c.8, FAU_STG_EXT.1.1(1) \nReference:PP-MDM-411054</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Information stored in one location is vulnerable to accidental or incidental deletion or alteration.\n\nOff-loading is a common process in information systems with limited audit storage capacity. \n\nSatisfies:FMT_SMF.1.1(2) c.8, FAU_STG_EXT.1.1(1) \nReference:PP-MDM-411054",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server, at a minimum, off-loads audit logs of interconnected systems in real time and off-load standalone systems weekly.\n\nIf the UEM server does not off-load audit logs of interconnected systems in real time and off-load standalone systems weekly, this is a finding.",
            "FixText": "Configure the UEM server to, at a minimum, off-load audit logs of interconnected systems in real time and off-load standalone systems weekly.",
            "CCI": "CCI-001851"
        },
        {
            "VulnID": "V-234666",
            "RuleID": "SV-234666r617355_rule",
            "StigID": "SRG-APP-000516-UEM-000391",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000516",
            "RuleTitle": "The UEM server must be configured in accordance with the security configuration settings based on DoD security configuration or implementation guidance, including STIGs, NSA configuration guides, CTOs, and DTMs.",
            "Description": "<VulnDiscussion>Configuring the application to implement organization-wide security implementation guides and security checklists ensures compliance with federal standards and establishes a common security baseline across DoD that reflects the most restrictive security posture consistent with operational requirements. \n\nConfiguration settings are the set of parameters that can be changed that affect the security posture and/or functionality of the system. Security-related parameters are those parameters impacting the security state of the application, including the parameters required to satisfy other security control requirements.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Configuring the application to implement organization-wide security implementation guides and security checklists ensures compliance with federal standards and establishes a common security baseline across DoD that reflects the most restrictive security posture consistent with operational requirements. \n\nConfiguration settings are the set of parameters that can be changed that affect the security posture and/or functionality of the system. Security-related parameters are those parameters impacting the security state of the application, including the parameters required to satisfy other security control requirements.",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server is configured in accordance with the security configuration settings based on DoD security configuration or implementation guidance, including STIGs, NSA configuration guides, CTOs, and DTMs.\n\nIf the UEM server is not configured in accordance with the security configuration settings based on DoD security configuration or implementation guidance, including STIGs, NSA configuration guides, CTOs, and DTMs, this is a finding.",
            "FixText": "Configure the UEM server in accordance with the security configuration settings based on DoD security configuration or implementation guidance, including STIGs, NSA configuration guides, CTOs, and DTMs.",
            "CCI": "CCI-000366"
        },
        {
            "VulnID": "V-234667",
            "RuleID": "SV-234667r617355_rule",
            "StigID": "SRG-APP-000516-UEM-000392",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000516",
            "RuleTitle": "The UEM server must be configured to allow authorized administrators to read all audit data from audit records on the server.",
            "Description": "<VulnDiscussion>Successful incident response and auditing relies on timely, accurate system information and analysis in order to allow the organization to identify and respond to potential incidents in a proficient manner. If the application does not provide the ability to centrally review the application logs, forensic analysis is negatively impacted. \n\nSegregation of logging data to multiple disparate computer systems is counterproductive and makes log analysis and log event alarming difficult to implement and manage, particularly when the system or application has multiple logging components written to different locations or systems.\n\nAutomated mechanisms for centralized reviews and analyses include, for example, Security Information Management products. \n\nSatisfies:FAU_SAR.1.1 \nReference:PP-MDM-413000</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Successful incident response and auditing relies on timely, accurate system information and analysis in order to allow the organization to identify and respond to potential incidents in a proficient manner. If the application does not provide the ability to centrally review the application logs, forensic analysis is negatively impacted. \n\nSegregation of logging data to multiple disparate computer systems is counterproductive and makes log analysis and log event alarming difficult to implement and manage, particularly when the system or application has multiple logging components written to different locations or systems.\n\nAutomated mechanisms for centralized reviews and analyses include, for example, Security Information Management products. \n\nSatisfies:FAU_SAR.1.1 \nReference:PP-MDM-413000",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server allows authorized administrators to read all audit data from audit records on the server.\n\nIf the UEM server does not allow authorized administrators to read all audit data from audit records on the server, this is a finding.",
            "FixText": "Configure the UEM server to allow authorized administrators to read all audit data from audit records on the server.",
            "CCI": "CCI-000366"
        },
        {
            "VulnID": "V-234668",
            "RuleID": "SV-234668r617355_rule",
            "StigID": "SRG-APP-000555-UEM-000393",
            "Severity": "high",
            "Cat": "CAT I",
            "Classification": "",
            "GroupTitle": "SRG-APP-000555",
            "RuleTitle": "The UEM server must be configured to implement FIPS 140-2 mode for all server and agent encryption.",
            "Description": "<VulnDiscussion>Without confidentiality protection mechanisms, unauthorized individuals may gain access to sensitive information via a remote access session. \n\nRemote access is access to DoD non-public information systems by an authorized user (or an information system) communicating through an external, non-organization-controlled network.\n\nA block cipher mode is an algorithm that features the use of a symmetric key block cipher algorithm to provide an information service, such as confidentiality or authentication.\n\nAES is the FIPS-validated cipher block cryptographic algorithm approved for use in DoD. For an algorithm implementation to be listed on a FIPS 140-2 cryptographic module validation certificate as an approved security function, the algorithm implementation must meet all the requirements of FIPS 140-2 and must successfully complete the cryptographic algorithm validation process. Currently, NIST has approved the following confidentiality modes to be used with approved block ciphers in a series of special publications: ECB, CBC, OFB, CFB, CTR, XTS-AES, FF1, FF3, CCM, GCM, KW, KWP, and TKW. \n\nSatisfies:FCS_COP.1.1(1), FTP_TRP.1.1(1)  \nReference:PP-MDM-414001</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Without confidentiality protection mechanisms, unauthorized individuals may gain access to sensitive information via a remote access session. \n\nRemote access is access to DoD non-public information systems by an authorized user (or an information system) communicating through an external, non-organization-controlled network.\n\nA block cipher mode is an algorithm that features the use of a symmetric key block cipher algorithm to provide an information service, such as confidentiality or authentication.\n\nAES is the FIPS-validated cipher block cryptographic algorithm approved for use in DoD. For an algorithm implementation to be listed on a FIPS 140-2 cryptographic module validation certificate as an approved security function, the algorithm implementation must meet all the requirements of FIPS 140-2 and must successfully complete the cryptographic algorithm validation process. Currently, NIST has approved the following confidentiality modes to be used with approved block ciphers in a series of special publications: ECB, CBC, OFB, CFB, CTR, XTS-AES, FF1, FF3, CCM, GCM, KW, KWP, and TKW. \n\nSatisfies:FCS_COP.1.1(1), FTP_TRP.1.1(1)  \nReference:PP-MDM-414001",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify FIPS 140-2 mode has been implemented on the UEM server for all server and agent encryption.\n\nIf FIPS 140-2 mode has not been implemented on the UEM server for all server and agent encryption, this is a finding.",
            "FixText": "Configure the UEM server to implement FIPS 140-2 mode for all server and agent encryption.",
            "CCI": "CCI-002450"
        },
        {
            "VulnID": "V-234669",
            "RuleID": "SV-234669r617355_rule",
            "StigID": "SRG-APP-000560-UEM-000394",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000560",
            "RuleTitle": "The UEM server must be configured to prohibit client negotiation to TLS 1.1, TLS 1.0, SSL 2.0, or SSL 3.0.",
            "Description": "<VulnDiscussion>Using older unauthorized versions or incorrectly configuring protocol negotiation makes the gateway vulnerable to known and unknown attacks that exploit vulnerabilities in this protocol.\n\nThis requirement applies to Transport Layer Security (TLS) gateways (also known as Secure Sockets Layer [SSL] gateways), web servers, and web applications. Application protocols such as HTTPS and DNSSEC use TLS as the underlying security protocol and thus are in scope for this requirement. NIST SP 800-52 provides guidance for client negotiation, either on DoD-only or on public-facing servers. \n\nSatisfies:FCS_TLSC_EXT.1.1 \nReference:PP-MDM-412061</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Using older unauthorized versions or incorrectly configuring protocol negotiation makes the gateway vulnerable to known and unknown attacks that exploit vulnerabilities in this protocol.\n\nThis requirement applies to Transport Layer Security (TLS) gateways (also known as Secure Sockets Layer [SSL] gateways), web servers, and web applications. Application protocols such as HTTPS and DNSSEC use TLS as the underlying security protocol and thus are in scope for this requirement. NIST SP 800-52 provides guidance for client negotiation, either on DoD-only or on public-facing servers. \n\nSatisfies:FCS_TLSC_EXT.1.1 \nReference:PP-MDM-412061",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server is configured to prohibit client negotiation to TLS 1.1, TLS 1.0, SSL 2.0, or SSL 3.0.\n\nIf the UEM server is not configured to prohibit client negotiation to TLS 1.1, TLS 1.0, SSL 2.0, or SSL 3.0, this is a finding.",
            "FixText": "Configure the UEM server to prohibit client negotiation to TLS 1.1, TLS 1.0, SSL 2.0, or SSL 3.0.",
            "CCI": "CCI-001453"
        },
        {
            "VulnID": "V-234673",
            "RuleID": "SV-234673r617355_rule",
            "StigID": "SRG-APP-000580-UEM-000398",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000580",
            "RuleTitle": "The UEM server must authenticate endpoint devices (servers) before establishing a local, remote, and/or network connection using bidirectional authentication that is cryptographically based.",
            "Description": "<VulnDiscussion>Without authenticating devices, unidentified or unknown devices may be introduced, thereby facilitating malicious activity. Bidirectional authentication provides stronger safeguards to validate the identity of other devices for connections that are of greater risk, such as remote connections.\n\nThis requires device-to-device authentication. Information systems must use IEEE 802.1x, Extensible Authentication Protocol [EAP], Radius server with EAP-Transport Layer Security [TLS] authentication, or Kerberos to identify/authenticate devices on local and/or wide area networks. \n\nSatisfies:FMT_SMF.1.1(2) b, FTP_ITC.1.1(1), FTP_ITC.1.2(1), FTP_ITC.1.3(1)  \nReference:PP-MDM-431009</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Without authenticating devices, unidentified or unknown devices may be introduced, thereby facilitating malicious activity. Bidirectional authentication provides stronger safeguards to validate the identity of other devices for connections that are of greater risk, such as remote connections.\n\nThis requires device-to-device authentication. Information systems must use IEEE 802.1x, Extensible Authentication Protocol [EAP], Radius server with EAP-Transport Layer Security [TLS] authentication, or Kerberos to identify/authenticate devices on local and/or wide area networks. \n\nSatisfies:FMT_SMF.1.1(2) b, FTP_ITC.1.1(1), FTP_ITC.1.2(1), FTP_ITC.1.3(1)  \nReference:PP-MDM-431009",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server authenticates endpoint devices (servers) before establishing a local, remote, and/or network connection using bidirectional authentication that is cryptographically based.\n\nIf the UEM server does not authenticate endpoint devices (servers) before establishing a local, remote, and/or network connection using bidirectional authentication that is cryptographically based, this is a finding.",
            "FixText": "Configure the UEM server to authenticate endpoint devices (servers) before establishing a local, remote, and/or network connection using bidirectional authentication that is cryptographically based.",
            "CCI": "CCI-001967"
        },
        {
            "VulnID": "V-234674",
            "RuleID": "SV-234674r617355_rule",
            "StigID": "SRG-APP-000585-UEM-000399",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000585",
            "RuleTitle": "If cipher suites using pre-shared keys are used for device authentication, the UEM server must have a minimum security strength of 112 bits or higher.",
            "Description": "<VulnDiscussion>Pre-shared keys are symmetric keys that are already in place prior to the initiation of a Transport Layer Security (TLS) session (e.g., as the result of a manual distribution). In general, pre-shared keys should not be used. However, the use of pre-shared keys may be appropriate for some closed environments that have stung key management best practices. \n\nPre-shared keys may be appropriate for constrained environments with limited processing, memory, or power. If pre-shared keys are appropriate and supported, the following additional guidelines must be followed. Consult 800-52 for recommended pre-shared key cipher suites for pre-shared keys. Pre-shared keys must be distributed in a secure manner, such as a secure manual distribution or using a key establishment certificate. These cipher suites employ a pre-shared key for device authentication (for both the server and the client) and may also use RSA or ephemeral Diffie-Hellman (DHE) algorithms for key establishment. \n\nBecause these cipher suites require pre-shared keys, these suites are not generally applicable to classic secure website applications and are not expected to be widely supported in TLS clients or TLS servers. NIST suggests that these suites be considered in particular for infrastructure applications, particularly if frequent authentication of the network entities is required. These cipher suites may be used with TLS versions 1.1 or 1.2. Note that cipher suites using GCM, SHA-256, or SHA-384 are only available in TLS 1.2.</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Pre-shared keys are symmetric keys that are already in place prior to the initiation of a Transport Layer Security (TLS) session (e.g., as the result of a manual distribution). In general, pre-shared keys should not be used. However, the use of pre-shared keys may be appropriate for some closed environments that have stung key management best practices. \n\nPre-shared keys may be appropriate for constrained environments with limited processing, memory, or power. If pre-shared keys are appropriate and supported, the following additional guidelines must be followed. Consult 800-52 for recommended pre-shared key cipher suites for pre-shared keys. Pre-shared keys must be distributed in a secure manner, such as a secure manual distribution or using a key establishment certificate. These cipher suites employ a pre-shared key for device authentication (for both the server and the client) and may also use RSA or ephemeral Diffie-Hellman (DHE) algorithms for key establishment. \n\nBecause these cipher suites require pre-shared keys, these suites are not generally applicable to classic secure website applications and are not expected to be widely supported in TLS clients or TLS servers. NIST suggests that these suites be considered in particular for infrastructure applications, particularly if frequent authentication of the network entities is required. These cipher suites may be used with TLS versions 1.1 or 1.2. Note that cipher suites using GCM, SHA-256, or SHA-384 are only available in TLS 1.2.",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify cipher suites using pre-shared keys are for device authentication have a minimum security strength of 112 bits or higher.\n\nIf cipher suites using pre-shared keys are for device authentication do not have a minimum security strength of 112 bits or higher, this is a finding.",
            "FixText": "If cipher suites using pre-shared keys are used for device authentication, configure the UEM server to have a minimum security strength of 112 bits or higher.",
            "CCI": "CCI-001967"
        },
        {
            "VulnID": "V-234676",
            "RuleID": "SV-234676r617355_rule",
            "StigID": "SRG-APP-000605-UEM-000401",
            "Severity": "medium",
            "Cat": "CAT II",
            "Classification": "",
            "GroupTitle": "SRG-APP-000605",
            "RuleTitle": "The UEM server must validate certificates used for Transport Layer Security (TLS) functions by performing RFC 5280-compliant certification path validation.",
            "Description": "<VulnDiscussion>A certificate's certification path is the path from the end entity certificate to a trusted root certification authority (CA). Certification path validation is necessary for a relying party to make an informed decision regarding acceptance of an end entity certificate. \n\nCertification path validation includes checks such as certificate issuer trust, time validity, and revocation status for each certificate in the certification path. Revocation status information for CA and subject certificates in a certification path is commonly provided via certificate revocation lists (CRLs) or online certificate status protocol (OCSP) responses. \n\nSatisfies:FIA_X509_EXT.1.1(1)</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "A certificate's certification path is the path from the end entity certificate to a trusted root certification authority (CA). Certification path validation is necessary for a relying party to make an informed decision regarding acceptance of an end entity certificate. \n\nCertification path validation includes checks such as certificate issuer trust, time validity, and revocation status for each certificate in the certification path. Revocation status information for CA and subject certificates in a certification path is commonly provided via certificate revocation lists (CRLs) or online certificate status protocol (OCSP) responses. \n\nSatisfies:FIA_X509_EXT.1.1(1)",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server validates certificates used for TLS functions by performing RFC 5280-compliant certification path validation.\n\nIf the UEM server does not validate certificates used for TLS functions by performing RFC 5280-compliant certification path validation, this is a finding.",
            "FixText": "Configure the UEM server to validate certificates used for Transport Layer Security (TLS) functions by performing RFC 5280-compliant certification path validation.",
            "CCI": "CCI-000185"
        },
        {
            "VulnID": "V-234677",
            "RuleID": "SV-234677r617355_rule",
            "StigID": "SRG-APP-000610-UEM-000402",
            "Severity": "high",
            "Cat": "CAT I",
            "Classification": "",
            "GroupTitle": "SRG-APP-000610",
            "RuleTitle": "The application must use FIPS-validated SHA-256 or higher hash function for digital signature generation and verification.",
            "Description": "<VulnDiscussion>Without cryptographic integrity protections, information can be altered by unauthorized users without detection.\n\nNote: Although allowed by SP800-131Ar1 for some applications, SHA-1 is considered a compromised hashing standard and is being phased out of use by industry and government standards. Unless required for legacy use, DoD systems should not be configured to use SHA-1 for integrity of remote access sessions. \n\nTo protect the integrity of the authenticator and authentication mechanism used for the cryptographic module used by the network device, the application, operating system, or protocol must be configured to use one of the following hash functions for hashing the password or other authenticator in accordance with SP 800-131Ar1: SHA-224, SHA-256, SHA-384, SHA-512, SHA-512/224, SHA-512/256, SHA3-224, SHA3-256, SHA3-384, and SHA3-512.\n\nFor digital signature verification, SP800-131Ar1 allows SHA-1 for legacy use only. \n\nSatisfies:FCS_COP.1.1(4)</VulnDiscussion><FalsePositives></FalsePositives><FalseNegatives></FalseNegatives><Documentable>false</Documentable><Mitigations></Mitigations><SeverityOverrideGuidance></SeverityOverrideGuidance><PotentialImpacts></PotentialImpacts><ThirdPartyTools></ThirdPartyTools><MitigationControl></MitigationControl><Responsibility></Responsibility><IAControls></IAControls>",
            "VulnDiscussion": "Without cryptographic integrity protections, information can be altered by unauthorized users without detection.\n\nNote: Although allowed by SP800-131Ar1 for some applications, SHA-1 is considered a compromised hashing standard and is being phased out of use by industry and government standards. Unless required for legacy use, DoD systems should not be configured to use SHA-1 for integrity of remote access sessions. \n\nTo protect the integrity of the authenticator and authentication mechanism used for the cryptographic module used by the network device, the application, operating system, or protocol must be configured to use one of the following hash functions for hashing the password or other authenticator in accordance with SP 800-131Ar1: SHA-224, SHA-256, SHA-384, SHA-512, SHA-512/224, SHA-512/256, SHA3-224, SHA3-256, SHA3-384, and SHA3-512.\n\nFor digital signature verification, SP800-131Ar1 allows SHA-1 for legacy use only. \n\nSatisfies:FCS_COP.1.1(4)",
            "FalsePositives": "",
            "FalseNegatives": "",
            "Documentable": "false",
            "Mitigations": "",
            "SeverityOverrideGuidance": "",
            "PotentialImpacts": "",
            "ThirdPartyTools": "",
            "MitigationControl": "",
            "Responsibility": "",
            "IAControls": "",
            "CheckText": "Verify the UEM server uses FIPS-validated SHA-256 or higher hash function for digital signature generation and verification.\n\nIf the UEM server does not use FIPS-validated SHA-256 or higher hash function for digital signature generation and verification, this is a finding.",
            "FixText": "Configure the UEM server to use FIPS-validated SHA-256 or higher hash function for digital signature generation and verification.",
            "CCI": "CCI-000803"
        }
    ]
}